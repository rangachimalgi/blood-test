{"version":3,"file":"static/js/377.583451a1.chunk.js","mappings":"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","sources":["components/CheckoutForm.js","components/Highlight.js","components/Product/Product.jsx","components/wrapper/Wrapper.jsx","components/Section.jsx","components/Slider.jsx","pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Modal, Button, InputGroup, Form } from \"react-bootstrap\";\nimport { availablePincodes } from \"../components/availablePincodes.js\";\n\nconst CheckoutForm = ({ show, handleClose, CartItem, setCartItem }) => {\n  const [orderData, setOrderData] = useState({\n    pincode: \"\",\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    phoneno: \"\",\n    age: \"\",\n    noOfPersons: 1,\n    appointmentDate: \"\",\n    beneficiaries: [],\n    tests: [], // Separate tests array for the order\n  });\n  const [pincodeMessage, setPincodeMessage] = useState(\"\");\n\n  useEffect(() => {\n    setOrderData((prevState) => ({\n      ...prevState,\n      beneficiaries: Array.from({ length: prevState.noOfPersons }, () => ({\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n      })),\n    }));\n  }, [orderData.noOfPersons]);\n\n  const checkAvailability = () => {\n    if (availablePincodes.includes(orderData.pincode)) {\n      setPincodeMessage(\"Service is available in your pincode!\");\n    } else {\n      setPincodeMessage(\"Sorry, service is not available in your pincode.\");\n    }\n  };\n\n  const handleBeneficiariesChange = (index, field, value) => {\n    const newBeneficiaries = [...orderData.beneficiaries];\n    newBeneficiaries[index] = { ...newBeneficiaries[index], [field]: value };\n    setOrderData({ ...orderData, beneficiaries: newBeneficiaries });\n  };\n\n  const handleTestChange = (test, isChecked) => {\n    let updatedTests = [...orderData.tests];\n    if (isChecked) {\n      if (!updatedTests.includes(test)) {\n        updatedTests.push(test);\n      }\n    } else {\n      updatedTests = updatedTests.filter((t) => t !== test);\n    }\n    setOrderData({ ...orderData, tests: updatedTests });\n  };\n\n  const handleSubmitOrder = async () => {\n    if (!availablePincodes.includes(orderData.pincode)) {\n      alert(\"Service is not available in your pincode.\");\n      return;\n    }\n\n    const orderDetails = {\n      pincode: orderData.pincode,\n      name: orderData.name,\n      email: orderData.email,\n      address: orderData.address,\n      phoneno: orderData.phoneno,\n      age: orderData.age,\n      noOfPersons: orderData.noOfPersons,\n      appointmentDate: orderData.appointmentDate,\n      beneficiaries: orderData.beneficiaries,\n      tests: orderData.tests, // Include tests here\n      cartItems: CartItem,\n    };\n\n    console.log(\"Order Details: \", orderDetails); // Add this line to log order details\n\n    // Log the size of the payload\n    const payloadSize = JSON.stringify(orderDetails).length;\n    console.log(`Payload size: ${payloadSize} bytes`);\n\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/orders`,\n        orderDetails\n      );\n      if (response.data.success) {\n        setCartItem([]);\n        handleClose();\n        alert(\"Order submitted successfully!\");\n      } else {\n        alert(\"Error submitting order. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting order:\", error);\n      alert(\"Error submitting order. Please try again.\");\n    }\n  };\n\n  const generateDateOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(currentDate.getDate() + i);\n      const dateString = date.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n      options.push(\n        <option key={i} value={dateString}>\n          {dateString}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Checkout Form</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"formPincode\">\n            <InputGroup>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Pincode\"\n                value={orderData.pincode}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, pincode: e.target.value })\n                }\n                name=\"pincode\"\n              />\n              <Button variant=\"outline-secondary\" onClick={checkAvailability}>\n                Check Availability\n              </Button>\n            </InputGroup>\n            <Form.Text className=\"text-muted\">{pincodeMessage}</Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formName\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              value={orderData.name}\n              onChange={(e) =>\n                setOrderData({ ...orderData, name: e.target.value })\n              }\n              name=\"name\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              value={orderData.email}\n              onChange={(e) =>\n                setOrderData({ ...orderData, email: e.target.value })\n              }\n              name=\"email\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formAddress\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your address\"\n              value={orderData.address}\n              onChange={(e) =>\n                setOrderData({ ...orderData, address: e.target.value })\n              }\n              name=\"address\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formPhoneNo\">\n            <Form.Label>Phone No</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your phone no\"\n              value={orderData.phoneno}\n              onChange={(e) =>\n                setOrderData({ ...orderData, phoneno: e.target.value })\n              }\n              name=\"phoneno\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formAge\">\n            <Form.Label>Age</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your age\"\n              value={orderData.age}\n              onChange={(e) =>\n                setOrderData({ ...orderData, age: e.target.value })\n              }\n              name=\"age\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formNoOfPersons\">\n            <Form.Label>Number of Persons</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={orderData.noOfPersons}\n              onChange={(e) => {\n                const newNoOfPersons = parseInt(e.target.value, 10);\n                setOrderData({\n                  ...orderData,\n                  noOfPersons: newNoOfPersons,\n                  beneficiaries: Array.from(\n                    { length: newNoOfPersons },\n                    (_, i) =>\n                      orderData.beneficiaries[i] || {\n                        name: \"\",\n                        age: \"\",\n                        gender: \"\",\n                      }\n                  ),\n                });\n              }}\n              name=\"noOfPersons\"\n            >\n              {[...Array(10).keys()].map((num) => (\n                <option key={num + 1} value={num + 1}>\n                  {num + 1}\n                </option>\n              ))}\n            </Form.Control>\n            <Form.Text className=\"text-warning\">\n              Note : The same set of tests/packages will be added for all\n              persons.\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formAppointmentDate\">\n            <Form.Label>Appointment Date</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={orderData.appointmentDate}\n              onChange={(e) =>\n                setOrderData({\n                  ...orderData,\n                  appointmentDate: e.target.value,\n                })\n              }\n              name=\"appointmentDate\"\n            >\n              {generateDateOptions()}\n            </Form.Control>\n          </Form.Group>\n          <h5>Beneficiaries</h5>\n          {orderData.beneficiaries.map((beneficiary, index) => (\n            <div key={index}>\n              <Form.Group controlId={`formBeneficiaryName${index}`}>\n                <Form.Label>Beneficiary Name {index + 1}</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter name\"\n                  value={beneficiary.name}\n                  onChange={(e) =>\n                    handleBeneficiariesChange(index, \"name\", e.target.value)\n                  }\n                  name={`beneficiaryName${index}`}\n                />\n              </Form.Group>\n              <Form.Group controlId={`formBeneficiaryAge${index}`}>\n                <Form.Label>Age</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter age\"\n                  value={beneficiary.age}\n                  onChange={(e) =>\n                    handleBeneficiariesChange(index, \"age\", e.target.value)\n                  }\n                  name={`beneficiaryAge${index}`}\n                />\n              </Form.Group>\n              <Form.Group controlId={`formBeneficiaryGender${index}`}>\n                <Form.Label>Gender</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={beneficiary.gender}\n                  onChange={(e) =>\n                    handleBeneficiariesChange(index, \"gender\", e.target.value)\n                  }\n                  name={`beneficiaryGender${index}`}\n                >\n                  <option value=\"\">Select Gender</option>\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                  <option value=\"Other\">Other</option>\n                </Form.Control>\n              </Form.Group>\n            </div>\n          ))}\n          <h5>Select Additional Tests (Optional)</h5>\n          <Form.Group controlId=\"formAdditionalTests\">\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Fasting Blood Sugar (FBS) @ Rs. 80 / Person\"\n              checked={orderData.tests.includes(\"Fasting Blood Sugar (FBS)\")}\n              onChange={(e) =>\n                handleTestChange(\n                  \"Fasting Blood Sugar (FBS)\",\n                  e.target.checked\n                )\n              }\n            />\n            <Form.Check\n              type=\"checkbox\"\n              label=\"CRP Test @ Rs. 480 / Person\"\n              checked={orderData.tests.includes(\"CRP Test\")}\n              onChange={(e) =>\n                handleTestChange(\"CRP Test\", e.target.checked)\n              }\n            />\n            <Form.Check\n              type=\"checkbox\"\n              label=\"ESR Test @ Rs. 120 / Person\"\n              checked={orderData.tests.includes(\"ESR Test\")}\n              onChange={(e) =>\n                handleTestChange(\"ESR Test\", e.target.checked)\n              }\n            />\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Covid Antibody IgG @ Rs. 400 / Person\"\n              checked={orderData.tests.includes(\"Covid Antibody IgG\")}\n              onChange={(e) =>\n                handleTestChange(\"Covid Antibody IgG\", e.target.checked)\n              }\n            />\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Complete Urine Analysis @ Rs. 510 / Person\"\n              checked={orderData.tests.includes(\"Complete Urine Analysis\")}\n              onChange={(e) =>\n                handleTestChange(\n                  \"Complete Urine Analysis\",\n                  e.target.checked\n                )\n              }\n            />\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Troponin - Heart Attack Risk Test (ACTNI) @ Rs. 650 / Person\"\n              checked={orderData.tests.includes(\n                \"Troponin - Heart Attack Risk Test (ACTNI)\"\n              )}\n              onChange={(e) =>\n                handleTestChange(\n                  \"Troponin - Heart Attack Risk Test (ACTNI)\",\n                  e.target.checked\n                )\n              }\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleSubmitOrder}>\n          Confirm Purchase\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CheckoutForm;\n","import React from \"react\";\nimport \"../Styles/Highlight.css\";\n\nconst Highlight = ({ number }) => {\n  return (\n    <div className=\"highlight\">\n      <div className=\"highlight-number\">{number}</div>\n      <div className=\"highlight-text\">Tests</div>\n    </div>\n  );\n};\n\nexport default Highlight;\n","import { useContext, useState, useEffect } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"./product.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DataContainer } from \"../../App\";\nimport { toast } from \"react-toastify\";\nimport CheckoutForm from \"../CheckoutForm\";\nimport Highlight from \"../../components/Highlight\"; // Import Highlight component\n\nconst Product = ({ title, productItem, addToCart, showImage = true, desc, enableHoverEffect, isShopList }) => {\n  const { setSelectedProduct } = useContext(DataContainer);\n  const router = useNavigate();\n  const [count, setCount] = useState(0);\n  const [showCheckout, setShowCheckout] = useState(false);\n  const [selectedPackage, setSelectedPackage] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const handleClick = () => {\n    setSelectedProduct(productItem);\n    localStorage.setItem(\n      `selectedProduct-${productItem.id}`,\n      JSON.stringify(productItem)\n    );\n    router(`/shop/${productItem.id}`);\n  };\n\n  const handleAddToCart = () => {\n    addToCart(productItem);\n    toast.success(\"Product has been added to cart!\");\n\n    if (isMobile && title === \"Popular Tests\") {\n      setTimeout(() => {\n        router('/cart');\n      }, 1000); // Delay to allow the toast message to be seen\n    }\n  };\n\n  const handleBookNow = (pkg) => {\n    setSelectedPackage(pkg);\n    setShowCheckout(true);\n  };\n\n  const handleCloseCheckout = () => {\n    setShowCheckout(false);\n    setSelectedPackage(null);\n  };\n\n  const extractNumberOfTests = (productName) => {\n    const match = productName.match(/\\((\\d+)\\s*Tests\\)/i);\n    return match ? match[1] : '';\n  };\n\n  const isPopularPackage = title === \"Popular Packages\";\n  const isPopularTest = title === \"Popular Tests\";\n\n  if (isShopList) {\n    return (\n      <Col\n        lg={12}\n        md={12}\n        sm={12}\n        xs={12}\n        className=\"product-list-item\"\n      >\n        <div className=\"product-info\">\n          <h3 onClick={handleClick}>{productItem.productName}</h3>\n          <p>Lab: {productItem.labName}</p>\n        </div>\n        <div className=\"product-price\">\n          <h4>&#8377;{productItem.price}</h4>\n          <div className=\"product-buttons\">\n            <button\n              className=\"product-button book-now\"\n              onClick={handleClick}\n            >\n              Book Now\n            </button>\n            <button\n              className=\"product-button add-to-cart\"\n              onClick={handleAddToCart}\n            >\n              Add To Cart\n            </button>\n          </div>\n        </div>\n      </Col>\n    );\n  } else {\n    return (\n      <Col\n        lg={3}\n        md={4}\n        sm={6}\n        xs={12}\n        className={`product mtop ${enableHoverEffect ? 'hover-enabled' : ''} ${isPopularPackage ? 'popular-packages' : ''}`}\n      >\n        {title === \"Big Discount\" && (\n          <span className=\"discount\">{productItem.discount}% Off</span>\n        )}\n        <div className=\"product-image-container\">\n          {showImage && (\n            <img\n              loading=\"lazy\"\n              onClick={handleClick}\n              src={productItem.imgUrl}\n              alt={productItem.productName}\n              className=\"product-image\"\n            />\n          )}\n          {enableHoverEffect && (\n            <div className=\"hover-overlay\">\n              <h2>{productItem.overlayTitle}</h2>\n              <ul>\n                {productItem.overlayDetails?.map((detail, index) => (\n                  <li key={index}>{detail}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n        {desc && <p className=\"product-description\">{desc}</p>}\n        {isPopularPackage && (\n          <Highlight number={extractNumberOfTests(productItem.productName)} />\n        )}\n        <div className=\"product-like\">\n          <label>{count}</label> <br />\n          <ion-icon name=\"heart-outline\" onClick={increment}></ion-icon>\n        </div>\n        <div className=\"product-details\">\n          <h3 onClick={handleClick}>{productItem.productName}</h3>\n          <div className=\"price\">\n            <h4>&#8377;{productItem.price}</h4>\n            {!isPopularPackage && (\n              <button\n                aria-label=\"Add\"\n                type=\"submit\"\n                className={`add ${isPopularTest ? 'add-to-cart-full' : ''}`}\n                onClick={handleAddToCart}\n              >\n                {isPopularTest ? 'Add to Cart' : <ion-icon name=\"add\"></ion-icon>}\n              </button>\n            )}\n          </div>\n          {isPopularPackage && (\n            <>\n              <div className=\"product-buttons\">\n                <button\n                  className=\"product-button book-now\"\n                  onClick={() => handleBookNow(productItem)}\n                >\n                  Book Now\n                </button>\n              </div>\n              <div className=\"extra-details\">\n                <ul>\n                  <li><i className=\"fa fa-check-circle\"></i> NABL, CAP, ISO 9001</li>\n                  <li><i className=\"fa fa-check-circle\"></i> Free Home Sample Pickup</li>\n                  <li><i className=\"fa fa-check-circle\"></i> Online Report Delivery</li>\n                </ul>\n              </div>\n            </>\n          )}\n        </div>\n        {showCheckout && (\n          <CheckoutForm\n            show={showCheckout}\n            handleClose={handleCloseCheckout}\n            CartItem={selectedPackage ? [selectedPackage] : []}\n            setCartItem={() => {}}\n          />\n        )}\n      </Col>\n    );\n  }\n};\n\nexport default Product;\n","import React from \"react\"\nimport \"./style.css\"\nimport { Col, Container, Row } from \"react-bootstrap\"\nimport { serviceData } from \"../../utils/products\"\n\nconst Wrapper = () => {\n  return (\n      <section className='wrapper background'>\n        <Container>\n          <Row>\n          {serviceData.map((val, index) => {\n            return (\n              <Col md={3} sm={5} xs={9} style={{backgroundColor:val.bg}} className='feature' key={index}>\n                <div className='icon'>\n                  {val.icon}\n                </div>\n                <h3>{val.title}</h3>\n                <p>{val.subtitle}</p>\n              </Col>\n            )\n          })}\n          </Row>\n        </Container>\n      </section>\n  )\n}\n\nexport default Wrapper\n","import { Container, Row } from \"react-bootstrap\";\nimport Product from \"./Product/Product\";\n\nconst Section = ({ id, title, bgColor, productItems, addToCart }) => {\n  const enableHoverEffect = id === \"popular-packages\";\n  \n  return (\n    <section id={id} style={{ background: bgColor }}>\n      <Container>\n        <div className=\"heading\">\n          <h1>{title}</h1>\n        </div>\n        <Row className=\"justify-content-center\">\n          {productItems.map((productItem) => (\n            <Product\n              key={productItem.id}\n              title={title}\n              productItem={productItem}\n              desc={productItem.desc}\n              addToCart={addToCart}\n              enableHoverEffect={enableHoverEffect}\n            />\n          ))}\n        </Row>\n      </Container>\n    </section>\n  );\n};\n\nexport default Section;\n","import Slider from \"react-slick\"\nimport \"slick-carousel/slick/slick.css\"\nimport \"slick-carousel/slick/slick-theme.css\"\nimport { Container } from \"react-bootstrap\"\nimport SlideCard from \"./SliderCard/SlideCard\"\nimport { SliderData } from \"../utils/products\"\n\nconst SliderHome = () => {\n  const settings = {\n    nav:false,\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n  }\n  return (\n      <section className='homeSlide'>\n        <Container>\n          <Slider {...settings}>\n          {SliderData.map((value, index) => {\n            return (\n              <img src={value.cover} alt={value.title} style={{ width: '100%', height: '100%' }} />\n            )\n          })}\n        </Slider>\n        </Container>\n      </section>\n  )\n}\n\nexport default SliderHome\n","import React, { Fragment, useContext, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport Wrapper from \"../components/wrapper/Wrapper\";\nimport Section from \"../components/Section\";\nimport {\n  products,\n  discoutProducts,\n  popularTests,\n  healthConcerns,\n  checkupsMen,\n  checkupsWomen,\n} from \"../utils/products\";\nimport { DataContainer } from \"../App\";\nimport SliderHome from \"../components/Slider\";\nimport HealthConcernsSection from \"../components/HealthConcernsSection.jsx\";\n\nconst Home = () => {\n  const { addToCart } = useContext(DataContainer);\n  const navigate = useNavigate();\n  const newArrivalData = products.filter(\n    (item) => item.category === \"mobile\" || item.category === \"wireless\"\n  );\n  const bestSales = products.filter((item) => item.category === \"Blood\");\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  // Unique toast ID\n  const toastId = useRef(null);\n\n  // Custom toast content with a button\n  const CustomToastWithLink = ({ closeToast }) => (\n    <div>\n      <button onClick={() => {\n        navigate('/cart');\n        toast.dismiss(toastId.current); // Dismiss the toast\n      }}>\n        Go to Cart\n      </button>\n    </div>\n  );\n\n  // Updated addToCart function\n  const handleAddToCart = (item) => {\n    addToCart(item);\n    if (!toast.isActive(toastId.current)) {\n      toastId.current = toast.success(<CustomToastWithLink />, {\n        autoClose: false // Disable the timer for this toast\n      });\n    }\n  };\n\n  return (\n    <Fragment>\n      <ToastContainer />\n      <SliderHome />\n      <Wrapper />\n      {/* <HealthConcernsSection title=\"Recommended checkups for men\" bgColor=\"#f6f9fc\" productItems={checkupsMen} addToCart={handleAddToCart} />\n      <HealthConcernsSection title=\"Recommended checkups for women\" bgColor=\"#f6f9fc\" productItems={checkupsWomen} addToCart={handleAddToCart} /> */}\n      {/* <HealthConcernsSection\n        title=\"Browse by Health Concerns\"\n        bgColor=\"#f6f9fc\"\n        productItems={healthConcerns}\n        addToCart={handleAddToCart}\n      /> */}\n      <Section\n        id=\"popular-packages\"\n        title=\"Popular Packages\"\n        bgColor=\"#f6f9fc\"\n        productItems={discoutProducts}\n        addToCart={handleAddToCart}\n      />\n      <Section\n        id=\"popular-tests\"\n        title=\"Popular Tests\"\n        bgColor=\"#f6f9fc\"\n        productItems={popularTests}\n        addToCart={handleAddToCart}\n      />\n    </Fragment>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","show","handleClose","CartItem","setCartItem","_useState","useState","pincode","name","email","address","phoneno","age","noOfPersons","appointmentDate","beneficiaries","tests","_useState2","_slicedToArray","orderData","setOrderData","_useState3","_useState4","pincodeMessage","setPincodeMessage","useEffect","prevState","_objectSpread","Array","from","length","gender","handleBeneficiariesChange","index","field","value","newBeneficiaries","_toConsumableArray","_defineProperty","handleTestChange","test","isChecked","updatedTests","includes","push","filter","t","handleSubmitOrder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderDetails","payloadSize","wrap","_context","prev","next","availablePincodes","alert","abrupt","cartItems","console","log","JSON","stringify","concat","axios","process","sent","data","success","t0","error","stop","apply","arguments","_jsxs","Modal","onHide","children","_jsx","closeButton","Form","controlId","InputGroup","type","placeholder","onChange","e","target","Button","variant","onClick","className","as","newNoOfPersons","parseInt","_","i","keys","map","num","options","currentDate","Date","date","setDate","getDate","dateString","toLocaleDateString","year","month","day","generateDateOptions","beneficiary","label","checked","number","title","productItem","addToCart","_ref$showImage","showImage","desc","enableHoverEffect","isShopList","setSelectedProduct","useContext","DataContainer","router","useNavigate","count","setCount","showCheckout","setShowCheckout","_useState5","_useState6","selectedPackage","setSelectedPackage","_useState7","_useState8","isMobile","setIsMobile","handleResize","window","innerWidth","addEventListener","removeEventListener","_productItem$overlayD","handleClick","localStorage","setItem","id","handleAddToCart","toast","setTimeout","isPopularPackage","isPopularTest","Col","lg","md","sm","xs","productName","labName","price","discount","loading","src","imgUrl","alt","overlayTitle","overlayDetails","detail","Highlight","match","extractNumberOfTests","_Fragment","CheckoutForm","Container","Row","serviceData","val","style","backgroundColor","bg","icon","subtitle","bgColor","productItems","background","Product","Slider","nav","infinite","slidesToShow","slidesToScroll","autoplay","SliderData","cover","width","height","navigate","products","item","category","scrollTo","toastId","useRef","CustomToastWithLink","closeToast","current","autoClose","Fragment","ToastContainer","SliderHome","Wrapper","Section","discoutProducts","popularTests"],"sourceRoot":""}