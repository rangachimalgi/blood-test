{"version":3,"file":"static/js/782.c7acd63a.chunk.js","mappings":"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","sources":["components/Banner/Banner.jsx","pages/HealthPackagesDetails.jsx"],"sourcesContent":["import { Col, Container, Row } from \"react-bootstrap\";\nimport productBg from \"../../Images/table.jpg\";\nimport \"./banner.css\";\nconst Banner = ({title}) => {\n    return ( \n        <div className=\"image-container\">\n            <img src={productBg} alt=\"Product-bg\" />\n            <div className=\"overlay\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h2>{title}</h2>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    );\n}\n\nexport default Banner;","import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport Banner from \"../components/Banner/Banner\";\nimport { DataContainer } from \"../App\";\nimport { Col, Container, Row, Collapse } from \"react-bootstrap\";\nimport { healthPackagesArray } from \"./HealthPackages\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"../Styles/productDetails.css\";\n\nconst HealthPackageDetails = () => {\n  const [quantity, setQuantity] = useState(1);\n  const { selectedProduct, setSelectedProduct, addToCart } = useContext(DataContainer);\n  const [openCategoryId, setOpenCategoryId] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const selectedHealthPackage = healthPackagesArray.find(\n      (packageItem) => packageItem.id === id\n    );\n    setSelectedProduct(selectedHealthPackage);\n  }, [id, setSelectedProduct]);\n\n  const handleQuantityChange = (event) => {\n    setQuantity(parseInt(event.target.value));\n  };\n\n  const handleAdd = (selectedProduct, quantity) => {\n    addToCart(selectedProduct, quantity);\n    toast.success(\"Package has been added to cart!\");\n  };\n\n  return (\n    <Fragment>\n      <Banner title={selectedProduct?.productName} />\n      <section className=\"product-page\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md={6}>\n              <img loading=\"lazy\" src={selectedProduct?.imgUrl} alt=\"\" />\n            </Col>\n            <Col md={6}>\n              <h2>{selectedProduct?.productName}</h2>\n              <div className=\"info\">\n                <span className=\"price\">&#8377;{selectedProduct?.price}</span>\n                <span>category: {selectedProduct?.category}</span>\n              </div>\n              <p>{selectedProduct?.shortDesc}</p>\n              <input\n                className=\"qty-input\"\n                type=\"number\"\n                placeholder=\"Qty\"\n                value={quantity}\n                onChange={handleQuantityChange}\n              />\n              <button\n                aria-label=\"Add\"\n                type=\"submit\"\n                className=\"add\"\n                onClick={() => handleAdd(selectedProduct, quantity)}\n              >\n                Add To Cart\n              </button>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n\n      {/* Included Tests section */}\n      {selectedProduct?.includedTests &&\n        selectedProduct.includedTests.length > 0 && (\n          <section className=\"included-tests\">\n            <Container>\n              <h3>Included Tests</h3>\n              {selectedProduct.includedTests.map((category) => (\n                <div key={category.categoryName} className=\"category-box\">\n                  <h4\n                    onClick={() =>\n                      setOpenCategoryId(\n                        openCategoryId !== category.categoryName\n                          ? category.categoryName\n                          : null\n                      )\n                    }\n                    className=\"category-title\"\n                  >\n                    <span className=\"toggle-icon\">\n                      {openCategoryId === category.categoryName ? \"-\" : \"+\"}\n                    </span>\n                    {category.categoryName}\n                  </h4>\n\n                  <Collapse in={openCategoryId === category.categoryName}>\n                    <div className=\"test-list\">\n                      {category.tests.map((testName, index) => (\n                        <div key={index} className=\"test-item\">\n                          {testName}\n                        </div>\n                      ))}\n                    </div>\n                  </Collapse>\n                </div>\n              ))}\n            </Container>\n          </section>\n        )}\n\n      <section className=\"product-reviews\">\n        <Container>\n          <ul>\n            <li>Description</li>\n          </ul>\n          <p>{selectedProduct?.description}</p>\n        </Container>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default HealthPackageDetails;\n"],"names":["_ref","title","_jsxs","className","children","_jsx","src","productBg","alt","Container","Row","Col","_useState","useState","_useState2","_slicedToArray","quantity","setQuantity","_useContext","useContext","DataContainer","selectedProduct","setSelectedProduct","addToCart","_useState3","_useState4","openCategoryId","setOpenCategoryId","id","useParams","useEffect","window","scrollTo","selectedHealthPackage","healthPackagesArray","packageItem","Fragment","Banner","productName","md","loading","imgUrl","price","category","shortDesc","type","placeholder","value","onChange","event","parseInt","target","onClick","toast","handleAdd","includedTests","length","map","categoryName","Collapse","in","tests","testName","index","description"],"sourceRoot":""}