{"version":3,"file":"static/js/686.db1ac1e2.chunk.js","mappings":"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","sources":["pages/Cart.jsx","../node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { DataContainer } from '../App';\nimport { Col, Container, Row, Button } from 'react-bootstrap';\nimport CheckoutForm from '../components/CheckoutForm.js';\nconst Cart = () => {\n  const [showModal, setShowModal] = useState(false);\n  const { CartItem, setCartItem, addToCart, decreaseQty, deleteProduct } =\n    useContext(DataContainer);\n  const totalPrice = CartItem.reduce(\n    (price, item) => price + item.qty * item.price,\n    0\n  );\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (CartItem.length === 0) {\n      const storedCart = localStorage.getItem('cartItem');\n      setCartItem(JSON.parse(storedCart));\n    }\n  }, [CartItem, setCartItem]);\n\n  const handleShow = () => setShowModal(true);\n  const handleClose = () => setShowModal(false);\n\n  return (\n    <section className=\"cart-items\">\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col md={8}>\n            {CartItem.length === 0 && (\n              <h1 className=\"no-items product\">No Items are added in Cart</h1>\n            )}\n            {CartItem.map((item) => {\n              const productQty = item.price * item.qty;\n              return (\n                <div className=\"cart-list\" key={item.id}>\n                  <Row>\n                    <Col className=\"image-holder\" sm={4} md={3}>\n                      <img src={item.imgUrl} alt=\"\" />\n                    </Col>\n                    <Col sm={8} md={9}>\n                      <Row className=\"cart-content justify-content-center\">\n                        <Col xs={12} sm={9} className=\"cart-details\">\n                          <h3>{item.productName}</h3>\n                          <h4>\n                            {`\\u20B9${item.price}.00`} * {item.qty}\n                            <span>{`\\u20B9${productQty}.00`}</span>\n                          </h4>\n                        </Col>\n                        <Col xs={12} sm={3} className=\"cartControl\">\n                          <button\n                            className=\"incCart\"\n                            onClick={() => addToCart(item)}\n                          >\n                            <i className=\"fa-solid fa-plus\"></i>\n                          </button>\n                          <button\n                            className=\"desCart\"\n                            onClick={() => decreaseQty(item)}\n                          >\n                            <i className=\"fa-solid fa-minus\"></i>\n                          </button>\n                        </Col>\n                      </Row>\n                    </Col>\n                    <button\n                      className=\"delete\"\n                      onClick={() => deleteProduct(item)}\n                    >\n                      <ion-icon name=\"close\"></ion-icon>\n                    </button>\n                  </Row>\n                </div>\n              );\n            })}\n          </Col>\n          <Col md={4}>\n            <div className=\"cart-total\">\n              <h2>Cart Summary</h2>\n              <div className=\" d_flex\">\n                <h4>Total Price :</h4>\n                <h3>{`\\u20B9${totalPrice}.00`}</h3>\n              </div>\n              <Button\n                onClick={handleShow}\n                style={{\n                  marginTop: '15px',\n                  backgroundColor: '#4CAF50',\n                  border: 'none',\n                  padding: '10px 20px',\n                  borderRadius: '5px',\n                  boxShadow: '0 2px 5px rgba(0,0,0,0.2)',\n                  fontSize: '16px',\n                }}\n              >\n                Book Now\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      <CheckoutForm\n        show={showModal}\n        handleClose={handleClose}\n        CartItem={CartItem}\n        setCartItem={setCartItem}\n      />\n    </section>\n  );\n};\n\nexport default Cart;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"names":["_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","_useContext","useContext","DataContainer","CartItem","setCartItem","addToCart","decreaseQty","deleteProduct","totalPrice","reduce","price","item","qty","useEffect","window","scrollTo","length","storedCart","localStorage","getItem","JSON","parse","_jsxs","className","children","_jsx","Container","Row","Col","md","map","productQty","sm","src","imgUrl","alt","xs","productName","concat","onClick","name","id","Button","style","marginTop","backgroundColor","border","padding","borderRadius","boxShadow","fontSize","CheckoutForm","show","handleClose","InputGroupText","createWithBsPrefix","Component","InputGroup","React","_ref","ref","bsPrefix","size","hasValidation","_ref$as","as","props","_objectWithoutProperties","_excluded","useBootstrapPrefix","contextValue","useMemo","InputGroupContext","value","_objectSpread","classNames","displayName","Object","assign","Text","Radio","FormCheckInput","type","Checkbox"],"sourceRoot":""}