{"version":3,"file":"static/js/377.2898fc6e.chunk.js","mappings":"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","sources":["components/CheckoutForm.js","components/Product/Product.jsx","components/wrapper/Wrapper.jsx","components/Section.jsx","components/Slider.jsx","components/Product/HealthProduct.jsx","components/HealthConcernsSection.jsx","pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, Button, InputGroup, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport { availablePincodes } from '../components/availablePincodes.js';\n\nconst CheckoutForm = ({ show, handleClose, CartItem, setCartItem }) => {\n  const [orderData, setOrderData] = useState({\n    pincode: '',\n    name: '',\n    email: '',\n    address: '',\n    phoneno: '',\n    age: '',\n    noOfPersons: 1,\n    appointmentDate: '',\n    beneficiaries: [],\n  });\n  const [pincodeMessage, setPincodeMessage] = useState('');\n\n  useEffect(() => {\n    setOrderData((prevState) => ({\n      ...prevState,\n      beneficiaries: Array.from({ length: prevState.noOfPersons }, () => ({\n        name: '',\n        age: '',\n        gender: '',\n      })),\n    }));\n  }, [orderData.noOfPersons]);\n\n  const checkAvailability = () => {\n    if (availablePincodes.includes(orderData.pincode)) {\n      setPincodeMessage('Service is available in your pincode!');\n    } else {\n      setPincodeMessage('Sorry, service is not available in your pincode.');\n    }\n  };\n\n  const handleBeneficiariesChange = (index, field, value) => {\n    const newBeneficiaries = [...orderData.beneficiaries];\n    newBeneficiaries[index] = { ...newBeneficiaries[index], [field]: value };\n    setOrderData({ ...orderData, beneficiaries: newBeneficiaries });\n  };\n\n  const handleSubmitOrder = async () => {\n    if (!availablePincodes.includes(orderData.pincode)) {\n      alert('Service is not available in your pincode.');\n      return;\n    }\n\n    const orderDetails = {\n      pincode: orderData.pincode,\n      name: orderData.name,\n      email: orderData.email,\n      address: orderData.address,\n      phoneno: orderData.phoneno,\n      age: orderData.age,\n      noOfPersons: orderData.noOfPersons,\n      appointmentDate: orderData.appointmentDate,\n      beneficiaries: orderData.beneficiaries,\n      cartItems: CartItem,\n    };\n\n    console.log(\"Order Details: \", orderDetails); // Log the order details\n\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/orders`,\n        orderDetails\n      );\n      if (response.data.success) {\n        setCartItem([]);\n        handleClose();\n        alert('Order submitted successfully!');\n      } else {\n        alert('Error submitting order. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting order:', error);\n      alert('Error submitting order. Please try again.');\n    }\n  };\n\n  const generateDateOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(currentDate.getDate() + i);\n      const dateString = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n      });\n      options.push(\n        <option key={i} value={dateString}>\n          {dateString}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Checkout Form</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"formPincode\">\n            <InputGroup>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Pincode\"\n                value={orderData.pincode}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, pincode: e.target.value })\n                }\n                name=\"pincode\"\n              />\n              <Button variant=\"outline-secondary\" onClick={checkAvailability}>\n                Check Availability\n              </Button>\n            </InputGroup>\n            <Form.Text className=\"text-muted\">{pincodeMessage}</Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formName\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              value={orderData.name}\n              onChange={(e) =>\n                setOrderData({ ...orderData, name: e.target.value })\n              }\n              name=\"name\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              value={orderData.email}\n              onChange={(e) =>\n                setOrderData({ ...orderData, email: e.target.value })\n              }\n              name=\"email\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formAddress\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your address\"\n              value={orderData.address}\n              onChange={(e) =>\n                setOrderData({ ...orderData, address: e.target.value })\n              }\n              name=\"address\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formPhoneNo\">\n            <Form.Label>Phone No</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your phone no\"\n              value={orderData.phoneno}\n              onChange={(e) =>\n                setOrderData({ ...orderData, phoneno: e.target.value })\n              }\n              name=\"phoneno\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formAge\">\n            <Form.Label>Age</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your age\"\n              value={orderData.age}\n              onChange={(e) =>\n                setOrderData({ ...orderData, age: e.target.value })\n              }\n              name=\"age\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formNoOfPersons\">\n            <Form.Label>Number of Persons</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={orderData.noOfPersons}\n              onChange={(e) => {\n                const newNoOfPersons = parseInt(e.target.value, 10);\n                setOrderData({\n                  ...orderData,\n                  noOfPersons: newNoOfPersons,\n                  beneficiaries: Array.from(\n                    { length: newNoOfPersons },\n                    (_, i) => orderData.beneficiaries[i] || { name: '', age: '', gender: '' }\n                  ),\n                });\n              }}\n              name=\"noOfPersons\"\n            >\n              {[...Array(10).keys()].map((num) => (\n                <option key={num + 1} value={num + 1}>\n                  {num + 1}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"formAppointmentDate\">\n            <Form.Label>Appointment Date</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={orderData.appointmentDate}\n              onChange={(e) =>\n                setOrderData({ ...orderData, appointmentDate: e.target.value })\n              }\n              name=\"appointmentDate\"\n            >\n              {generateDateOptions()}\n            </Form.Control>\n          </Form.Group>\n          <h5>Beneficiaries</h5>\n          {orderData.beneficiaries.map((beneficiary, index) => (\n            <div key={index}>\n              <Form.Group controlId={`formBeneficiaryName${index}`}>\n                <Form.Label>Beneficiary Name {index + 1}</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter name\"\n                  value={beneficiary.name}\n                  onChange={(e) =>\n                    handleBeneficiariesChange(index, 'name', e.target.value)\n                  }\n                  name={`beneficiaryName${index}`}\n                />\n              </Form.Group>\n              <Form.Group controlId={`formBeneficiaryAge${index}`}>\n                <Form.Label>Age</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter age\"\n                  value={beneficiary.age}\n                  onChange={(e) =>\n                    handleBeneficiariesChange(index, 'age', e.target.value)\n                  }\n                  name={`beneficiaryAge${index}`}\n                />\n              </Form.Group>\n              <Form.Group controlId={`formBeneficiaryGender${index}`}>\n                <Form.Label>Gender</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={beneficiary.gender}\n                  onChange={(e) =>\n                    handleBeneficiariesChange(index, 'gender', e.target.value)\n                  }\n                  name={`beneficiaryGender${index}`}\n                >\n                  <option value=\"\">Select Gender</option>\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                  <option value=\"Other\">Other</option>\n                </Form.Control>\n              </Form.Group>\n            </div>\n          ))}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleSubmitOrder}>\n          Book Now\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CheckoutForm;\n","import { useContext, useState } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"./product.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DataContainer } from \"../../App\";\nimport CheckoutForm from \"../CheckoutForm.js\";\n\nconst Product = ({ title, productItem, addToCart, showImage = true, desc, enableHoverEffect, handleAddToCart }) => {\n  const { setSelectedProduct } = useContext(DataContainer);\n  const router = useNavigate();\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const handelClick = () => {\n    setSelectedProduct(productItem);\n    localStorage.setItem(\n      `selectedProduct-${productItem.id}`,\n      JSON.stringify(productItem)\n    );\n    router(`/shop/${productItem.id}`);\n  };\n\n  return (\n    <Col\n      lg={3}\n      md={4}\n      sm={6}\n      xs={12}\n      className={`product mtop ${enableHoverEffect ? 'hover-enabled' : ''}`}\n    >\n      {title === \"Big Discount\" && (\n        <span className=\"discount\">{productItem.discount}% Off</span>\n      )}\n      <div className=\"product-image-container\">\n        {showImage && (\n          <img\n            loading=\"lazy\"\n            onClick={handelClick}\n            src={productItem.imgUrl}\n            alt={productItem.productName}\n            className=\"product-image\"\n          />\n        )}\n        {enableHoverEffect && (\n          <div className=\"hover-overlay\">\n            <h2>{productItem.overlayTitle}</h2>\n            <ul>\n              {productItem.overlayDetails?.map((detail, index) => (\n                <li key={index}>{detail}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n      {desc && <p className=\"product-description\">{desc}</p>}\n      <div className=\"product-like\">\n        <label>{count}</label> <br />\n        <ion-icon name=\"heart-outline\" onClick={increment}></ion-icon>\n      </div>\n      <div className=\"product-details\">\n        <h3 onClick={handelClick}>{productItem.productName}</h3>\n        <div className=\"price\">\n          <h4>&#8377;{productItem.price}</h4>\n          <button\n            aria-label=\"Add\"\n            type=\"submit\"\n            className=\"add\"\n            onClick={() => handleAddToCart(productItem)}\n          >\n            <ion-icon name=\"add\"></ion-icon>\n          </button>\n        </div>\n      </div>\n    </Col>\n  );\n};\n\nexport default Product;\n","import React from \"react\"\nimport \"./style.css\"\nimport { Col, Container, Row } from \"react-bootstrap\"\nimport { serviceData } from \"../../utils/products\"\n\nconst Wrapper = () => {\n  return (\n      <section className='wrapper background'>\n        <Container>\n          <Row>\n          {serviceData.map((val, index) => {\n            return (\n              <Col md={3} sm={5} xs={9} style={{backgroundColor:val.bg}} className='feature' key={index}>\n                <div className='icon'>\n                  {val.icon}\n                </div>\n                <h3>{val.title}</h3>\n                <p>{val.subtitle}</p>\n              </Col>\n            )\n          })}\n          </Row>\n        </Container>\n      </section>\n  )\n}\n\nexport default Wrapper\n","import { Container, Row } from \"react-bootstrap\";\nimport Product from \"./Product/Product\";\n\nconst Section = ({ id, title, bgColor, productItems, addToCart }) => {\n  const enableHoverEffect = id === \"popular-packages\";\n  \n  return (\n    <section id={id} style={{ background: bgColor }}>\n      <Container>\n        <div className=\"heading\">\n          <h1>{title}</h1>\n        </div>\n        <Row className=\"justify-content-center\">\n          {productItems.map((productItem) => (\n            <Product\n              key={productItem.id}\n              title={title}\n              productItem={productItem}\n              desc={productItem.desc}\n              addToCart={addToCart}\n              enableHoverEffect={enableHoverEffect}\n            />\n          ))}\n        </Row>\n      </Container>\n    </section>\n  );\n};\n\nexport default Section;\n","import Slider from \"react-slick\"\nimport \"slick-carousel/slick/slick.css\"\nimport \"slick-carousel/slick/slick-theme.css\"\nimport { Container } from \"react-bootstrap\"\nimport SlideCard from \"./SliderCard/SlideCard\"\nimport { SliderData } from \"../utils/products\"\n\nconst SliderHome = () => {\n  const settings = {\n    nav:false,\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n  }\n  return (\n      <section className='homeSlide'>\n        <Container>\n          <Slider {...settings}>\n          {SliderData.map((value, index) => {\n            return (\n              <img src={value.cover} alt={value.title} style={{ width: '100%', height: '100%' }} />\n            )\n          })}\n        </Slider>\n        </Container>\n      </section>\n  )\n}\n\nexport default SliderHome\n","import { useContext, useState } from \"react\";\nimport \"./healthProduct.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DataContainer } from \"../../App\";\nimport { toast } from \"react-toastify\";\n\nconst HealthProduct = ({ title, productItem, addToCart, showImage = true }) => {\n  const { setSelectedProduct } = useContext(DataContainer);\n  const router = useNavigate();\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const handleClick = () => {\n    setSelectedProduct(productItem);\n    localStorage.setItem(\n      `selectedProduct-${productItem.id}`,\n      JSON.stringify(productItem)\n    );\n    router(`/shop/${productItem.id}`);\n  };\n\n  const handleAdd = (productItem) => {\n    addToCart(productItem);\n    toast.success(\"Product has been added to cart!\");\n  };\n\n  return (\n    <div className=\"health-product-card\">\n      {title === \"Big Discount\" ? (\n        <span className=\"health-discount\">{productItem.discount}% Off</span>\n      ) : null}\n      {showImage && (\n        <div className=\"health-product-image-container\">\n          <img\n            loading=\"lazy\"\n            onClick={handleClick}\n            src={productItem.imgUrl}\n            alt=\"\"\n            className=\"health-product-image\"\n          />\n        </div>\n      )}\n      <div className=\"health-product-details\">\n        <h3 onClick={handleClick}>{productItem.productName}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default HealthProduct;\n","import React from 'react';\nimport Slider from 'react-slick';\nimport HealthProduct from './Product/HealthProduct';\nimport { Container } from 'react-bootstrap';\n\nconst HealthConcernsSection = ({ title, bgColor, productItems, addToCart }) => {\n  const settings = {\n    dots: false,\n    infinite: false, // Set to false to avoid infinite scrolling\n    speed: 500,\n    slidesToShow: 6,\n    slidesToScroll: 1,\n    nextArrow: <SampleNextArrow />,\n    prevArrow: <SamplePrevArrow />,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 4,\n          slidesToScroll: 1,\n          infinite: false, // Ensure this is false to avoid infinite scrolling\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n          infinite: false, // Ensure this is false to avoid infinite scrolling\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1,\n          infinite: false, // Ensure this is false to avoid infinite scrolling\n        },\n      },\n      {\n        breakpoint: 360,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          infinite: false, // Ensure this is false to avoid infinite scrolling\n        },\n      },\n    ],\n  };\n\n  return (\n    <section style={{ background: bgColor }}>\n      <Container>\n        <h2>{title}</h2>\n        <Slider {...settings}>\n          {productItems.map((productItem) => (\n            <div key={productItem.id}>\n              <HealthProduct\n                title={title}\n                productItem={productItem}\n                addToCart={addToCart}\n              />\n            </div>\n          ))}\n        </Slider>\n      </Container>\n    </section>\n  );\n};\n\n// Sample arrow components\nconst SampleNextArrow = (props) => {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style, display: 'block', background: 'black' }}\n      onClick={onClick}\n    />\n  );\n};\n\nconst SamplePrevArrow = (props) => {\n  const { className, style, onClick } = props;\n  return (\n    <div\n      className={className}\n      style={{ ...style, display: 'block', background: 'black' }}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default HealthConcernsSection;\n","import { Fragment, useContext, useEffect } from \"react\";\nimport Wrapper from \"../components/wrapper/Wrapper\";\nimport Section from \"../components/Section\";\nimport {\n  products,\n  discoutProducts,\n  popularTests,\n  healthConcerns,\n  checkupsMen,\n  checkupsWomen,\n} from \"../utils/products\";\nimport { DataContainer } from \"../App\";\nimport SliderHome from \"../components/Slider\";\nimport HealthConcernsSection from \"../components/HealthConcernsSection.jsx\";\n\nconst Home = () => {\n  const { addToCart } = useContext(DataContainer);\n  const newArrivalData = products.filter(\n    (item) => item.category === \"mobile\" || item.category === \"wireless\"\n  );\n  const bestSales = products.filter((item) => item.category === \"Blood\");\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <Fragment>\n      <SliderHome />\n      <Wrapper />\n      {/* <HealthConcernsSection title=\"Recommended checkups for men\" bgColor=\"#f6f9fc\" productItems={checkupsMen} addToCart={addToCart} />\n      <HealthConcernsSection title=\"Recommended checkups for women\" bgColor=\"#f6f9fc\" productItems={checkupsWomen} addToCart={addToCart} /> */}\n      <HealthConcernsSection\n        title=\"Browse by Health Concerns\"\n        bgColor=\"#f6f9fc\"\n        productItems={healthConcerns}\n        addToCart={addToCart}\n      />\n      <Section\n        id=\"popular-packages\"\n        title=\"Popular Packages\"\n        bgColor=\"#f6f9fc\"\n        productItems={discoutProducts}\n        addToCart={addToCart}\n      />\n      <Section\n        title=\"Popular Tests\"\n        bgColor=\"#f6f9fc\"\n        productItems={popularTests}\n        addToCart={addToCart}\n      />\n    </Fragment>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","show","handleClose","CartItem","setCartItem","_useState","useState","pincode","name","email","address","phoneno","age","noOfPersons","appointmentDate","beneficiaries","_useState2","_slicedToArray","orderData","setOrderData","_useState3","_useState4","pincodeMessage","setPincodeMessage","useEffect","prevState","_objectSpread","Array","from","length","gender","handleBeneficiariesChange","index","field","value","newBeneficiaries","_toConsumableArray","_defineProperty","handleSubmitOrder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderDetails","wrap","_context","prev","next","availablePincodes","alert","abrupt","cartItems","console","log","axios","concat","process","sent","data","success","t0","error","stop","apply","arguments","_jsxs","Modal","onHide","children","_jsx","closeButton","Form","controlId","InputGroup","type","placeholder","onChange","e","target","Button","variant","onClick","className","as","newNoOfPersons","parseInt","_","i","keys","map","num","options","currentDate","Date","date","setDate","getDate","dateString","toLocaleDateString","year","month","day","push","generateDateOptions","beneficiary","_productItem$overlayD","title","productItem","_ref$showImage","addToCart","showImage","desc","enableHoverEffect","handleAddToCart","setSelectedProduct","useContext","DataContainer","router","useNavigate","count","setCount","handelClick","localStorage","setItem","id","JSON","stringify","Col","lg","md","sm","xs","discount","loading","src","imgUrl","alt","productName","overlayTitle","overlayDetails","detail","price","Container","Row","serviceData","val","style","backgroundColor","bg","icon","subtitle","bgColor","productItems","background","Product","Slider","nav","infinite","slidesToShow","slidesToScroll","autoplay","SliderData","cover","width","height","handleClick","SampleNextArrow","props","display","SamplePrevArrow","settings","dots","speed","nextArrow","prevArrow","responsive","breakpoint","HealthProduct","products","item","category","window","scrollTo","Fragment","SliderHome","Wrapper","HealthConcernsSection","healthConcerns","Section","discoutProducts","popularTests"],"sourceRoot":""}