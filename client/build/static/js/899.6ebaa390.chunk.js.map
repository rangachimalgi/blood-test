{"version":3,"file":"static/js/899.6ebaa390.chunk.js","mappings":"sQA4RA,IAvRqB,SAAHA,GAAsD,IAAhDC,EAAID,EAAJC,KAAMC,EAAWF,EAAXE,YAAaC,EAAQH,EAARG,SAAUC,EAAWJ,EAAXI,YACnDC,GAAkCC,EAAAA,EAAAA,UAAS,CACzCC,QAAS,GACTC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,IAAK,GACLC,YAAa,EACbC,gBAAiB,GACjBC,cAAe,KACfC,GAAAC,EAAAA,EAAAA,GAAAZ,EAAA,GAVKa,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAW9BI,GAA4Cd,EAAAA,EAAAA,UAAS,IAAGe,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,IAExCG,EAAAA,EAAAA,YAAU,WACRL,GAAa,SAACM,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClBD,GAAS,IACZV,cAAeY,MAAMC,KAAK,CAAEC,OAAQJ,EAAUZ,cAAe,iBAAO,CAClEL,KAAM,GACNI,IAAK,GACLkB,OAAQ,GACT,KAAE,GAEP,GAAG,CAACZ,EAAUL,cAEd,IAQMkB,EAA4B,SAACC,EAAOC,EAAOC,GAC/C,IAAMC,GAAgBC,EAAAA,EAAAA,GAAOlB,EAAUH,eACvCoB,EAAiBH,IAAMN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQS,EAAiBH,IAAM,IAAAK,EAAAA,EAAAA,GAAA,GAAGJ,EAAQC,IACjEf,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAEH,cAAeoB,IAC9C,EAEMG,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBC,EAAAA,EAAAA,SAA2B/B,EAAUX,SAAS,CAADuC,EAAAE,KAAA,QACG,OAAnDE,MAAM,6CAA6CJ,EAAAK,OAAA,iBAiBP,OAbxCP,EAAe,CACnBrC,QAASW,EAAUX,QACnBC,KAAMU,EAAUV,KAChBC,MAAOS,EAAUT,MACjBC,QAASQ,EAAUR,QACnBC,QAASO,EAAUP,QACnBC,IAAKM,EAAUN,IACfC,YAAaK,EAAUL,YACvBC,gBAAiBI,EAAUJ,gBAC3BC,cAAeG,EAAUH,cACzBqC,UAAWjD,GAGbkD,QAAQC,IAAI,kBAAmBV,GAAeE,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGrBO,EAAAA,EAAAA,KAAW,GAADC,OAC5BC,uCAA6B,eAChCb,GACA,KAAD,EAHaE,EAAAY,KAIDC,KAAKC,SAChBxD,EAAY,IACZF,IACAgD,MAAM,kCAENA,MAAM,6CACPJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,SAEDO,QAAQS,MAAM,0BAAyBhB,EAAAe,IACvCX,MAAM,6CAA6C,yBAAAJ,EAAAiB,OAAA,GAAApB,EAAA,mBAEtD,kBArCsB,OAAAJ,EAAAyB,MAAA,KAAAC,UAAA,KA2DvB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAClE,KAAMA,EAAMmE,OAAQlE,EAAYmE,SAAA,EACrCC,EAAAA,EAAAA,KAACH,EAAAA,EAAAA,OAAY,CAACI,aAAW,EAAAF,UACvBC,EAAAA,EAAAA,KAACH,EAAAA,EAAAA,MAAW,CAAAE,SAAC,qBAEfC,EAAAA,EAAAA,KAACH,EAAAA,EAAAA,KAAU,CAAAE,UACTH,EAAAA,EAAAA,MAACM,EAAAA,EAAI,CAAAH,SAAA,EACHH,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,MAAU,CAACC,UAAU,cAAaJ,SAAA,EACjCH,EAAAA,EAAAA,MAACQ,EAAAA,EAAU,CAAAL,SAAA,EACTC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,QAAY,CACXG,KAAK,OACLC,YAAY,gBACZ1C,MAAOhB,EAAUX,QACjBsE,SAAU,SAACC,GAAC,OACV3D,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAEX,QAASuE,EAAEC,OAAO7C,QAAQ,EAEzD1B,KAAK,aAEP8D,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACC,QAAQ,oBAAoBC,QA3FtB,WACpBjC,EAAAA,EAAAA,SAA2B/B,EAAUX,SACvCgB,EAAkB,yCAElBA,EAAkB,mDAEtB,EAqF2E8C,SAAC,2BAIlEC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,KAAS,CAACW,UAAU,aAAYd,SAAE/C,QAErC4C,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,MAAU,CAACC,UAAU,WAAUJ,SAAA,EAC9BC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,MAAU,CAAAH,SAAC,UACZC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,QAAY,CACXG,KAAK,OACLC,YAAY,kBACZ1C,MAAOhB,EAAUV,KACjBqE,SAAU,SAACC,GAAC,OACV3D,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAEV,KAAMsE,EAAEC,OAAO7C,QAAQ,EAEtD1B,KAAK,aAGT0D,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,MAAU,CAACC,UAAU,YAAWJ,SAAA,EAC/BC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,MAAU,CAAAH,SAAC,WACZC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,QAAY,CACXG,KAAK,QACLC,YAAY,mBACZ1C,MAAOhB,EAAUT,MACjBoE,SAAU,SAACC,GAAC,OACV3D,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAET,MAAOqE,EAAEC,OAAO7C,QAAQ,EAEvD1B,KAAK,cAGT0D,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,MAAU,CAACC,UAAU,cAAaJ,SAAA,EACjCC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,MAAU,CAAAH,SAAC,aACZC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,QAAY,CACXG,KAAK,OACLC,YAAY,qBACZ1C,MAAOhB,EAAUR,QACjBmE,SAAU,SAACC,GAAC,OACV3D,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAER,QAASoE,EAAEC,OAAO7C,QAAQ,EAEzD1B,KAAK,gBAGT0D,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,MAAU,CAACC,UAAU,cAAaJ,SAAA,EACjCC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,MAAU,CAAAH,SAAC,cACZC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,QAAY,CACXG,KAAK,OACLC,YAAY,sBACZ1C,MAAOhB,EAAUP,QACjBkE,SAAU,SAACC,GAAC,OACV3D,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAEP,QAASmE,EAAEC,OAAO7C,QAAQ,EAEzD1B,KAAK,gBAGT0D,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,MAAU,CAACC,UAAU,UAASJ,SAAA,EAC7BC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,MAAU,CAAAH,SAAC,SACZC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,QAAY,CACXG,KAAK,OACLC,YAAY,iBACZ1C,MAAOhB,EAAUN,IACjBiE,SAAU,SAACC,GAAC,OACV3D,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAEN,IAAKkE,EAAEC,OAAO7C,QAAQ,EAErD1B,KAAK,YAGT0D,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,MAAU,CAACC,UAAU,kBAAiBJ,SAAA,EACrCC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,MAAU,CAAAH,SAAC,uBACZC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,QAAY,CACXY,GAAG,SACHlD,MAAOhB,EAAUL,YACjBgE,SAAU,SAACC,GACT,IAAMO,EAAiBC,SAASR,EAAEC,OAAO7C,MAAO,IAChDf,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTR,GAAS,IACZL,YAAawE,EACbtE,cAAeY,MAAMC,KACnB,CAAEC,OAAQwD,IACV,SAACE,EAAGC,GAAC,OAAKtE,EAAUH,cAAcyE,IAAM,CAAEhF,KAAM,GAAII,IAAK,GAAIkB,OAAQ,GAAI,MAG/E,EACAtB,KAAK,cAAa6D,UAEjBjC,EAAAA,EAAAA,GAAIT,MAAM,IAAI8D,QAAQC,KAAI,SAACC,GAAG,OAC7BrB,EAAAA,EAAAA,KAAA,UAAsBpC,MAAOyD,EAAM,EAAEtB,SAClCsB,EAAM,GADIA,EAAM,EAEV,UAIfzB,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,MAAU,CAACC,UAAU,sBAAqBJ,SAAA,EACzCC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,MAAU,CAAAH,SAAC,sBACZC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,QAAY,CACXY,GAAG,SACHlD,MAAOhB,EAAUJ,gBACjB+D,SAAU,SAACC,GAAC,OACV3D,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAEJ,gBAAiBgE,EAAEC,OAAO7C,QAAQ,EAEjE1B,KAAK,kBAAiB6D,SAzIN,WAG1B,IAFA,IAAMuB,EAAU,GACVC,EAAc,IAAIC,KACfN,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMO,EAAO,IAAID,KACjBC,EAAKC,QAAQH,EAAYI,UAAYT,GACrC,IAAMU,EAAaH,EAAKI,mBAAmB,QAAS,CAClDC,KAAM,UACNC,MAAO,QACPC,IAAK,YAEPV,EAAQW,MACNjC,EAAAA,EAAAA,KAAA,UAAgBpC,MAAOgE,EAAW7B,SAC/B6B,GADUV,GAIjB,CACA,OAAOI,CACT,CAyHaY,SAGLlC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACHnD,EAAUH,cAAc2E,KAAI,SAACe,EAAazE,GAAK,OAC9CkC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEH,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,MAAU,CAACC,UAAS,sBAAAjB,OAAwBxB,GAAQqC,SAAA,EACnDH,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,MAAU,CAAAH,SAAA,CAAC,oBAAkBrC,EAAQ,MACtCsC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,QAAY,CACXG,KAAK,OACLC,YAAY,aACZ1C,MAAOuE,EAAYjG,KACnBqE,SAAU,SAACC,GAAC,OACV/C,EAA0BC,EAAO,OAAQ8C,EAAEC,OAAO7C,MAAM,EAE1D1B,KAAI,kBAAAgD,OAAoBxB,SAG5BkC,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,MAAU,CAACC,UAAS,qBAAAjB,OAAuBxB,GAAQqC,SAAA,EAClDC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,MAAU,CAAAH,SAAC,SACZC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,QAAY,CACXG,KAAK,OACLC,YAAY,YACZ1C,MAAOuE,EAAY7F,IACnBiE,SAAU,SAACC,GAAC,OACV/C,EAA0BC,EAAO,MAAO8C,EAAEC,OAAO7C,MAAM,EAEzD1B,KAAI,iBAAAgD,OAAmBxB,SAG3BkC,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,MAAU,CAACC,UAAS,wBAAAjB,OAA0BxB,GAAQqC,SAAA,EACrDC,EAAAA,EAAAA,KAACE,EAAAA,EAAAA,MAAU,CAAAH,SAAC,YACZH,EAAAA,EAAAA,MAACM,EAAAA,EAAAA,QAAY,CACXY,GAAG,SACHlD,MAAOuE,EAAY3E,OACnB+C,SAAU,SAACC,GAAC,OACV/C,EAA0BC,EAAO,SAAU8C,EAAEC,OAAO7C,MAAM,EAE5D1B,KAAI,oBAAAgD,OAAsBxB,GAAQqC,SAAA,EAElCC,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,GAAEmC,SAAC,mBACjBC,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,OAAMmC,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,SAAQmC,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQpC,MAAM,QAAOmC,SAAC,kBAtClBrC,EAyCJ,UAIZkC,EAAAA,EAAAA,MAACC,EAAAA,EAAAA,OAAY,CAAAE,SAAA,EACXC,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAAShF,EAAYmE,SAAC,WAGlDC,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAAS5C,EAAkB+B,SAAC,kBAM9D,C,gKCzMA,EAxE2B,YACHqC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBC,UAAR,IACAvG,GAAwCC,EAAAA,EAAAA,WAAS,GAAMU,GAAAC,EAAAA,EAAAA,GAAAZ,EAAA,GAAhDwG,EAAY7F,EAAA,GAAE8F,EAAe9F,EAAA,GACpCI,GAA8Cd,EAAAA,EAAAA,UAAS,MAAKe,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArD2F,EAAe1F,EAAA,GAAE2F,EAAkB3F,EAAA,GAiB1C,OACE6C,EAAAA,EAAAA,MAAA,OAAKiB,UAAU,gBAAed,SAAA,EAC5BC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAc,KACf3C,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+BACJC,EAAAA,EAAAA,KAAA,OAAKa,UAAU,gBAAed,SAC3B6C,EAAAA,EAAAA,KAAwB,SAACC,GAAG,IAAAC,EAAA,OAC3BlD,EAAAA,EAAAA,MAAA,OAAkBiB,UAAU,eAAcd,SAAA,EACxCC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAI,CAACC,GAAE,WAAA9D,OAAa2D,EAAII,IAAMpC,UAAU,eAAcd,UACrDH,EAAAA,EAAAA,MAAA,OAAKiB,UAAU,0BAAyBd,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OACEkD,IAAKL,EAAIM,OACTC,IAAKP,EAAIQ,YACTxC,UAAU,mBAEZjB,EAAAA,EAAAA,MAAA,OAAKiB,UAAU,gBAAed,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAK8C,EAAIS,gBACTtD,EAAAA,EAAAA,KAAA,MAAAD,SACqB,QADrB+C,EACGD,EAAIU,sBAAc,IAAAT,OAAA,EAAlBA,EAAoB1B,KAAI,SAACoC,EAAQ9F,GAAK,OACrCsC,EAAAA,EAAAA,KAAA,MAAAD,SAAiByD,GAAR9F,EAAoB,eAMvCkC,EAAAA,EAAAA,MAAA,OAAKiB,UAAU,kBAAiBd,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKa,UAAU,eAAcd,SAAE8C,EAAIQ,eACnCrD,EAAAA,EAAAA,KAAA,OAAKa,UAAU,eAAcd,SAAE8C,EAAIY,WAErC7D,EAAAA,EAAAA,MAAA,OAAKiB,UAAU,iBAAgBd,SAAA,EAC7BH,EAAAA,EAAAA,MAAA,OAAKiB,UAAU,gBAAed,SAAA,CAAC,SAAQ8C,EAAIa,UAC3C1D,EAAAA,EAAAA,KAAA,UACEa,UAAU,kBACVD,QAAS,kBA1CD,SAACiC,GACrBH,EAAmBG,GACnBL,GAAgB,EAClB,CAuC6BmB,CAAcd,EAAI,EAAC9C,SACnC,kBA3BK8C,EAAII,GA+BR,MAGTV,IACCvC,EAAAA,EAAAA,KAAC4D,EAAAA,EAAY,CACXjI,KAAM4G,EACN3G,YAhDoB,WAC1B4G,GAAgB,GAChBE,EAAmB,KACrB,EA8CQ7G,SAAU4G,EAAkB,CAACA,GAAmB,GAChD3G,YAAa,WAAO,MAK9B,C,mLCvEM+H,GAAiBC,EAAAA,EAAAA,GAAmB,mBAAoB,CAC5DC,UAAW,SAcP3D,EAA0B4D,EAAAA,YAAiB,SAAAtI,EAQ9CuI,GAAQ,IAPTC,EAAQxI,EAARwI,SACAC,EAAIzI,EAAJyI,KACAC,EAAa1I,EAAb0I,cACAvD,EAASnF,EAATmF,UAASwD,EAAA3I,EAEToF,GAAIiD,OAAS,IAAAM,EAAG,MAAKA,EAClBC,GAAKC,EAAAA,EAAAA,GAAA7I,EAAA8I,GAERN,GAAWO,EAAAA,EAAAA,IAAmBP,EAAU,eAIxC,IAAMQ,GAAeC,EAAAA,EAAAA,UAAQ,iBAAO,CAAC,CAAC,GAAG,IACzC,OAAoB3E,EAAAA,EAAAA,KAAK4E,EAAAA,EAAAA,SAA4B,CACnDhH,MAAO8G,EACP3E,UAAuBC,EAAAA,EAAAA,KAAK+D,GAAS3G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACnC6G,IAAKA,GACFK,GAAK,IACRzD,UAAWgE,IAAWhE,EAAWqD,EAAUC,GAAQ,GAAJjF,OAAOgF,EAAQ,KAAAhF,OAAIiF,GAAQC,GAAiB,sBAGjG,IACAhE,EAAW0E,YAAc,aACzB,IAAeC,OAAOC,OAAO5E,EAAY,CACvC6E,KAAMpB,EACNqB,MAhCsB,SAAAZ,GAAK,OAAiBtE,EAAAA,EAAAA,KAAK6D,EAAgB,CACjE9D,UAAuBC,EAAAA,EAAAA,KAAKmF,EAAAA,GAAc/H,EAAAA,EAAAA,GAAA,CACxCiD,KAAM,SACHiE,KAEL,EA4BAc,SAvCyB,SAAAd,GAAK,OAAiBtE,EAAAA,EAAAA,KAAK6D,EAAgB,CACpE9D,UAAuBC,EAAAA,EAAAA,KAAKmF,EAAAA,GAAc/H,EAAAA,EAAAA,GAAA,CACxCiD,KAAM,YACHiE,KAEL,G","sources":["components/CheckoutForm.js","pages/HealthPackageList.jsx","../node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, Button, InputGroup, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport { availablePincodes } from '../components/availablePincodes.js';\n\nconst CheckoutForm = ({ show, handleClose, CartItem, setCartItem }) => {\n  const [orderData, setOrderData] = useState({\n    pincode: '',\n    name: '',\n    email: '',\n    address: '',\n    phoneno: '',\n    age: '',\n    noOfPersons: 1,\n    appointmentDate: '',\n    beneficiaries: [],\n  });\n  const [pincodeMessage, setPincodeMessage] = useState('');\n\n  useEffect(() => {\n    setOrderData((prevState) => ({\n      ...prevState,\n      beneficiaries: Array.from({ length: prevState.noOfPersons }, () => ({\n        name: '',\n        age: '',\n        gender: '',\n      })),\n    }));\n  }, [orderData.noOfPersons]);\n\n  const checkAvailability = () => {\n    if (availablePincodes.includes(orderData.pincode)) {\n      setPincodeMessage('Service is available in your pincode!');\n    } else {\n      setPincodeMessage('Sorry, service is not available in your pincode.');\n    }\n  };\n\n  const handleBeneficiariesChange = (index, field, value) => {\n    const newBeneficiaries = [...orderData.beneficiaries];\n    newBeneficiaries[index] = { ...newBeneficiaries[index], [field]: value };\n    setOrderData({ ...orderData, beneficiaries: newBeneficiaries });\n  };\n\n  const handleSubmitOrder = async () => {\n    if (!availablePincodes.includes(orderData.pincode)) {\n      alert('Service is not available in your pincode.');\n      return;\n    }\n\n    const orderDetails = {\n      pincode: orderData.pincode,\n      name: orderData.name,\n      email: orderData.email,\n      address: orderData.address,\n      phoneno: orderData.phoneno,\n      age: orderData.age,\n      noOfPersons: orderData.noOfPersons,\n      appointmentDate: orderData.appointmentDate,\n      beneficiaries: orderData.beneficiaries,\n      cartItems: CartItem,\n    };\n\n    console.log(\"Order Details: \", orderDetails); // Log the order details\n\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/orders`,\n        orderDetails\n      );\n      if (response.data.success) {\n        setCartItem([]);\n        handleClose();\n        alert('Order submitted successfully!');\n      } else {\n        alert('Error submitting order. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting order:', error);\n      alert('Error submitting order. Please try again.');\n    }\n  };\n\n  const generateDateOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(currentDate.getDate() + i);\n      const dateString = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n      });\n      options.push(\n        <option key={i} value={dateString}>\n          {dateString}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Checkout Form</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"formPincode\">\n            <InputGroup>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Pincode\"\n                value={orderData.pincode}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, pincode: e.target.value })\n                }\n                name=\"pincode\"\n              />\n              <Button variant=\"outline-secondary\" onClick={checkAvailability}>\n                Check Availability\n              </Button>\n            </InputGroup>\n            <Form.Text className=\"text-muted\">{pincodeMessage}</Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formName\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              value={orderData.name}\n              onChange={(e) =>\n                setOrderData({ ...orderData, name: e.target.value })\n              }\n              name=\"name\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              value={orderData.email}\n              onChange={(e) =>\n                setOrderData({ ...orderData, email: e.target.value })\n              }\n              name=\"email\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formAddress\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your address\"\n              value={orderData.address}\n              onChange={(e) =>\n                setOrderData({ ...orderData, address: e.target.value })\n              }\n              name=\"address\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formPhoneNo\">\n            <Form.Label>Phone No</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your phone no\"\n              value={orderData.phoneno}\n              onChange={(e) =>\n                setOrderData({ ...orderData, phoneno: e.target.value })\n              }\n              name=\"phoneno\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formAge\">\n            <Form.Label>Age</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your age\"\n              value={orderData.age}\n              onChange={(e) =>\n                setOrderData({ ...orderData, age: e.target.value })\n              }\n              name=\"age\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formNoOfPersons\">\n            <Form.Label>Number of Persons</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={orderData.noOfPersons}\n              onChange={(e) => {\n                const newNoOfPersons = parseInt(e.target.value, 10);\n                setOrderData({\n                  ...orderData,\n                  noOfPersons: newNoOfPersons,\n                  beneficiaries: Array.from(\n                    { length: newNoOfPersons },\n                    (_, i) => orderData.beneficiaries[i] || { name: '', age: '', gender: '' }\n                  ),\n                });\n              }}\n              name=\"noOfPersons\"\n            >\n              {[...Array(10).keys()].map((num) => (\n                <option key={num + 1} value={num + 1}>\n                  {num + 1}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"formAppointmentDate\">\n            <Form.Label>Appointment Date</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={orderData.appointmentDate}\n              onChange={(e) =>\n                setOrderData({ ...orderData, appointmentDate: e.target.value })\n              }\n              name=\"appointmentDate\"\n            >\n              {generateDateOptions()}\n            </Form.Control>\n          </Form.Group>\n          <h5>Beneficiaries</h5>\n          {orderData.beneficiaries.map((beneficiary, index) => (\n            <div key={index}>\n              <Form.Group controlId={`formBeneficiaryName${index}`}>\n                <Form.Label>Beneficiary Name {index + 1}</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter name\"\n                  value={beneficiary.name}\n                  onChange={(e) =>\n                    handleBeneficiariesChange(index, 'name', e.target.value)\n                  }\n                  name={`beneficiaryName${index}`}\n                />\n              </Form.Group>\n              <Form.Group controlId={`formBeneficiaryAge${index}`}>\n                <Form.Label>Age</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter age\"\n                  value={beneficiary.age}\n                  onChange={(e) =>\n                    handleBeneficiariesChange(index, 'age', e.target.value)\n                  }\n                  name={`beneficiaryAge${index}`}\n                />\n              </Form.Group>\n              <Form.Group controlId={`formBeneficiaryGender${index}`}>\n                <Form.Label>Gender</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={beneficiary.gender}\n                  onChange={(e) =>\n                    handleBeneficiariesChange(index, 'gender', e.target.value)\n                  }\n                  name={`beneficiaryGender${index}`}\n                >\n                  <option value=\"\">Select Gender</option>\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                  <option value=\"Other\">Other</option>\n                </Form.Control>\n              </Form.Group>\n            </div>\n          ))}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleSubmitOrder}>\n          Book Now\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CheckoutForm;\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { healthPackagesArray } from \"./HealthPackages\";\nimport { DataContainer } from \"../App\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport CheckoutForm from \"../components/CheckoutForm\";\nimport \"../Styles/HealthPackageList.css\";\n\nconst HealthPackagesList = () => {\n  const { addToCart } = useContext(DataContainer);\n  const [showCheckout, setShowCheckout] = useState(false);\n  const [selectedPackage, setSelectedPackage] = useState(null);\n\n  const handleAddToCart = (pkg) => {\n    addToCart(pkg);\n    toast.success(\"Product has been added to cart!\");\n  };\n\n  const handleBookNow = (pkg) => {\n    setSelectedPackage(pkg);\n    setShowCheckout(true);\n  };\n\n  const handleCloseCheckout = () => {\n    setShowCheckout(false);\n    setSelectedPackage(null);\n  };\n\n  return (\n    <div className=\"packages-list\">\n      <ToastContainer />\n      <h2>Available Health Packages</h2>\n      <div className=\"packages-grid\">\n        {healthPackagesArray.map((pkg) => (\n          <div key={pkg.id} className=\"package-card\">\n            <Link to={`/health/${pkg.id}`} className=\"package-link\">\n              <div className=\"package-image-container\">\n                <img\n                  src={pkg.imgUrl}\n                  alt={pkg.productName}\n                  className=\"package-image\"\n                />\n                <div className=\"hover-overlay\">\n                  <h2>{pkg.overlayTitle}</h2>\n                  <ul>\n                    {pkg.overlayDetails?.map((detail, index) => (\n                      <li key={index}>{detail}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </Link>\n            <div className=\"package-details\">\n              <div className=\"package-name\">{pkg.productName}</div>\n              <div className=\"package-desc\">{pkg.desc}</div>\n            </div>\n            <div className=\"price-cart-box\">\n              <div className=\"package-price\">&#8377;{pkg.price}</div>\n              <button\n                className=\"book-now-button\"\n                onClick={() => handleBookNow(pkg)}\n              >\n                Book Now\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n      {showCheckout && (\n        <CheckoutForm\n          show={showCheckout}\n          handleClose={handleCloseCheckout}\n          CartItem={selectedPackage ? [selectedPackage] : []}\n          setCartItem={() => {}}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default HealthPackagesList;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"names":["_ref","show","handleClose","CartItem","setCartItem","_useState","useState","pincode","name","email","address","phoneno","age","noOfPersons","appointmentDate","beneficiaries","_useState2","_slicedToArray","orderData","setOrderData","_useState3","_useState4","pincodeMessage","setPincodeMessage","useEffect","prevState","_objectSpread","Array","from","length","gender","handleBeneficiariesChange","index","field","value","newBeneficiaries","_toConsumableArray","_defineProperty","handleSubmitOrder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderDetails","wrap","_context","prev","next","availablePincodes","alert","abrupt","cartItems","console","log","axios","concat","process","sent","data","success","t0","error","stop","apply","arguments","_jsxs","Modal","onHide","children","_jsx","closeButton","Form","controlId","InputGroup","type","placeholder","onChange","e","target","Button","variant","onClick","className","as","newNoOfPersons","parseInt","_","i","keys","map","num","options","currentDate","Date","date","setDate","getDate","dateString","toLocaleDateString","year","month","day","push","generateDateOptions","beneficiary","useContext","DataContainer","addToCart","showCheckout","setShowCheckout","selectedPackage","setSelectedPackage","ToastContainer","healthPackagesArray","pkg","_pkg$overlayDetails","Link","to","id","src","imgUrl","alt","productName","overlayTitle","overlayDetails","detail","desc","price","handleBookNow","CheckoutForm","InputGroupText","createWithBsPrefix","Component","React","ref","bsPrefix","size","hasValidation","_ref$as","props","_objectWithoutProperties","_excluded","useBootstrapPrefix","contextValue","useMemo","InputGroupContext","classNames","displayName","Object","assign","Text","Radio","FormCheckInput","Checkbox"],"sourceRoot":""}