{"version":3,"file":"static/js/970.3b3b4e75.chunk.js","mappings":"2TA8ZA,IAxZ6B,SAAHA,GAAmC,IAA7BC,EAAQD,EAARC,SAAUC,EAAWF,EAAXE,YACxCC,GAAkCC,EAAAA,EAAAA,UAAS,CACzCC,QAAS,GACTC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,IAAK,GACLC,YAAa,EACbC,gBAAiB,GACjBC,cAAe,CACb,CAAEP,KAAM,GAAII,IAAK,GAAII,OAAQ,KAE/BC,MAAO,KACPC,GAAAC,EAAAA,EAAAA,GAAAd,EAAA,GAbKe,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAc9BI,GAA4ChB,EAAAA,EAAAA,UAAS,IAAGiB,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,IAExCG,EAAAA,EAAAA,YAAU,WACRL,GAAa,SAACM,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClBD,GAAS,IACZZ,cAAec,MAAMC,KAAK,CAAEC,OAAQJ,EAAUd,cAAe,iBAAO,CAClEL,KAAM,GACNI,IAAK,GACLI,OAAQ,GACT,KAAE,GAEP,GAAG,CAACI,EAAUP,eAEda,EAAAA,EAAAA,YAAU,WACR,IAAKN,EAAUN,gBAAiB,CAC9B,IAAMkB,EAAW,IAAIC,KACrBD,EAASE,QAAQF,EAASG,UAAY,GAEtC,IAAMC,EAAcJ,EAASK,mBAAmB,QAAS,CACvDC,KAAM,UACNC,MAAO,QACPC,IAAK,YAGPnB,GAAa,SAACoB,GAAI,OAAAb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACba,GAAI,IACP3B,gBAAiBsB,GAAW,GAEhC,CACF,GAAG,IAEH,IAQMM,EAA4B,SAACC,EAAOC,EAAOC,GAC/C,IAAMC,GAAgBC,EAAAA,EAAAA,GAAO3B,EAAUL,eACvC+B,EAAiBH,IAAMf,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQkB,EAAiBH,IAAM,IAAAK,EAAAA,EAAAA,GAAA,GAAGJ,EAAQC,IACjExB,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAEL,cAAe+B,IAC9C,EAEMG,EAAmB,SAACC,EAAMC,GAC9B,IAAIC,GAAYL,EAAAA,EAAAA,GAAO3B,EAAUH,OAC7BkC,EACGC,EAAaC,SAASH,IACzBE,EAAaE,KAAKJ,GAGpBE,EAAeA,EAAaG,QAAO,SAACC,GAAC,OAAKA,IAAMN,CAAI,IAEtD7B,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAEH,MAAOmC,IACtC,EAEMK,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAC,MAAA,OAmBvB,OAlBDC,QAAQC,IAAI,gCAAiChD,GAEvC2C,EAAe,CACnBxD,QAASa,EAAUb,QACnBC,KAAMY,EAAUZ,KAChBC,MAAOW,EAAUX,MACjBC,QAASU,EAAUV,QACnBC,QAASS,EAAUT,QACnBC,IAAKQ,EAAUR,IACfC,YAAaO,EAAUP,YACvBC,gBAAiBM,EAAUN,gBAC3BC,cAAeK,EAAUL,cAAcsD,KAAI,SAACC,GAAW,MAAM,CAC3D9D,KAAM8D,EAAY9D,KAClBI,IAAK0D,EAAY1D,IACjBI,OAAQsD,EAAYtD,OACrB,IACDC,MAAOG,EAAUH,MACjBsD,UAAWpE,GACZ8D,EAAAxB,KAAA,EAAAwB,EAAAC,KAAA,EAGwBM,EAAAA,EAAAA,KAAW,GAADC,OAC5BC,uCAA6B,eAChCX,GACA,KAAD,EAHaE,EAAAU,KAIDC,KAAKC,SAChBzE,EAAY,IACZ0E,MAAM,kCAENA,MAAM,6CACPb,EAAAC,KAAA,gBAAAD,EAAAxB,KAAA,EAAAwB,EAAAc,GAAAd,EAAA,SAEDE,QAAQa,MAAM,0BAAyBf,EAAAc,IACvCD,MAAM,6CAA6C,yBAAAb,EAAAgB,OAAA,GAAAnB,EAAA,kBAEtD,kBApCsB,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,KA0DvB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,yBAAwBC,UAC3CH,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAAAD,UACFE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,GAAGJ,SAAA,EACVH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,eAAcC,SAAC,cAC7BH,EAAAA,EAAAA,KAAA,KAAGQ,MAAO,CAAEC,SAAU,OAAQC,MAAO,OAAQC,aAAc,QAASR,SAAC,mHAIrEH,EAAAA,EAAAA,KAAA,OAAKQ,MAAO,CACVI,OAAQ,qBACRC,QAAS,OACTF,aAAc,OACdG,gBAAiB,WACjBX,UACAE,EAAAA,EAAAA,MAAA,KAAGG,MAAO,CAAEO,OAAQ,EAAGN,SAAU,QAASN,SAAA,CAAC,4BACjBH,EAAAA,EAAAA,KAAA,QAAMQ,MAAO,CAAEE,MAAO,UAAWM,OAAQ,WAAYb,SAAC,sBAAyB,mCAI3GE,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAAAd,SAAA,EACHE,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAACC,UAAU,cAAaf,SAAA,EACjCE,EAAAA,EAAAA,MAAA,OAAKG,MAAO,CAAEW,QAAS,OAAQC,WAAY,aAAcC,IAAK,QAASlB,SAAA,EACrEH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,QAAY,CACXK,KAAK,OACLC,YAAY,gBACZ9D,MAAOzB,EAAUb,QACjBqG,SAAU,SAACC,GAAC,OACVxF,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAEb,QAASsG,EAAEC,OAAOjE,QAAQ,EAEzDrC,KAAK,UACL8E,UAAU,eACVM,MAAO,CAAEmB,MAAO,UAElB3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CAACC,QAAQ,oBAAoBC,QAtHxB,WACpBC,EAAAA,EAAAA,SAA2B/F,EAAUb,SACvCkB,EAAkB,yCAElBA,EAAkB,mDAEtB,EAgH6E8D,SAAC,2BAIlEH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,KAAS,CAACf,UAAU,aAAYC,SAAE/D,QAErCiE,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAACC,UAAU,WAAUf,SAAA,EAC9BH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CAAAd,SAAC,YACZH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,QAAY,CACXK,KAAK,OACLC,YAAY,kBACZ9D,MAAOzB,EAAUZ,KACjBoG,SAAU,SAACC,GAAC,OACVxF,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAEZ,KAAMqG,EAAEC,OAAOjE,QAAQ,EAEtDrC,KAAK,OACL8E,UAAU,qBAGdG,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAACC,UAAU,YAAWf,SAAA,EAC/BH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CAAAd,SAAC,WACZH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,QAAY,CACXK,KAAK,QACLC,YAAY,mBACZ9D,MAAOzB,EAAUX,MACjBmG,SAAU,SAACC,GAAC,OACVxF,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAEX,MAAOoG,EAAEC,OAAOjE,QAAQ,EAEvDrC,KAAK,QACL8E,UAAU,qBAGdG,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAACC,UAAU,cAAaf,SAAA,EACjCH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CAAAd,SAAC,aACZH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,QAAY,CACXK,KAAK,OACLC,YAAY,qBACZ9D,MAAOzB,EAAUV,QACjBkG,SAAU,SAACC,GAAC,OACVxF,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAEV,QAASmG,EAAEC,OAAOjE,QAAQ,EAEzDrC,KAAK,UACL8E,UAAU,qBAGdG,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAACC,UAAU,cAAaf,SAAA,EACjCH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CAAAd,SAAC,cACZH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,QAAY,CACXK,KAAK,OACLC,YAAY,sBACZ9D,MAAOzB,EAAUT,QACjBiG,SAAU,SAACC,GAAC,OACVxF,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAET,QAASkG,EAAEC,OAAOjE,QAAQ,EAEzDrC,KAAK,UACL8E,UAAU,qBAGdG,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAACC,UAAU,UAASf,SAAA,EAC7BH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CAAAd,SAAC,SACZH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,QAAY,CACXK,KAAK,OACLC,YAAY,iBACZ9D,MAAOzB,EAAUR,IACjBgG,SAAU,SAACC,GAAC,OACVxF,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIR,GAAS,IAAER,IAAKiG,EAAEC,OAAOjE,QAAQ,EAErDrC,KAAK,MACL8E,UAAU,qBAGdG,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAACC,UAAU,kBAAiBf,SAAA,EACrCH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CAAAd,SAAC,uBACZH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,QAAY,CACXe,GAAG,SACHvE,MAAOzB,EAAUP,YACjB+F,SAAU,SAACC,GACT,IAAMQ,EAAiBC,SAAST,EAAEC,OAAOjE,MAAO,IAChDxB,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTR,GAAS,IACZP,YAAawG,EACbtG,cAAec,MAAMC,KACnB,CAAEC,OAAQsF,IACV,SAACE,EAAGC,GAAC,OACHpG,EAAUL,cAAcyG,IAAM,CAC5BhH,KAAM,GACNI,IAAK,GACLI,OAAQ,GACT,MAGT,EACAR,KAAK,cACL8E,UAAU,4BAA4BC,UAErCxC,EAAAA,EAAAA,GAAIlB,MAAM,IAAI4F,QAAQpD,KAAI,SAACqD,GAAG,OAC7BtC,EAAAA,EAAAA,KAAA,UAAsBvC,MAAO6E,EAAM,EAAEnC,SAClCmC,EAAM,GADIA,EAAM,EAEV,OAGbtC,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,KAAS,CAACf,UAAU,eAAcC,SAAC,6EAMtCE,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAACC,UAAU,sBAAqBf,SAAA,EACzCH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CAAAd,SAAC,sBACZH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,QAAY,CACXe,GAAG,SACHvE,MAAOzB,EAAUN,gBACjB8F,SAAU,SAACC,GAAC,OACVxF,GAAYO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTR,GAAS,IACZN,gBAAiB+F,EAAEC,OAAOjE,QAC1B,EAEJrC,KAAK,kBACL8E,UAAU,4BAA4BC,SA7KxB,WAG1B,IAFA,IAAMoC,EAAU,GACVC,EAAc,IAAI3F,KACfuF,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAMK,EAAO,IAAI5F,KACjB4F,EAAK3F,QAAQ0F,EAAYzF,UAAYqF,GACrC,IAAMM,EAAaD,EAAKxF,mBAAmB,QAAS,CAClDC,KAAM,UACNC,MAAO,QACPC,IAAK,YAEPmF,EAAQrE,MACN8B,EAAAA,EAAAA,KAAA,UAAgBvC,MAAOiF,EAAWvC,SAC/BuC,GADUN,GAIjB,CACA,OAAOG,CACT,CA6JeI,SAIL3C,EAAAA,EAAAA,KAAA,MAAAG,SAAI,kBACHnE,EAAUL,cAAcsD,KAAI,SAACC,EAAa3B,GAAK,OAC9C8C,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEE,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAACC,UAAS,sBAAA7B,OAAwB9B,GAAQ4C,SAAA,EACnDE,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAAAd,SAAA,CAAC,oBAAkB5C,EAAQ,MACtCyC,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,QAAY,CACXK,KAAK,OACLC,YAAY,aACZ9D,MAAOyB,EAAY9D,KACnBoG,SAAU,SAACC,GAAC,OACVnE,EAA0BC,EAAO,OAAQkE,EAAEC,OAAOjE,MAAM,EAE1DrC,KAAI,kBAAAiE,OAAoB9B,GACxB2C,UAAU,qBAGdG,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAACC,UAAS,qBAAA7B,OAAuB9B,GAAQ4C,SAAA,EAClDH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CAAAd,SAAC,SACZH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,QAAY,CACXK,KAAK,OACLC,YAAY,YACZ9D,MAAOyB,EAAY1D,IACnBgG,SAAU,SAACC,GAAC,OACVnE,EAA0BC,EAAO,MAAOkE,EAAEC,OAAOjE,MAAM,EAEzDrC,KAAI,iBAAAiE,OAAmB9B,GACvB2C,UAAU,qBAGdG,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAACC,UAAS,wBAAA7B,OAA0B9B,GAAQ4C,SAAA,EACrDH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CAAAd,SAAC,YACZE,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,QAAY,CACXe,GAAG,SACHvE,MAAOyB,EAAYtD,OACnB4F,SAAU,SAACC,GAAC,OACVnE,EAA0BC,EAAO,SAAUkE,EAAEC,OAAOjE,MAAM,EAE5DrC,KAAI,oBAAAiE,OAAsB9B,GAC1B2C,UAAU,4BAA4BC,SAAA,EAEtCH,EAAAA,EAAAA,KAAA,UAAQvC,MAAM,GAAE0C,SAAC,mBACjBH,EAAAA,EAAAA,KAAA,UAAQvC,MAAM,OAAM0C,SAAC,UACrBH,EAAAA,EAAAA,KAAA,UAAQvC,MAAM,SAAQ0C,SAAC,YACvBH,EAAAA,EAAAA,KAAA,UAAQvC,MAAM,QAAO0C,SAAC,kBAzClB5C,EA4CJ,KAGRyC,EAAAA,EAAAA,KAAA,MAAAG,SAAI,wCACJE,EAAAA,EAAAA,MAACY,EAAAA,EAAAA,MAAU,CAACC,UAAU,sBAAqBf,SAAA,EACzCH,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CACTK,KAAK,WACLsB,MAAM,8CACNC,QAAS7G,EAAUH,MAAMoC,SAAS,6BAClCuD,SAAU,SAACC,GAAC,OACV5D,EACE,4BACA4D,EAAEC,OAAOmB,QACV,KAGL7C,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CACTK,KAAK,WACLsB,MAAM,8BACNC,QAAS7G,EAAUH,MAAMoC,SAAS,YAClCuD,SAAU,SAACC,GAAC,OAAK5D,EAAiB,WAAY4D,EAAEC,OAAOmB,QAAQ,KAEjE7C,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CACTK,KAAK,WACLsB,MAAM,8BACNC,QAAS7G,EAAUH,MAAMoC,SAAS,YAClCuD,SAAU,SAACC,GAAC,OAAK5D,EAAiB,WAAY4D,EAAEC,OAAOmB,QAAQ,KAEjE7C,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CACTK,KAAK,WACLsB,MAAM,wCACNC,QAAS7G,EAAUH,MAAMoC,SAAS,sBAClCuD,SAAU,SAACC,GAAC,OACV5D,EAAiB,qBAAsB4D,EAAEC,OAAOmB,QAAQ,KAG5D7C,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CACTK,KAAK,WACLsB,MAAM,6CACNC,QAAS7G,EAAUH,MAAMoC,SAAS,2BAClCuD,SAAU,SAACC,GAAC,OACV5D,EAAiB,0BAA2B4D,EAAEC,OAAOmB,QAAQ,KAGjE7C,EAAAA,EAAAA,KAACiB,EAAAA,EAAAA,MAAU,CACTK,KAAK,WACLsB,MAAM,+DACNC,QAAS7G,EAAUH,MAAMoC,SACvB,6CAEFuD,SAAU,SAACC,GAAC,OACV5D,EACE,4CACA4D,EAAEC,OAAOmB,QACV,QAKP7C,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CACLC,QAAQ,UACRC,QAASzD,EACT6B,UAAU,iBAAgBC,SAC3B,sBAQb,C,2KC7NA,UAtLuB,WAAO,IAAD2C,EACnBC,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBF,UACAG,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAEjBpI,GAA8CC,EAAAA,EAAAA,UAAS,MAAKY,GAAAC,EAAAA,EAAAA,GAAAd,EAAA,GAArDqI,EAAexH,EAAA,GAAEyH,EAAkBzH,EAAA,GAC1CI,GAAgDhB,EAAAA,EAAAA,UAAS,MAAKiB,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvDsH,EAAgBrH,EAAA,GAAEsH,EAAmBtH,EAAA,GAC5CuH,GAAwCxI,EAAAA,EAAAA,UAAS,QAAOyI,GAAA5H,EAAAA,EAAAA,GAAA2H,EAAA,GAAjDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAkC5I,EAAAA,EAAAA,UAAS,GAAE6I,GAAAhI,EAAAA,EAAAA,GAAA+H,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BhJ,EAAAA,EAAAA,WAAS,GAAMiJ,GAAApI,EAAAA,EAAAA,GAAAmI,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAoCpJ,EAAAA,EAAAA,WAAS,GAAMqJ,GAAAxI,EAAAA,EAAAA,GAAAuI,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,IAEhCjI,EAAAA,EAAAA,YAAU,WACR,IAAMoI,EAAY,eAAA5J,GAAAyD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAiG,EAAAnF,EAAA,OAAAhB,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAC,MAAA,cAAAD,EAAAxB,KAAA,EAAAwB,EAAAC,KAAA,EAEC8F,MAAM,GAADvF,OAAIC,uCAA6B,eAAAD,OAAc6D,IAAM,KAAD,EAAlE,OAAHyB,EAAG9F,EAAAU,KAAAV,EAAAC,KAAA,EACU6F,EAAIE,OAAO,KAAD,EAAvBrF,EAAIX,EAAAU,KACVgE,EAAmB/D,GACnBiF,GAAc,GAAQ5F,EAAAC,KAAA,iBAAAD,EAAAxB,KAAA,GAAAwB,EAAAc,GAAAd,EAAA,SAEtBE,QAAQa,MAAM,iCAAgCf,EAAAc,IAAO,yBAAAd,EAAAgB,OAAA,GAAAnB,EAAA,mBAExD,kBATiB,OAAA5D,EAAAgF,MAAA,KAAAC,UAAA,KAWlB2E,IACAI,OAAOC,SAAS,EAAG,EACrB,GAAG,CAAC7B,IA0CJ,OAAKI,GAGHtD,EAAAA,EAAAA,KAACgF,EAAAA,SAAQ,CAAA7E,UACPH,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,eAAeM,MAAO,CAAEyE,UAAW,SAAU9E,UAChEE,EAAAA,EAAAA,MAACD,EAAAA,EAAG,CAAAD,SAAA,EACFH,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACC,GAAI,EAAEJ,UACTE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,8BAA6BC,SAAA,EAC1CH,EAAAA,EAAAA,KAAA,WAAAG,UACEE,EAAAA,EAAAA,MAACD,EAAAA,EAAG,CAACF,UAAU,4CAA2CC,SAAA,EACxDH,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACC,GAAI,EAAGL,UAAU,0BAAyBC,UAC7CE,EAAAA,EAAAA,MAAA,OAAKH,UAAU,8BAA6BC,SAAA,EAC1CH,EAAAA,EAAAA,KAAA,OACEkF,QAAQ,OACRC,IAAKX,EAAa,6BA1CpB,SAACY,GACnB,IAAKA,EAAQ,MAAO,6BAGpB,GAAIA,EAAOnH,SAAS,kBAAmB,CACrC,IAAMoH,EAAWD,EAAOE,MAAM,KAAKC,MACnC,MAAM,WAANlG,OAAkBgG,EACpB,CAGA,OAAID,EAAOI,WAAW,YACbJ,EAIJA,EAAOI,WAAW,KAKhBJ,GAAU,6BAJT,WAAN/F,OAAkB+F,EAKtB,CAqBuEK,CAAYnC,EAAgB8B,QAC7EM,IAAKpC,EAAgBqC,YACrBzF,UAAU,sBACV0F,QAtBG,WACvB7G,QAAQC,IAAI,wCACZyF,GAAc,EAChB,KAqBoBpE,EAAAA,EAAAA,MAAA,UACEH,UAAS,2BAAAb,OAA6B+E,EAAQ,SAAW,IACzD,aAAYA,EAAQ,SAAW,OAC/BtC,QAxDH,WACjBmC,EAAaD,GAAaI,GAAS,EAAI,IACvCC,GAAUD,EACZ,EAsDsB9C,KAAK,SAAQnB,SAAA,EAEbH,EAAAA,EAAAA,KAAA,YAAU5E,KAAMgJ,EAAQ,QAAU,mBAClCpE,EAAAA,EAAAA,KAAA,QAAME,UAAU,aAAYC,SAAE6D,aAIpC3D,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,EAAGL,UAAU,2BAA0BC,SAAA,EAC9CH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,wBAAuBC,SAAEmD,EAAgBqC,eACvDtF,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uBAAsBC,SAAA,EACnCE,EAAAA,EAAAA,MAAA,QAAMH,UAAU,wBAAuBC,SAAA,CAAC,SAAEmD,EAAgBuC,UAC1D7F,EAAAA,EAAAA,KAAA,QAAME,UAAU,2BAA0BC,SAAEmD,EAAgBwC,eAE9D9F,EAAAA,EAAAA,KAAA,KAAGE,UAAU,4BAA2BC,SAAEmD,EAAgByC,aAC1D1F,EAAAA,EAAAA,MAAA,UAAQH,UAAU,0BAA0B4B,QA7E5C,WAChBiB,EAAUO,GAEVF,EAAS,QACX,EAyEkF,aAAW,cAAajD,SAAA,EACtFH,EAAAA,EAAAA,KAAA,YAAU5E,KAAK,iBAA0B,2BAOnB,QAA7B0H,EAAAQ,EAAgB0C,qBAAa,IAAAlD,OAAA,EAA7BA,EAA+BnG,QAAS,IACvC0D,EAAAA,EAAAA,MAAA,WAASH,UAAU,6BAA4BC,SAAA,EAC7CH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,mBACHmD,EAAgB0C,cAAc/G,KAAI,SAAC6G,EAAU1D,GAAC,OAC7C/B,EAAAA,EAAAA,MAAA,OAAaH,UAAU,0BAAyBC,SAAA,EAC9CE,EAAAA,EAAAA,MAAA,MACEH,UAAU,gCACV4B,QAAS,kBACP2B,EACED,IAAqBsC,EAASG,aAAe,KAAOH,EAASG,aAC9D,EAEHC,SAAU,EACVC,KAAK,SACL,uBAAA9G,OAAsByG,EAASG,cAC/BG,UAAW,SAAA3E,GACK,UAAVA,EAAE4E,KAA6B,MAAV5E,EAAE4E,KACzB5C,EACED,IAAqBsC,EAASG,aAAe,KAAOH,EAASG,aAGnE,EAAE9F,SAAA,EAEFH,EAAAA,EAAAA,KAAA,YAAU5E,KAAMoI,IAAqBsC,EAASG,aAAe,uBAAyB,4BACrFH,EAASG,gBAEXzC,IAAqBsC,EAASG,eAC7BjG,EAAAA,EAAAA,KAAA,MAAIE,UAAU,sBAAqBC,SAChC2F,EAASjK,MAAMoD,KAAI,SAACnB,EAAMP,GAAK,OAC9ByC,EAAAA,EAAAA,KAAA,MAAAG,SAAiBrC,GAARP,EAAkB,QAzBzB6E,EA6BJ,QAKZ/B,EAAAA,EAAAA,MAAA,WAASH,UAAU,4BAA2BC,SAAA,EAC5CH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,0BAAyBC,UACrCH,EAAAA,EAAAA,KAAA,MACEE,UAA4B,SAAjB0D,EAA0B,SAAW,GAChDpD,MAAO,CAAEQ,OAAQ,WACjBc,QAAS,kBAAM+B,EAAgB,OAAO,EAAC1D,SACxC,kBAIe,SAAjByD,IACC5D,EAAAA,EAAAA,KAAA,KAAGE,UAAU,4BAA2BC,SAAEmD,EAAgBgD,uBAMlEtG,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACC,GAAI,EAAEJ,UACTH,EAAAA,EAAAA,KAAA,OAAKE,UAAU,8BAA6BC,UAC1CH,EAAAA,EAAAA,KAACuG,EAAAA,EAAoB,CACnBxL,SAAU,CAACuI,GACXtI,YAAauI,gBAxGEvD,EAAAA,EAAAA,KAAA,MAAIE,UAAU,mBAAkBC,SAAC,cAgHhE,C","sources":["components/EmbeddedCheckoutForm.js","pages/ProductDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, InputGroup, Form, Container, Row, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { availablePincodes } from \"../components/availablePincodes.js\";\nimport \"../Styles/embeddedCheckoutForm.css\";\n\nconst EmbeddedCheckoutForm = ({ CartItem, setCartItem }) => {\n  const [orderData, setOrderData] = useState({\n    pincode: \"\",\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    phoneno: \"\",\n    age: \"\",\n    noOfPersons: 1,\n    appointmentDate: \"\",\n    beneficiaries: [\n      { name: \"\", age: \"\", gender: \"\" }, // Keeping the beneficiary details\n    ],\n    tests: [], // Separate tests array for the order\n  });\n  const [pincodeMessage, setPincodeMessage] = useState(\"\");\n\n  useEffect(() => {\n    setOrderData((prevState) => ({\n      ...prevState,\n      beneficiaries: Array.from({ length: prevState.noOfPersons }, () => ({\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n      })),\n    }));\n  }, [orderData.noOfPersons]);\n\n  useEffect(() => {\n    if (!orderData.appointmentDate) {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n\n      const defaultDate = tomorrow.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n\n      setOrderData((prev) => ({\n        ...prev,\n        appointmentDate: defaultDate,\n      }));\n    }\n  }, []);\n\n  const checkAvailability = () => {\n    if (availablePincodes.includes(orderData.pincode)) {\n      setPincodeMessage(\"Service is available in your pincode!\");\n    } else {\n      setPincodeMessage(\"Sorry, service is not available in your pincode.\");\n    }\n  };\n\n  const handleBeneficiariesChange = (index, field, value) => {\n    const newBeneficiaries = [...orderData.beneficiaries];\n    newBeneficiaries[index] = { ...newBeneficiaries[index], [field]: value };\n    setOrderData({ ...orderData, beneficiaries: newBeneficiaries });\n  };\n\n  const handleTestChange = (test, isChecked) => {\n    let updatedTests = [...orderData.tests];\n    if (isChecked) {\n      if (!updatedTests.includes(test)) {\n        updatedTests.push(test);\n      }\n    } else {\n      updatedTests = updatedTests.filter((t) => t !== test);\n    }\n    setOrderData({ ...orderData, tests: updatedTests });\n  };\n\n  const handleSubmitOrder = async () => {\n    console.log(\"Order Data before submission:\", orderData);\n\n    const orderDetails = {\n      pincode: orderData.pincode,\n      name: orderData.name,\n      email: orderData.email,\n      address: orderData.address,\n      phoneno: orderData.phoneno,\n      age: orderData.age,\n      noOfPersons: orderData.noOfPersons,\n      appointmentDate: orderData.appointmentDate,\n      beneficiaries: orderData.beneficiaries.map((beneficiary) => ({\n        name: beneficiary.name,\n        age: beneficiary.age,\n        gender: beneficiary.gender,\n      })),\n      tests: orderData.tests, // Include tests here\n      cartItems: CartItem,\n    };\n\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/orders`,\n        orderDetails\n      );\n      if (response.data.success) {\n        setCartItem([]);\n        alert(\"Order submitted successfully!\");\n      } else {\n        alert(\"Error submitting order. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting order:\", error);\n      alert(\"Error submitting order. Please try again.\");\n    }\n  };\n\n  const generateDateOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 1; i <= 7; i++) {\n      const date = new Date();\n      date.setDate(currentDate.getDate() + i); // Start from tomorrow\n      const dateString = date.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n      options.push(\n        <option key={i} value={dateString}>\n          {dateString}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <Container className=\"embedded-checkout-form\">\n      <Row>\n        <Col md={12}>\n          <h3 className=\"form-heading\">Book Now</h3>\n          <p style={{ fontSize: '14px', color: '#666', marginBottom: '20px' }}>\n            You will get a payment link shortly. You can make the payment ONLINE or pay using UPI/Cash to the technician.\n          </p>\n          \n          <div style={{ \n            border: '2px dashed #28a745', \n            padding: '15px', \n            marginBottom: '20px',\n            backgroundColor: '#f8fff8'\n          }}>\n            <p style={{ margin: 0, fontSize: '14px' }}>\n              Want to add more tests? <span style={{ color: '#007bff', cursor: 'pointer' }}>Click add to cart</span>, else fill up below form.\n            </p>\n          </div>\n          \n          <Form>\n            <Form.Group controlId=\"formPincode\">\n              <div style={{ display: 'flex', alignItems: 'flex-start', gap: '10px' }}>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Pincode\"\n                  value={orderData.pincode}\n                  onChange={(e) =>\n                    setOrderData({ ...orderData, pincode: e.target.value })\n                  }\n                  name=\"pincode\"\n                  className=\"form-control\"\n                  style={{ width: '50%' }}\n                />\n                <Button variant=\"outline-secondary\" onClick={checkAvailability}>\n                  Check Availability\n                </Button>\n              </div>\n              <Form.Text className=\"text-muted\">{pincodeMessage}</Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Name :</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                value={orderData.name}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, name: e.target.value })\n                }\n                name=\"name\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={orderData.email}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, email: e.target.value })\n                }\n                name=\"email\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAddress\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your address\"\n                value={orderData.address}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, address: e.target.value })\n                }\n                name=\"address\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formPhoneNo\">\n              <Form.Label>Phone No</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your phone no\"\n                value={orderData.phoneno}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, phoneno: e.target.value })\n                }\n                name=\"phoneno\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAge\">\n              <Form.Label>Age</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your age\"\n                value={orderData.age}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, age: e.target.value })\n                }\n                name=\"age\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formNoOfPersons\">\n              <Form.Label>Number of Persons</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.noOfPersons}\n                onChange={(e) => {\n                  const newNoOfPersons = parseInt(e.target.value, 10);\n                  setOrderData({\n                    ...orderData,\n                    noOfPersons: newNoOfPersons,\n                    beneficiaries: Array.from(\n                      { length: newNoOfPersons },\n                      (_, i) =>\n                        orderData.beneficiaries[i] || {\n                          name: \"\",\n                          age: \"\",\n                          gender: \"\",\n                        }\n                    ),\n                  });\n                }}\n                name=\"noOfPersons\"\n                className=\"form-control large-select\" // Add custom class here\n              >\n                {[...Array(10).keys()].map((num) => (\n                  <option key={num + 1} value={num + 1}>\n                    {num + 1}\n                  </option>\n                ))}\n              </Form.Control>\n              <Form.Text className=\"text-warning\">\n                Note : The same set of tests/packages will be added for all\n                persons.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formAppointmentDate\">\n              <Form.Label>Appointment Date</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.appointmentDate}\n                onChange={(e) =>\n                  setOrderData({\n                    ...orderData,\n                    appointmentDate: e.target.value,\n                  })\n                }\n                name=\"appointmentDate\"\n                className=\"form-control large-select\" // Add custom class here\n              >\n                {generateDateOptions()}\n              </Form.Control>\n            </Form.Group>\n\n            <h5>Beneficiaries</h5>\n            {orderData.beneficiaries.map((beneficiary, index) => (\n              <div key={index}>\n                <Form.Group controlId={`formBeneficiaryName${index}`}>\n                  <Form.Label>Beneficiary Name {index + 1}</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter name\"\n                    value={beneficiary.name}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, \"name\", e.target.value)\n                    }\n                    name={`beneficiaryName${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryAge${index}`}>\n                  <Form.Label>Age</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter age\"\n                    value={beneficiary.age}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, \"age\", e.target.value)\n                    }\n                    name={`beneficiaryAge${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryGender${index}`}>\n                  <Form.Label>Gender</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={beneficiary.gender}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, \"gender\", e.target.value)\n                    }\n                    name={`beneficiaryGender${index}`}\n                    className=\"form-control large-select\" // Add custom class here\n                  >\n                    <option value=\"\">Select Gender</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Other\">Other</option>\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            ))}\n\n            <h5>Select Additional Tests (Optional)</h5>\n            <Form.Group controlId=\"formAdditionalTests\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Fasting Blood Sugar (FBS) @ Rs. 80 / Person\"\n                checked={orderData.tests.includes(\"Fasting Blood Sugar (FBS)\")}\n                onChange={(e) =>\n                  handleTestChange(\n                    \"Fasting Blood Sugar (FBS)\",\n                    e.target.checked\n                  )\n                }\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"CRP Test @ Rs. 480 / Person\"\n                checked={orderData.tests.includes(\"CRP Test\")}\n                onChange={(e) => handleTestChange(\"CRP Test\", e.target.checked)}\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"ESR Test @ Rs. 120 / Person\"\n                checked={orderData.tests.includes(\"ESR Test\")}\n                onChange={(e) => handleTestChange(\"ESR Test\", e.target.checked)}\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Covid Antibody IgG @ Rs. 400 / Person\"\n                checked={orderData.tests.includes(\"Covid Antibody IgG\")}\n                onChange={(e) =>\n                  handleTestChange(\"Covid Antibody IgG\", e.target.checked)\n                }\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Complete Urine Analysis @ Rs. 510 / Person\"\n                checked={orderData.tests.includes(\"Complete Urine Analysis\")}\n                onChange={(e) =>\n                  handleTestChange(\"Complete Urine Analysis\", e.target.checked)\n                }\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Troponin - Heart Attack Risk Test (ACTNI) @ Rs. 650 / Person\"\n                checked={orderData.tests.includes(\n                  \"Troponin - Heart Attack Risk Test (ACTNI)\"\n                )}\n                onChange={(e) =>\n                  handleTestChange(\n                    \"Troponin - Heart Attack Risk Test (ACTNI)\",\n                    e.target.checked\n                  )\n                }\n              />\n            </Form.Group>\n\n            <Button\n              variant=\"primary\"\n              onClick={handleSubmitOrder}\n              className=\"confirm-button\"\n            >\n              Book Now\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default EmbeddedCheckoutForm;\n","import { Fragment, useContext, useEffect, useState } from \"react\";\nimport Banner from \"../components/Banner/Banner\";\nimport { DataContainer } from \"../App\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport EmbeddedCheckoutForm from \"../components/EmbeddedCheckoutForm.js\";\nimport \"../Styles/productDetails.css\";\n\nconst ProductDetails = () => {\n  const { addToCart } = useContext(DataContainer);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [expandedCategory, setExpandedCategory] = useState(null);\n  const [listSelected, setListSelected] = useState(\"desc\");\n  const [likeCount, setLikeCount] = useState(0);\n  const [liked, setLiked] = useState(false);\n  const [imageError, setImageError] = useState(false);\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/api/tests/${id}`);\n        const data = await res.json();\n        setSelectedProduct(data);\n        setImageError(false); // Reset image error when new product loads\n      } catch (err) {\n        console.error(\"Failed to fetch product by ID:\", err);\n      }\n    };\n\n    fetchProduct();\n    window.scrollTo(0, 0);\n  }, [id]);\n\n  const handleAdd = () => {\n    addToCart(selectedProduct);\n    // Navigate to shop page after adding to cart\n    navigate(\"/shop\");\n  };\n\n  const handleLike = () => {\n    setLikeCount(likeCount + (liked ? -1 : 1));\n    setLiked(!liked);\n  };\n\n  // Helper function to get correct image URL\n  const getImageUrl = (imgUrl) => {\n    if (!imgUrl) return '/Images/blood-test-01.avif'; // Default fallback\n    \n    // If it's a webpack path, convert to public path\n    if (imgUrl.includes('/static/media/')) {\n      const filename = imgUrl.split('/').pop();\n      return `/Images/${filename}`;\n    }\n    \n    // If it already starts with /Images, use as is\n    if (imgUrl.startsWith('/Images/')) {\n      return imgUrl;\n    }\n    \n    // If it's just a filename, add /Images/ prefix\n    if (!imgUrl.startsWith('/')) {\n      return `/Images/${imgUrl}`;\n    }\n    \n    // Default fallback\n    return imgUrl || '/Images/blood-test-01.avif';\n  };\n\n  const handleImageError = () => {\n    console.log('Image failed to load, using fallback');\n    setImageError(true);\n  };\n\n  if (!selectedProduct) return <h4 className=\"text-center mt-5\">Loading...</h4>;\n\n  return (\n    <Fragment>\n      <Container className=\"product-page\" style={{ marginTop: '150px' }}>\n        <Row>\n          <Col md={8}>\n            <div className=\"product-details-modern-card\">\n              <section>\n                <Row className=\"align-items-center justify-content-center\">\n                  <Col md={6} className=\"product-details-img-col\">\n                    <div className=\"product-details-img-wrapper\">\n                      <img\n                        loading=\"lazy\"\n                        src={imageError ? '/Images/blood-test-01.avif' : getImageUrl(selectedProduct.imgUrl)}\n                        alt={selectedProduct.productName}\n                        className=\"product-details-img\"\n                        onError={handleImageError}\n                      />\n                      <button\n                        className={`product-details-like-btn${liked ? ' liked' : ''}`}\n                        aria-label={liked ? 'Unlike' : 'Like'}\n                        onClick={handleLike}\n                        type=\"button\"\n                      >\n                        <ion-icon name={liked ? 'heart' : 'heart-outline'}></ion-icon>\n                        <span className=\"like-count\">{likeCount}</span>\n                      </button>\n                    </div>\n                  </Col>\n                  <Col md={6} className=\"product-details-info-col\">\n                    <h2 className=\"product-details-title\">{selectedProduct.productName}</h2>\n                    <div className=\"product-details-meta\">\n                      <span className=\"product-details-price\">₹{selectedProduct.price}</span>\n                      <span className=\"product-details-category\">{selectedProduct.category}</span>\n                    </div>\n                    <p className=\"product-details-shortdesc\">{selectedProduct.shortDesc}</p>\n                    <button className=\"product-details-add-btn\" onClick={handleAdd} aria-label=\"Add to Cart\">\n                      <ion-icon name=\"cart-outline\"></ion-icon> Add to Cart\n                    </button>\n                  </Col>\n                </Row>\n              </section>\n\n              {/* Included Tests if it's a package */}\n              {selectedProduct.includedTests?.length > 0 && (\n                <section className=\"included-tests-modern mt-4\">\n                  <h3>Included Tests</h3>\n                  {selectedProduct.includedTests.map((category, i) => (\n                    <div key={i} className=\"included-tests-category\">\n                      <h4\n                        className=\"included-tests-category-title\"\n                        onClick={() =>\n                          setExpandedCategory(\n                            expandedCategory === category.categoryName ? null : category.categoryName\n                          )\n                        }\n                        tabIndex={0}\n                        role=\"button\"\n                        aria-label={`Toggle ${category.categoryName}`}\n                        onKeyDown={e => {\n                          if (e.key === 'Enter' || e.key === ' ') {\n                            setExpandedCategory(\n                              expandedCategory === category.categoryName ? null : category.categoryName\n                            );\n                          }\n                        }}\n                      >\n                        <ion-icon name={expandedCategory === category.categoryName ? 'chevron-down-outline' : 'chevron-forward-outline'}></ion-icon>\n                        {category.categoryName}\n                      </h4>\n                      {expandedCategory === category.categoryName && (\n                        <ul className=\"included-tests-list\">\n                          {category.tests.map((test, index) => (\n                            <li key={index}>{test}</li>\n                          ))}\n                        </ul>\n                      )}\n                    </div>\n                  ))}\n                </section>\n              )}\n\n              <section className=\"product-details-tabs mt-4\">\n                <ul className=\"product-details-tablist\">\n                  <li\n                    className={listSelected === \"desc\" ? \"active\" : \"\"}\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => setListSelected(\"desc\")}\n                  >\n                    Description\n                  </li>\n                </ul>\n                {listSelected === \"desc\" && (\n                  <p className=\"product-details-desc mt-2\">{selectedProduct.description}</p>\n                )}\n              </section>\n            </div>\n          </Col>\n\n          <Col md={4}>\n            <div className=\"checkout-box form-container\">\n              <EmbeddedCheckoutForm\n                CartItem={[selectedProduct]}\n                setCartItem={setSelectedProduct}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default ProductDetails;\n"],"names":["_ref","CartItem","setCartItem","_useState","useState","pincode","name","email","address","phoneno","age","noOfPersons","appointmentDate","beneficiaries","gender","tests","_useState2","_slicedToArray","orderData","setOrderData","_useState3","_useState4","pincodeMessage","setPincodeMessage","useEffect","prevState","_objectSpread","Array","from","length","tomorrow","Date","setDate","getDate","defaultDate","toLocaleDateString","year","month","day","prev","handleBeneficiariesChange","index","field","value","newBeneficiaries","_toConsumableArray","_defineProperty","handleTestChange","test","isChecked","updatedTests","includes","push","filter","t","handleSubmitOrder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderDetails","wrap","_context","next","console","log","map","beneficiary","cartItems","axios","concat","process","sent","data","success","alert","t0","error","stop","apply","arguments","_jsx","Container","className","children","Row","_jsxs","Col","md","style","fontSize","color","marginBottom","border","padding","backgroundColor","margin","cursor","Form","controlId","display","alignItems","gap","type","placeholder","onChange","e","target","width","Button","variant","onClick","availablePincodes","as","newNoOfPersons","parseInt","_","i","keys","num","options","currentDate","date","dateString","generateDateOptions","label","checked","_selectedProduct$incl","addToCart","useContext","DataContainer","id","useParams","navigate","useNavigate","selectedProduct","setSelectedProduct","expandedCategory","setExpandedCategory","_useState5","_useState6","listSelected","setListSelected","_useState7","_useState8","likeCount","setLikeCount","_useState9","_useState10","liked","setLiked","_useState11","_useState12","imageError","setImageError","fetchProduct","res","fetch","json","window","scrollTo","Fragment","marginTop","loading","src","imgUrl","filename","split","pop","startsWith","getImageUrl","alt","productName","onError","price","category","shortDesc","includedTests","categoryName","tabIndex","role","onKeyDown","key","description","EmbeddedCheckoutForm"],"sourceRoot":""}