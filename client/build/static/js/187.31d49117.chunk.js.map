{"version":3,"file":"static/js/187.31d49117.chunk.js","mappings":"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","sources":["components/EmbeddedCheckoutForm.js","pages/ProductDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, InputGroup, Form, Container, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { availablePincodes } from '../components/availablePincodes.js';\n\nconst EmbeddedCheckoutForm = ({ CartItem, setCartItem }) => {\n  const [orderData, setOrderData] = useState({\n    pincode: '',\n    name: '',\n    email: '',\n    address: '',\n    phoneno: '',\n    age: '',\n    noOfPersons: 1,\n    appointmentDate: '',\n    beneficiaries: [],\n  });\n  const [pincodeMessage, setPincodeMessage] = useState('');\n\n  useEffect(() => {\n    setOrderData((prevState) => ({\n      ...prevState,\n      beneficiaries: Array.from({ length: prevState.noOfPersons }, () => ({\n        name: '',\n        age: '',\n        gender: '',\n      })),\n    }));\n  }, [orderData.noOfPersons]);\n\n  const checkAvailability = () => {\n    if (availablePincodes.includes(orderData.pincode)) {\n      setPincodeMessage('Service is available in your pincode!');\n    } else {\n      setPincodeMessage('Sorry, service is not available in your pincode.');\n    }\n  };\n\n  const handleBeneficiariesChange = (index, field, value) => {\n    const newBeneficiaries = [...orderData.beneficiaries];\n    newBeneficiaries[index] = { ...newBeneficiaries[index], [field]: value };\n    setOrderData({ ...orderData, beneficiaries: newBeneficiaries });\n  };\n\n  const handleSubmitOrder = async () => {\n    if (!availablePincodes.includes(orderData.pincode)) {\n      alert('Service is not available in your pincode.');\n      return;\n    }\n\n    const orderDetails = {\n      pincode: orderData.pincode,\n      name: orderData.name,\n      email: orderData.email,\n      address: orderData.address,\n      phoneno: orderData.phoneno,\n      age: orderData.age,\n      noOfPersons: orderData.noOfPersons,\n      appointmentDate: orderData.appointmentDate,\n      beneficiaries: orderData.beneficiaries,\n      cartItems: CartItem,\n    };\n\n    console.log(\"Order Details: \", orderDetails); // Log the order details\n\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/orders`,\n        orderDetails\n      );\n      if (response.data.success) {\n        setCartItem([]);\n        alert('Order submitted successfully!');\n      } else {\n        alert('Error submitting order. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting order:', error);\n      alert('Error submitting order. Please try again.');\n    }\n  };\n\n  const generateDateOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(currentDate.getDate() + i);\n      const dateString = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n      });\n      options.push(\n        <option key={i} value={dateString}>\n          {dateString}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <Container className=\"embedded-checkout-form\">\n      <Row>\n        <Col md={12}>\n        <h3 className=\"form-heading\">Booking Form</h3>\n          <Form>\n            <Form.Group controlId=\"formPincode\">\n              <InputGroup>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Pincode\"\n                  value={orderData.pincode}\n                  onChange={(e) =>\n                    setOrderData({ ...orderData, pincode: e.target.value })\n                  }\n                  name=\"pincode\"\n                  className=\"form-control\"\n                />\n                <Button variant=\"outline-secondary\" onClick={checkAvailability}>\n                  Check Availability\n                </Button>\n              </InputGroup>\n              <Form.Text className=\"text-muted\">{pincodeMessage}</Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Name :</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                value={orderData.name}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, name: e.target.value })\n                }\n                name=\"name\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={orderData.email}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, email: e.target.value })\n                }\n                name=\"email\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAddress\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your address\"\n                value={orderData.address}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, address: e.target.value })\n                }\n                name=\"address\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formPhoneNo\">\n              <Form.Label>Phone No</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your phone no\"\n                value={orderData.phoneno}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, phoneno: e.target.value })\n                }\n                name=\"phoneno\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAge\">\n              <Form.Label>Age</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your age\"\n                value={orderData.age}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, age: e.target.value })\n                }\n                name=\"age\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formNoOfPersons\">\n              <Form.Label>Number of Persons</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.noOfPersons}\n                onChange={(e) => {\n                  const newNoOfPersons = parseInt(e.target.value, 10);\n                  setOrderData({\n                    ...orderData,\n                    noOfPersons: newNoOfPersons,\n                    beneficiaries: Array.from(\n                      { length: newNoOfPersons },\n                      (_, i) => orderData.beneficiaries[i] || { name: '', age: '', gender: '' }\n                    ),\n                  });\n                }}\n                name=\"noOfPersons\"\n                className=\"form-control\"\n              >\n                {[...Array(10).keys()].map((num) => (\n                  <option key={num + 1} value={num + 1}>\n                    {num + 1}\n                  </option>\n                ))}\n              </Form.Control>\n              <Form.Text className=\"text-warning\">\n                 Note : The same set of tests/packages will be added for all persons.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formAppointmentDate\">\n              <Form.Label>Appointment Date</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.appointmentDate}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, appointmentDate: e.target.value })\n                }\n                name=\"appointmentDate\"\n                className=\"form-control\"\n              >\n                {generateDateOptions()}\n              </Form.Control>\n            </Form.Group>\n            <h5>Beneficiaries</h5>\n            {orderData.beneficiaries.map((beneficiary, index) => (\n              <div key={index}>\n                <Form.Group controlId={`formBeneficiaryName${index}`}>\n                  <Form.Label>Beneficiary Name {index + 1}</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter name\"\n                    value={beneficiary.name}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, 'name', e.target.value)\n                    }\n                    name={`beneficiaryName${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryAge${index}`}>\n                  <Form.Label>Age</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter age\"\n                    value={beneficiary.age}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, 'age', e.target.value)\n                    }\n                    name={`beneficiaryAge${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryGender${index}`}>\n                  <Form.Label>Gender</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={beneficiary.gender}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, 'gender', e.target.value)\n                    }\n                    name={`beneficiaryGender${index}`}\n                    className=\"form-control\"\n                  >\n                    <option value=\"\">Select Gender</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Other\">Other</option>\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            ))}\n            <Button variant=\"primary\" onClick={handleSubmitOrder} className=\"confirm-button\">\n              Book Now\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default EmbeddedCheckoutForm;\n","import { Fragment, useContext, useEffect, useState } from \"react\";\nimport Banner from \"../components/Banner/Banner\";\nimport { DataContainer } from \"../App\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport ShopList from \"../components/ShopList\";\nimport { products } from \"../utils/products\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport EmbeddedCheckoutForm from \"../components/EmbeddedCheckoutForm.js\";\nimport \"../Styles/productDetails.css\";\n\nconst ProductDetails = () => {\n  const [listSelected, setListSelected] = useState(\"desc\");\n  const [relatedProducts, setRelatedProducts] = useState([]);\n  const [includedTests, setIncludedTests] = useState([]);\n  const [expandedCategory, setExpandedCategory] = useState(null);\n  const { selectedProduct, setSelectedProduct, addToCart } =\n    useContext(DataContainer);\n  const { id } = useParams();\n  const [quantity, setQuantity] = useState(1);\n\n  useEffect(() => {\n    if (!selectedProduct) {\n      const storedProduct = localStorage.getItem(`selectedProduct-${id}`);\n      setSelectedProduct(JSON.parse(storedProduct));\n    }\n  }, [id, selectedProduct, setSelectedProduct]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (selectedProduct?.includedTests) {\n      const allTests = selectedProduct.includedTests.flatMap(\n        (category) => category.tests\n      );\n      setIncludedTests(\n        products.filter((product) => allTests.includes(product.id))\n      );\n    }\n    setRelatedProducts(\n      products.filter(\n        (item) =>\n          item.category === selectedProduct?.category &&\n          item.id !== selectedProduct?.id\n      )\n    );\n  }, [selectedProduct]);\n\n  useEffect(() => {\n    return () => {\n      setSelectedProduct(null);\n    };\n  }, [setSelectedProduct]);\n\n  const handleQuantityChange = (event) => {\n    setQuantity(parseInt(event.target.value));\n  };\n\n  const handleAdd = (selectedProduct, quantity) => {\n    addToCart(selectedProduct, quantity);\n    toast.success(\"Product has been added to cart!\");\n  };\n\n  return (\n    <Fragment>\n      <Banner title={selectedProduct?.productName} />\n      <Container className=\"product-page\">\n        <Row>\n          <Col md={8}>\n            <div className=\"product-box\">\n              <section>\n                <Row className=\"justify-content-center\">\n                  <Col md={6}>\n                    <img loading=\"lazy\" src={selectedProduct?.imgUrl} alt=\"\" />\n                  </Col>\n                  <h1>{selectedProduct?.products}</h1>\n                  <Col md={6}>\n                    <h2>{selectedProduct?.productName}</h2>\n                    <div className=\"info\">\n                      <span className=\"price\">&#8377;{selectedProduct?.price}</span>\n                      <span>category: {selectedProduct?.category}</span>\n                    </div>\n                    <p>{selectedProduct?.shortDesc}</p>\n                    <input\n                      className=\"qty-input\"\n                      type=\"number\"\n                      placeholder=\"Qty\"\n                      value={quantity}\n                      onChange={handleQuantityChange}\n                    />\n                    <button\n                      aria-label=\"Add\"\n                      type=\"submit\"\n                      className=\"add\"\n                      onClick={() => handleAdd(selectedProduct, quantity)}\n                    >\n                      Add To Cart\n                    </button>\n                  </Col>\n                </Row>\n              </section>\n              \n              {/* Included Tests section */}\n              {selectedProduct?.includedTests &&\n                selectedProduct.includedTests.length > 0 && (\n                  <section className=\"included-tests\">\n                    <h3>Included Tests</h3>\n                    {selectedProduct.includedTests.map((category) => (\n                      <div key={category.categoryName}>\n                        <h4\n                          onClick={() =>\n                            setExpandedCategory(\n                              expandedCategory === category.categoryName\n                                ? null\n                                : category.categoryName\n                            )\n                          }\n                          style={{\n                            cursor: \"pointer\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          {expandedCategory === category.categoryName ? (\n                            <i\n                              className=\"fa fa-chevron-down\"\n                              style={{ marginRight: \"10px\" }}\n                            ></i>\n                          ) : (\n                            <i\n                              className=\"fa fa-chevron-right\"\n                              style={{ marginRight: \"10px\" }}\n                            ></i>\n                          )}\n                          {category.categoryName}\n                        </h4>\n\n                        {expandedCategory === category.categoryName && (\n                          <Row>\n                            {category.tests.map((testId) => {\n                              const test = products.find((p) => p.id === testId);\n                              return (\n                                <Col md={4} key={testId}>\n                                  <div className=\"test-item\">\n                                    <h5>{test.productName}</h5>\n                                    <p>{test.shortDesc}</p>\n                                  </div>\n                                </Col>\n                              );\n                            })}\n                          </Row>\n                        )}\n                      </div>\n                    ))}\n                  </section>\n                )}\n\n              <section className=\"product-reviews\">\n                <ul>\n                  <li\n                    style={{\n                      color: listSelected === \"desc\" ? \"black\" : \"#9c9b9b\",\n                    }}\n                    onClick={() => setListSelected(\"desc\")}\n                  >\n                    Description\n                  </li>\n                </ul>\n                {listSelected === \"desc\" ? (\n                  <p>{selectedProduct?.description}</p>\n                ) : (\n                  <div className=\"rates\">\n                    {selectedProduct?.reviews.map((rate) => (\n                      <div className=\"rate-comment\" key={rate.rating}>\n                        <span>Jhon Doe</span>\n                        <span>{rate.rating} (rating)</span>\n                        <p>{rate.text}</p>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </section>\n\n              {/* <section className=\"related-products\">\n                <h3>You might also like</h3>\n                <ShopList productItems={relatedProducts} addToCart={addToCart} />\n              </section> */}\n            </div>\n          </Col>\n          <Col md={4}>\n            <div className=\"checkout-box form-container\">\n              <EmbeddedCheckoutForm\n                CartItem={selectedProduct ? [selectedProduct] : []}\n                setCartItem={setSelectedProduct}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default ProductDetails;\n"],"names":["_ref","CartItem","setCartItem","_useState","useState","pincode","name","email","address","phoneno","age","noOfPersons","appointmentDate","beneficiaries","_useState2","_slicedToArray","orderData","setOrderData","_useState3","_useState4","pincodeMessage","setPincodeMessage","useEffect","prevState","_objectSpread","Array","from","length","gender","handleBeneficiariesChange","index","field","value","newBeneficiaries","_toConsumableArray","_defineProperty","handleSubmitOrder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderDetails","wrap","_context","prev","next","availablePincodes","alert","abrupt","cartItems","console","log","axios","concat","process","sent","data","success","t0","error","stop","apply","arguments","_jsx","Container","className","children","Row","_jsxs","Col","md","Form","controlId","InputGroup","type","placeholder","onChange","e","target","Button","variant","onClick","as","newNoOfPersons","parseInt","_","i","keys","map","num","options","currentDate","Date","date","setDate","getDate","dateString","toLocaleDateString","year","month","day","push","generateDateOptions","beneficiary","listSelected","setListSelected","setRelatedProducts","_useState5","_useState6","setIncludedTests","_useState7","_useState8","expandedCategory","setExpandedCategory","_useContext","useContext","DataContainer","selectedProduct","setSelectedProduct","addToCart","id","useParams","_useState9","_useState10","quantity","setQuantity","storedProduct","localStorage","getItem","JSON","parse","window","scrollTo","includedTests","allTests","flatMap","category","tests","products","product","includes","item","Fragment","Banner","title","productName","loading","src","imgUrl","alt","price","shortDesc","event","toast","handleAdd","categoryName","style","cursor","display","alignItems","marginRight","testId","test","p","color","description","reviews","rate","rating","text","EmbeddedCheckoutForm"],"sourceRoot":""}