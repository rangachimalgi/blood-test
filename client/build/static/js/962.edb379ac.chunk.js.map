{"version":3,"file":"static/js/962.edb379ac.chunk.js","mappings":"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","sources":["pages/Cart.jsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DataContainer } from \"../App\";\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\nimport CheckoutForm from \"../components/CheckoutForm.js\";\nimport \"./Cart.css\"; // We'll create this file next\n\nconst Cart = () => {\n  const { CartItem, setCartItem, addToCart, deleteProduct } =\n    useContext(DataContainer);\n  const [additionalTestCost, setAdditionalTestCost] = useState(0);\n\n  const baseCartTotal = CartItem.reduce(\n    (price, item) => price + item.qty * item.price,\n    0\n  );\n  const totalPrice = baseCartTotal + additionalTestCost;\n\n  const navigate = useNavigate();\n\n  const decreaseQty = (product) => {\n    const updatedCart = CartItem.map((item) =>\n      item.id === product.id ? { ...item, qty: item.qty - 1 } : item\n    ).filter((item) => item.qty > 0);\n\n    setCartItem(updatedCart);\n    setTimeout(() => {\n      localStorage.setItem(\"cartItem\", JSON.stringify(updatedCart));\n    }, 0);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const storedCart = localStorage.getItem(\"cartItem\");\n    setCartItem(JSON.parse(storedCart) || []);\n  }, []);\n\n  const handleAddMoreTests = () => {\n    navigate(\"/shop\");\n  };\n\n  return (\n    <section className=\"cart-page\">\n      <Container fluid className=\"px-4 py-2\">\n        <Row className=\"justify-content-center g-4\">\n          {/* Checkout Form */}\n          <Col lg={8} className=\"checkout-form-column\">\n            <CheckoutForm\n              show={true}\n              handleClose={() => {}}\n              CartItem={CartItem}\n              setCartItem={setCartItem}\n              setAdditionalTestCost={setAdditionalTestCost}\n            />\n          </Col>\n\n          {/* Cart Summary */}\n          <Col lg={4} className=\"cart-summary-column\">\n            <div className=\"cart-summary-container\">\n              <h4 className=\"cart-summary-title\">Order Summary</h4>\n              \n              {CartItem.length === 0 ? (\n                <div className=\"empty-cart-message\">\n                  <h5>Your cart is empty</h5>\n                  <p>Add some tests to get started</p>\n                  <Button\n                    onClick={handleAddMoreTests}\n                    className=\"add-tests-button\"\n                  >\n                    Browse Tests\n                  </Button>\n                </div>\n              ) : (\n                <>\n                  <div className=\"cart-items-list\">\n                    {CartItem.map((item) => {\n                      const productQty = item.price * item.qty;\n                      return (\n                        <div className=\"cart-item-card\" key={item.id}>\n                          <div className=\"cart-item-image\">\n                            <img src={item.imgUrl} alt={item.productName} />\n                          </div>\n                          <div className=\"cart-item-details\">\n                            <h6 className=\"cart-item-name\">{item.productName}</h6>\n                            <p className=\"cart-item-price\">\n                              â‚¹{item.price} x {item.qty} = â‚¹{productQty}\n                            </p>\n                            <div className=\"cart-item-actions\">\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline-success\"\n                                className=\"action-button\"\n                                onClick={() => addToCart(item)}\n                              >\n                                +\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline-warning\"\n                                className=\"action-button\"\n                                onClick={() => decreaseQty(item)}\n                              >\n                                â€“\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline-danger\"\n                                className=\"action-button\"\n                                onClick={() => deleteProduct(item)}\n                              >\n                                ðŸ—‘\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n\n                  <div className=\"cart-summary-footer\">\n                    <div className=\"total-price\">\n                      <span>Total Amount:</span>\n                      <span className=\"price\">â‚¹{totalPrice}</span>\n                    </div>\n                    <Button\n                      onClick={handleAddMoreTests}\n                      className=\"add-more-button\"\n                    >\n                      Add More Tests\n                    </Button>\n                  </div>\n                </>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n};\n\nexport default Cart;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["_useContext","useContext","DataContainer","CartItem","setCartItem","addToCart","deleteProduct","_useState","useState","_useState2","_slicedToArray","additionalTestCost","setAdditionalTestCost","totalPrice","reduce","price","item","qty","navigate","useNavigate","useEffect","window","scrollTo","storedCart","localStorage","getItem","JSON","parse","handleAddMoreTests","_jsx","className","children","Container","fluid","_jsxs","Row","Col","lg","CheckoutForm","show","handleClose","length","Button","onClick","_Fragment","map","productQty","src","imgUrl","alt","productName","size","variant","product","updatedCart","id","_objectSpread","filter","setTimeout","setItem","stringify","decreaseQty","React","_ref","ref","bsPrefix","_ref$as","as","Component","props","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","concat","classes","forEach","brkPoint","cols","propValue","infix","push","classNames","displayName"],"sourceRoot":""}