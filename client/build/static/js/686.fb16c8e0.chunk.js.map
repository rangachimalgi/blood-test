{"version":3,"file":"static/js/686.fb16c8e0.chunk.js","mappings":"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","sources":["components/EmbeddedCheckoutForm.js","pages/HealthPackagesDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, InputGroup, Form, Container, Row, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { availablePincodes } from \"../components/availablePincodes.js\";\nimport \"../Styles/embeddedCheckoutForm.css\";\n\nconst EmbeddedCheckoutForm = ({ CartItem, setCartItem }) => {\n  const [orderData, setOrderData] = useState({\n    pincode: \"\",\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    phoneno: \"\",\n    age: \"\",\n    noOfPersons: 1,\n    appointmentDate: \"\",\n    beneficiaries: [\n      { name: \"\", age: \"\", gender: \"\" }, // Keeping the beneficiary details\n    ],\n    tests: [], // Separate tests array for the order\n  });\n  const [pincodeMessage, setPincodeMessage] = useState(\"\");\n\n  useEffect(() => {\n    setOrderData((prevState) => ({\n      ...prevState,\n      beneficiaries: Array.from({ length: prevState.noOfPersons }, () => ({\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n      })),\n    }));\n  }, [orderData.noOfPersons]);\n\n  useEffect(() => {\n    if (!orderData.appointmentDate) {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n\n      const defaultDate = tomorrow.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n\n      setOrderData((prev) => ({\n        ...prev,\n        appointmentDate: defaultDate,\n      }));\n    }\n  }, []);\n\n  const checkAvailability = () => {\n    if (availablePincodes.includes(orderData.pincode)) {\n      setPincodeMessage(\"Service is available in your pincode!\");\n    } else {\n      setPincodeMessage(\"Sorry, service is not available in your pincode.\");\n    }\n  };\n\n  const handleBeneficiariesChange = (index, field, value) => {\n    const newBeneficiaries = [...orderData.beneficiaries];\n    newBeneficiaries[index] = { ...newBeneficiaries[index], [field]: value };\n    setOrderData({ ...orderData, beneficiaries: newBeneficiaries });\n  };\n\n  const handleTestChange = (test, isChecked) => {\n    let updatedTests = [...orderData.tests];\n    if (isChecked) {\n      if (!updatedTests.includes(test)) {\n        updatedTests.push(test);\n      }\n    } else {\n      updatedTests = updatedTests.filter((t) => t !== test);\n    }\n    setOrderData({ ...orderData, tests: updatedTests });\n  };\n\n  const handleSubmitOrder = async () => {\n    console.log(\"Order Data before submission:\", orderData);\n\n    const orderDetails = {\n      pincode: orderData.pincode,\n      name: orderData.name,\n      email: orderData.email,\n      address: orderData.address,\n      phoneno: orderData.phoneno,\n      age: orderData.age,\n      noOfPersons: orderData.noOfPersons,\n      appointmentDate: orderData.appointmentDate,\n      beneficiaries: orderData.beneficiaries.map((beneficiary) => ({\n        name: beneficiary.name,\n        age: beneficiary.age,\n        gender: beneficiary.gender,\n      })),\n      tests: orderData.tests, // Include tests here\n      cartItems: CartItem,\n    };\n\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/orders`,\n        orderDetails\n      );\n      if (response.data.success) {\n        setCartItem([]);\n        alert(\"Order submitted successfully!\");\n      } else {\n        alert(\"Error submitting order. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting order:\", error);\n      alert(\"Error submitting order. Please try again.\");\n    }\n  };\n\n  const generateDateOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 1; i <= 7; i++) {\n      const date = new Date();\n      date.setDate(currentDate.getDate() + i); // Start from tomorrow\n      const dateString = date.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n      options.push(\n        <option key={i} value={dateString}>\n          {dateString}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <Container className=\"embedded-checkout-form\">\n      <Row>\n        <Col md={12}>\n          <h3 className=\"form-heading\">Book Now</h3>\n          <p style={{ fontSize: '14px', color: '#666', marginBottom: '20px' }}>\n            You will get a payment link shortly. You can make the payment ONLINE or pay using UPI/Cash to the technician.\n          </p>\n          \n          <div style={{ \n            border: '2px dashed #28a745', \n            padding: '15px', \n            marginBottom: '20px',\n            backgroundColor: '#f8fff8'\n          }}>\n            <p style={{ margin: 0, fontSize: '14px' }}>\n              Want to add more tests? <span style={{ color: '#007bff', cursor: 'pointer' }}>Click add to cart</span>, else fill up below form.\n            </p>\n          </div>\n          \n          <Form>\n            <Form.Group controlId=\"formPincode\">\n              <div style={{ display: 'flex', alignItems: 'flex-start', gap: '10px' }}>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Pincode\"\n                  value={orderData.pincode}\n                  onChange={(e) =>\n                    setOrderData({ ...orderData, pincode: e.target.value })\n                  }\n                  name=\"pincode\"\n                  className=\"form-control\"\n                  style={{ width: '50%' }}\n                />\n                <Button variant=\"outline-secondary\" onClick={checkAvailability}>\n                  Check Availability\n                </Button>\n              </div>\n              <Form.Text className=\"text-muted\">{pincodeMessage}</Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Name :</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                value={orderData.name}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, name: e.target.value })\n                }\n                name=\"name\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={orderData.email}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, email: e.target.value })\n                }\n                name=\"email\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAddress\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your address\"\n                value={orderData.address}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, address: e.target.value })\n                }\n                name=\"address\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formPhoneNo\">\n              <Form.Label>Phone No</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your phone no\"\n                value={orderData.phoneno}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, phoneno: e.target.value })\n                }\n                name=\"phoneno\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAge\">\n              <Form.Label>Age</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your age\"\n                value={orderData.age}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, age: e.target.value })\n                }\n                name=\"age\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formNoOfPersons\">\n              <Form.Label>Number of Persons</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.noOfPersons}\n                onChange={(e) => {\n                  const newNoOfPersons = parseInt(e.target.value, 10);\n                  setOrderData({\n                    ...orderData,\n                    noOfPersons: newNoOfPersons,\n                    beneficiaries: Array.from(\n                      { length: newNoOfPersons },\n                      (_, i) =>\n                        orderData.beneficiaries[i] || {\n                          name: \"\",\n                          age: \"\",\n                          gender: \"\",\n                        }\n                    ),\n                  });\n                }}\n                name=\"noOfPersons\"\n                className=\"form-control large-select\" // Add custom class here\n              >\n                {[...Array(10).keys()].map((num) => (\n                  <option key={num + 1} value={num + 1}>\n                    {num + 1}\n                  </option>\n                ))}\n              </Form.Control>\n              <Form.Text className=\"text-warning\">\n                Note : The same set of tests/packages will be added for all\n                persons.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formAppointmentDate\">\n              <Form.Label>Appointment Date</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.appointmentDate}\n                onChange={(e) =>\n                  setOrderData({\n                    ...orderData,\n                    appointmentDate: e.target.value,\n                  })\n                }\n                name=\"appointmentDate\"\n                className=\"form-control large-select\" // Add custom class here\n              >\n                {generateDateOptions()}\n              </Form.Control>\n            </Form.Group>\n\n            <h5>Beneficiaries</h5>\n            {orderData.beneficiaries.map((beneficiary, index) => (\n              <div key={index}>\n                <Form.Group controlId={`formBeneficiaryName${index}`}>\n                  <Form.Label>Beneficiary Name {index + 1}</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter name\"\n                    value={beneficiary.name}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, \"name\", e.target.value)\n                    }\n                    name={`beneficiaryName${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryAge${index}`}>\n                  <Form.Label>Age</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter age\"\n                    value={beneficiary.age}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, \"age\", e.target.value)\n                    }\n                    name={`beneficiaryAge${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryGender${index}`}>\n                  <Form.Label>Gender</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={beneficiary.gender}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, \"gender\", e.target.value)\n                    }\n                    name={`beneficiaryGender${index}`}\n                    className=\"form-control large-select\" // Add custom class here\n                  >\n                    <option value=\"\">Select Gender</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Other\">Other</option>\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            ))}\n\n            <h5>Select Additional Tests (Optional)</h5>\n            <Form.Group controlId=\"formAdditionalTests\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Fasting Blood Sugar (FBS) @ Rs. 80 / Person\"\n                checked={orderData.tests.includes(\"Fasting Blood Sugar (FBS)\")}\n                onChange={(e) =>\n                  handleTestChange(\n                    \"Fasting Blood Sugar (FBS)\",\n                    e.target.checked\n                  )\n                }\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"CRP Test @ Rs. 480 / Person\"\n                checked={orderData.tests.includes(\"CRP Test\")}\n                onChange={(e) => handleTestChange(\"CRP Test\", e.target.checked)}\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"ESR Test @ Rs. 120 / Person\"\n                checked={orderData.tests.includes(\"ESR Test\")}\n                onChange={(e) => handleTestChange(\"ESR Test\", e.target.checked)}\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Covid Antibody IgG @ Rs. 400 / Person\"\n                checked={orderData.tests.includes(\"Covid Antibody IgG\")}\n                onChange={(e) =>\n                  handleTestChange(\"Covid Antibody IgG\", e.target.checked)\n                }\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Complete Urine Analysis @ Rs. 510 / Person\"\n                checked={orderData.tests.includes(\"Complete Urine Analysis\")}\n                onChange={(e) =>\n                  handleTestChange(\"Complete Urine Analysis\", e.target.checked)\n                }\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Troponin - Heart Attack Risk Test (ACTNI) @ Rs. 650 / Person\"\n                checked={orderData.tests.includes(\n                  \"Troponin - Heart Attack Risk Test (ACTNI)\"\n                )}\n                onChange={(e) =>\n                  handleTestChange(\n                    \"Troponin - Heart Attack Risk Test (ACTNI)\",\n                    e.target.checked\n                  )\n                }\n              />\n            </Form.Group>\n\n            <Button\n              variant=\"primary\"\n              onClick={handleSubmitOrder}\n              className=\"confirm-button\"\n            >\n              Book Now\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default EmbeddedCheckoutForm;\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Banner from \"../components/Banner/Banner\";\nimport { DataContainer } from \"../App\";\nimport { Col, Container, Row, Collapse } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport EmbeddedCheckoutForm from \"../components/EmbeddedCheckoutForm.js\";\nimport \"../Styles/productDetails.css\";\nimport HeroImage from \"../Images/HeroOr.png\";\nimport CollectionImage from \"../Images/Collection.png\";\nimport DigitalReportImage from \"../Images/DigitalReport.png\";\n\nconst HealthPackageDetails = () => {\n  const [quantity, setQuantity] = useState(1);\n  const { selectedProduct, setSelectedProduct, addToCart } = useContext(DataContainer);\n  const [openCategoryId, setOpenCategoryId] = useState(null);\n  const { id } = useParams();\n  const [likeCount, setLikeCount] = useState(0);\n  const [liked, setLiked] = useState(false);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    \n    const fetchPackageById = async () => {\n      try {\n        const res = await axios.get(\n          `${process.env.REACT_APP_API_URL}/api/packages/${id}`\n        );\n        setSelectedProduct(res.data);\n      } catch (err) {\n        console.error(\"Failed to fetch package by ID:\", err);\n      }\n    };\n\n    fetchPackageById();\n  }, [id, setSelectedProduct]);\n\n  const handleQuantityChange = (event) => {\n    setQuantity(parseInt(event.target.value));\n  };\n\n  const handleAdd = (selectedProduct, quantity) => {\n    addToCart(selectedProduct, quantity);\n    // Removed toast notification\n  };\n\n  const scrollToCheckoutForm = () => {\n    document.getElementById(\"checkout-form\").scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const handleLike = () => {\n    setLikeCount(likeCount + (liked ? -1 : 1));\n    setLiked(!liked);\n  };\n\n  return (\n    <Fragment>\n      <Container className=\"product-page\" style={{ marginTop: '150px' }}>\n        <Row>\n          <Col md={8}>\n            <div className=\"product-details-modern-card\">\n              <section>\n                <div className=\"product-details-info-full\">\n                  <h2 className=\"product-details-title\">{selectedProduct?.productName}</h2>\n                  <div className=\"product-details-meta\">\n                    <span className=\"product-details-mrp\">₹{selectedProduct?.mrp}</span>\n                    <span className=\"product-details-price\">₹{selectedProduct?.price}</span>\n                  </div>\n                  <button className=\"product-details-add-btn\" onClick={() => handleAdd(selectedProduct, quantity)} aria-label=\"Add to Cart\">\n                    <ion-icon name=\"cart-outline\"></ion-icon> Add to Cart\n                  </button>\n                </div>\n              </section>\n\n              {/* Description section */}\n              <section className=\"product-details-tabs mt-4\">\n                <ul className=\"product-details-tablist\">\n                  <li className=\"active\">About this package</li>\n                </ul>\n                <p className=\"product-details-desc mt-2\">{selectedProduct?.description}</p>\n              </section>\n\n              {/* Precaution section */}\n              <section className=\"precaution-section mt-4\">\n                <div className=\"precaution-container\">\n                  <div className=\"precaution-icon\">\n                    <ion-icon name=\"warning-outline\"></ion-icon>\n                  </div>\n                  <div className=\"precaution-content\">\n                    <h4 className=\"precaution-title\">Precaution</h4>\n                    <p className=\"precaution-text\">Do not consume anything other than water for 8 - 10 hours before the test.</p>\n                  </div>\n                </div>\n              </section>\n\n              <section className=\"why-book-with-us mt-4\">\n                <h3 className=\"why-book-title\">Why book with us?</h3>\n                <div className=\"why-book-features\">\n                  <div className=\"why-book-feature\">\n                    <div className=\"why-book-icon\">\n                      <ion-icon name=\"shield-checkmark-outline\"></ion-icon>\n                    </div>\n                    <span className=\"why-book-text\">100% Safe & Hygienic</span>\n                  </div>\n                  <div className=\"why-book-feature\">\n                    <div className=\"why-book-icon\">\n                      <ion-icon name=\"home-outline\"></ion-icon>\n                    </div>\n                    <span className=\"why-book-text\">Free Home Sample Pick Up</span>\n                  </div>\n                  <div className=\"why-book-feature\">\n                    <div className=\"why-book-icon\">\n                      <ion-icon name=\"pricetag-outline\"></ion-icon>\n                    </div>\n                    <span className=\"why-book-text\">Heavy Discounts</span>\n                  </div>\n                  <div className=\"why-book-feature\">\n                    <div className=\"why-book-icon\">\n                      <ion-icon name=\"document-text-outline\"></ion-icon>\n                    </div>\n                    <span className=\"why-book-text\">View Reports Online</span>\n                  </div>\n                  <div className=\"why-book-feature\">\n                    <div className=\"why-book-icon\">\n                      <ion-icon name=\"card-outline\"></ion-icon>\n                    </div>\n                    <span className=\"why-book-text\">Easy Payment Options</span>\n                  </div>\n                </div>\n              </section>\n\n              {/* Included Tests section */}\n              {selectedProduct?.includedTests && selectedProduct.includedTests.length > 0 && (\n                <section className=\"included-tests-modern mt-4\">\n                  <h2>Included tests</h2>\n                  {selectedProduct.includedTests.map((category) => (\n                    <div key={category.categoryName} className=\"included-tests-category\">\n                      <div \n                        className=\"included-tests-category-header\"\n                        onClick={() =>\n                          setOpenCategoryId(\n                            openCategoryId !== category.categoryName\n                              ? category.categoryName\n                              : null\n                          )\n                        }\n                        tabIndex={0}\n                        role=\"button\"\n                        aria-label={`Toggle ${category.categoryName}`}\n                        onKeyDown={e => {\n                          if (e.key === 'Enter' || e.key === ' ') {\n                            setOpenCategoryId(\n                              openCategoryId !== category.categoryName\n                                ? category.categoryName\n                                : null\n                            );\n                          }\n                        }}\n                      >\n                        <h4 className=\"included-tests-category-title\">\n                          {category.categoryName.charAt(0).toUpperCase() + category.categoryName.slice(1).toLowerCase()}\n                        </h4>\n                        <ion-icon \n                          name={openCategoryId === category.categoryName ? 'chevron-up-outline' : 'chevron-down-outline'}\n                          className=\"category-toggle-icon\"\n                        ></ion-icon>\n                      </div>\n                      <Collapse in={openCategoryId === category.categoryName}>\n                        <ul className=\"included-tests-list\">\n                          {category.tests.map((testName, index) => (\n                            <li key={index}>{testName.charAt(0).toUpperCase() + testName.slice(1).toLowerCase()}</li>\n                          ))}\n                        </ul>\n                      </Collapse>\n                    </div>\n                  ))}\n                </section>\n              )}\n\n              {/* How it works section */}\n              <section className=\"how-it-works-section mt-4\">\n                <h3 className=\"how-it-works-title\">How it works?</h3>\n                <div className=\"how-it-works-cards\">\n                  <div className=\"how-it-works-card\">\n                    <div className=\"how-it-works-image\">\n                      <img \n                        src={HeroImage} \n                        alt=\"Lab technician\" \n                        className=\"how-it-works-img\"\n                      />\n                    </div>\n                    <p className=\"how-it-works-text\">\n                      Technician will be assigned for a free home sample collection after booking confirmation.\n                    </p>\n                  </div>\n                  <div className=\"how-it-works-card\">\n                    <div className=\"how-it-works-image\">\n                      <img \n                        src={CollectionImage} \n                        alt=\"Sample collection\" \n                        className=\"how-it-works-img\"\n                      />\n                    </div>\n                    <p className=\"how-it-works-text\">\n                      Sample will be collected by our technician at your address at given slot.\n                    </p>\n                  </div>\n                  <div className=\"how-it-works-card\">\n                    <div className=\"how-it-works-image\">\n                      <img \n                        src={DigitalReportImage} \n                        alt=\"Digital report\" \n                        className=\"how-it-works-img\"\n                      />\n                    </div>\n                    <p className=\"how-it-works-text\">\n                      Soft copy reports will be sent to your email address within 24 to 48 hours of samples reaching the lab.\n                    </p>\n                  </div>\n                </div>\n              </section>\n\n              {/* Why Fortune Blood Test section */}\n              <section className=\"why-fortune-section mt-4\">\n                <h3 className=\"why-fortune-title\">About Fortune Blood Test?</h3>\n                <div className=\"why-fortune-content\">\n                  <p className=\"why-fortune-text\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n                  </p>\n                  <p className=\"why-fortune-text\">\n                    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.\n                  </p>\n                  <p className=\"why-fortune-text\">\n                    Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.\n                  </p>\n                </div>\n              </section>\n\n              {/* Why Book With Us Section */}\n              \n            </div>\n          </Col>\n          <Col md={4}>\n            <div className=\"checkout-box form-container\" id=\"checkout-form\">\n              <EmbeddedCheckoutForm\n                CartItem={selectedProduct ? [selectedProduct] : []}\n                setCartItem={setSelectedProduct}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      <button\n        className=\"fixed-book-appointment-button\"\n        onClick={scrollToCheckoutForm}\n      >\n        Book Appointment\n      </button>\n    </Fragment>\n  );\n};\n\nexport default HealthPackageDetails;\n"],"names":["_ref","CartItem","setCartItem","_useState","useState","pincode","name","email","address","phoneno","age","noOfPersons","appointmentDate","beneficiaries","gender","tests","_useState2","_slicedToArray","orderData","setOrderData","_useState3","_useState4","pincodeMessage","setPincodeMessage","useEffect","prevState","_objectSpread","Array","from","length","tomorrow","Date","setDate","getDate","defaultDate","toLocaleDateString","year","month","day","prev","handleBeneficiariesChange","index","field","value","newBeneficiaries","_toConsumableArray","_defineProperty","handleTestChange","test","isChecked","updatedTests","includes","push","filter","t","handleSubmitOrder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderDetails","wrap","_context","next","console","log","map","beneficiary","cartItems","axios","concat","process","sent","data","success","alert","t0","error","stop","apply","arguments","_jsx","Container","className","children","Row","_jsxs","Col","md","style","fontSize","color","marginBottom","border","padding","backgroundColor","margin","cursor","Form","controlId","display","alignItems","gap","type","placeholder","onChange","e","target","width","Button","variant","onClick","availablePincodes","as","newNoOfPersons","parseInt","_","i","keys","num","options","currentDate","date","dateString","generateDateOptions","label","checked","quantity","_useContext","useContext","DataContainer","selectedProduct","setSelectedProduct","addToCart","openCategoryId","setOpenCategoryId","id","useParams","_useState5","_useState6","_useState7","_useState8","window","scrollTo","fetchPackageById","res","Fragment","marginTop","productName","mrp","price","handleAdd","description","includedTests","category","categoryName","tabIndex","role","onKeyDown","key","charAt","toUpperCase","slice","toLowerCase","Collapse","in","testName","src","HeroImage","alt","CollectionImage","DigitalReportImage","EmbeddedCheckoutForm","document","getElementById","scrollIntoView","behavior"],"sourceRoot":""}