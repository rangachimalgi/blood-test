{"version":3,"file":"static/js/474.4cfb8f98.chunk.js","mappings":"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","sources":["components/Banner/Banner.jsx","components/Product/Product.jsx","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","components/ShopList.jsx","components/EmbeddedCheckoutForm.js","pages/ProductDetails.jsx","../node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["import { Col, Container, Row } from \"react-bootstrap\";\nimport productBg from \"../../Images/table.jpg\";\nimport \"./banner.css\";\nconst Banner = ({title}) => {\n    return ( \n        <div className=\"image-container\">\n            <img src={productBg} alt=\"Product-bg\" />\n            <div className=\"overlay\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h2>{title}</h2>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    );\n}\n\nexport default Banner;","import { useContext, useState } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"./product.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DataContainer } from \"../../App\";\nimport CheckoutForm from \"../CheckoutForm.js\";\n\nconst Product = ({ title, productItem, addToCart, showImage = true, desc, enableHoverEffect, handleAddToCart }) => {\n  const { setSelectedProduct } = useContext(DataContainer);\n  const router = useNavigate();\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const handelClick = () => {\n    setSelectedProduct(productItem);\n    localStorage.setItem(\n      `selectedProduct-${productItem.id}`,\n      JSON.stringify(productItem)\n    );\n    router(`/shop/${productItem.id}`);\n  };\n\n  return (\n    <Col\n      lg={3}\n      md={4}\n      sm={6}\n      xs={12}\n      className={`product mtop ${enableHoverEffect ? 'hover-enabled' : ''}`}\n    >\n      {title === \"Big Discount\" && (\n        <span className=\"discount\">{productItem.discount}% Off</span>\n      )}\n      <div className=\"product-image-container\">\n        {showImage && (\n          <img\n            loading=\"lazy\"\n            onClick={handelClick}\n            src={productItem.imgUrl}\n            alt={productItem.productName}\n            className=\"product-image\"\n          />\n        )}\n        {enableHoverEffect && (\n          <div className=\"hover-overlay\">\n            <h2>{productItem.overlayTitle}</h2>\n            <ul>\n              {productItem.overlayDetails?.map((detail, index) => (\n                <li key={index}>{detail}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n      {desc && <p className=\"product-description\">{desc}</p>}\n      <div className=\"product-like\">\n        <label>{count}</label> <br />\n        <ion-icon name=\"heart-outline\" onClick={increment}></ion-icon>\n      </div>\n      <div className=\"product-details\">\n        <h3 onClick={handelClick}>{productItem.productName}</h3>\n        <div className=\"price\">\n          <h4>&#8377;{productItem.price}</h4>\n          <button\n            aria-label=\"Add\"\n            type=\"submit\"\n            className=\"add\"\n            onClick={() => handleAddToCart(productItem)}\n          >\n            <ion-icon name=\"add\"></ion-icon>\n          </button>\n        </div>\n      </div>\n    </Col>\n  );\n};\n\nexport default Product;\n","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: \"page-link\",\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","import { Row, Pagination } from \"react-bootstrap\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport Product from \"./Product/Product\";\nimport { DataContainer } from \"../App\";\n\nconst ShopList = ({ productItems }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 50; // Change as needed\n  const totalPages = Math.ceil(productItems.length / itemsPerPage);\n  const displayedProducts = productItems.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n  const { addToCart } = useContext(DataContainer);\n  const navigate = useNavigate();\n\n  useEffect(() => {}, [productItems]);\n\n  const handleAddToCart = (product) => {\n    addToCart(product);\n    const toastId = toast.success(\"Product has been added to cart!\", { autoClose: 1000 });\n\n    setTimeout(() => {\n      toast.update(toastId, {\n        render: (\n          <>\n            <div>Product has been added to cart!</div>\n            <button\n              onClick={() => {\n                navigate(\"/cart\");\n                toast.dismiss(toastId);\n              }}\n              style={{\n                color: \"#007bff\",\n                background: \"none\",\n                border: \"none\",\n                textDecoration: \"underline\",\n                cursor: \"pointer\",\n              }}\n            >\n              Go to Cart\n            </button>\n          </>\n        ),\n        autoClose: false,\n        closeButton: true,\n      });\n    }, 1000);\n  };\n\n  if (productItems.length === 0) {\n    return <h1 className=\"not-found\">Product Not Found !!</h1>;\n  } else {\n    return (\n      <div>\n        <ToastContainer />\n        <Row className=\"justify-content-center\">\n          {displayedProducts.map((productItem) => {\n            return (\n              <Product\n                key={productItem.id}\n                title={null}\n                productItem={productItem}\n                addToCart={addToCart}\n                handleAddToCart={handleAddToCart}\n                showImage={false}\n              />\n            );\n          })}\n        </Row>\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n          <Pagination>\n            <Pagination.Prev\n              onClick={() => setCurrentPage((old) => Math.max(old - 1, 1))}\n              disabled={currentPage === 1}\n            />\n            {[...Array(totalPages)].map((_, idx) => (\n              <Pagination.Item\n                key={idx}\n                active={idx + 1 === currentPage}\n                onClick={() => setCurrentPage(idx + 1)}\n              >\n                {idx + 1}\n              </Pagination.Item>\n            ))}\n            <Pagination.Next\n              onClick={() =>\n                setCurrentPage((old) => Math.min(old + 1, totalPages))\n              }\n              disabled={currentPage === totalPages}\n            />\n          </Pagination>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default ShopList;\n","import React, { useState, useEffect } from 'react';\nimport { Button, InputGroup, Form, Container, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { availablePincodes } from '../components/availablePincodes.js';\n\nconst EmbeddedCheckoutForm = ({ CartItem, setCartItem }) => {\n  const [orderData, setOrderData] = useState({\n    pincode: '',\n    name: '',\n    email: '',\n    address: '',\n    phoneno: '',\n    age: '',\n    noOfPersons: 1,\n    appointmentDate: '',\n    beneficiaries: [],\n  });\n  const [pincodeMessage, setPincodeMessage] = useState('');\n\n  useEffect(() => {\n    setOrderData((prevState) => ({\n      ...prevState,\n      beneficiaries: Array.from({ length: prevState.noOfPersons }, () => ({\n        name: '',\n        age: '',\n        gender: '',\n      })),\n    }));\n  }, [orderData.noOfPersons]);\n\n  const checkAvailability = () => {\n    if (availablePincodes.includes(orderData.pincode)) {\n      setPincodeMessage('Service is available in your pincode!');\n    } else {\n      setPincodeMessage('Sorry, service is not available in your pincode.');\n    }\n  };\n\n  const handleBeneficiariesChange = (index, field, value) => {\n    const newBeneficiaries = [...orderData.beneficiaries];\n    newBeneficiaries[index] = { ...newBeneficiaries[index], [field]: value };\n    setOrderData({ ...orderData, beneficiaries: newBeneficiaries });\n  };\n\n  const handleSubmitOrder = async () => {\n    if (!availablePincodes.includes(orderData.pincode)) {\n      alert('Service is not available in your pincode.');\n      return;\n    }\n\n    const orderDetails = {\n      pincode: orderData.pincode,\n      name: orderData.name,\n      email: orderData.email,\n      address: orderData.address,\n      phoneno: orderData.phoneno,\n      age: orderData.age,\n      noOfPersons: orderData.noOfPersons,\n      appointmentDate: orderData.appointmentDate,\n      beneficiaries: orderData.beneficiaries,\n      cartItems: CartItem,\n    };\n\n    console.log(\"Order Details: \", orderDetails); // Log the order details\n\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/orders`,\n        orderDetails\n      );\n      if (response.data.success) {\n        setCartItem([]);\n        alert('Order submitted successfully!');\n      } else {\n        alert('Error submitting order. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting order:', error);\n      alert('Error submitting order. Please try again.');\n    }\n  };\n\n  const generateDateOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(currentDate.getDate() + i);\n      const dateString = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n      });\n      options.push(\n        <option key={i} value={dateString}>\n          {dateString}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <Container className=\"embedded-checkout-form\">\n      <Row>\n        <Col md={12}>\n        <h3 className=\"form-heading\">Booking Form</h3>\n          <Form>\n            <Form.Group controlId=\"formPincode\">\n              <InputGroup>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Pincode\"\n                  value={orderData.pincode}\n                  onChange={(e) =>\n                    setOrderData({ ...orderData, pincode: e.target.value })\n                  }\n                  name=\"pincode\"\n                  className=\"form-control\"\n                />\n                <Button variant=\"outline-secondary\" onClick={checkAvailability}>\n                  Check Availability\n                </Button>\n              </InputGroup>\n              <Form.Text className=\"text-muted\">{pincodeMessage}</Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Name :</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                value={orderData.name}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, name: e.target.value })\n                }\n                name=\"name\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={orderData.email}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, email: e.target.value })\n                }\n                name=\"email\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAddress\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your address\"\n                value={orderData.address}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, address: e.target.value })\n                }\n                name=\"address\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formPhoneNo\">\n              <Form.Label>Phone No</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your phone no\"\n                value={orderData.phoneno}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, phoneno: e.target.value })\n                }\n                name=\"phoneno\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAge\">\n              <Form.Label>Age</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your age\"\n                value={orderData.age}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, age: e.target.value })\n                }\n                name=\"age\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formNoOfPersons\">\n              <Form.Label>Number of Persons</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.noOfPersons}\n                onChange={(e) => {\n                  const newNoOfPersons = parseInt(e.target.value, 10);\n                  setOrderData({\n                    ...orderData,\n                    noOfPersons: newNoOfPersons,\n                    beneficiaries: Array.from(\n                      { length: newNoOfPersons },\n                      (_, i) => orderData.beneficiaries[i] || { name: '', age: '', gender: '' }\n                    ),\n                  });\n                }}\n                name=\"noOfPersons\"\n                className=\"form-control\"\n              >\n                {[...Array(10).keys()].map((num) => (\n                  <option key={num + 1} value={num + 1}>\n                    {num + 1}\n                  </option>\n                ))}\n              </Form.Control>\n              <Form.Text className=\"text-warning\">\n                 Note : The same set of tests/packages will be added for all persons.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formAppointmentDate\">\n              <Form.Label>Appointment Date</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.appointmentDate}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, appointmentDate: e.target.value })\n                }\n                name=\"appointmentDate\"\n                className=\"form-control\"\n              >\n                {generateDateOptions()}\n              </Form.Control>\n            </Form.Group>\n            <h5>Beneficiaries</h5>\n            {orderData.beneficiaries.map((beneficiary, index) => (\n              <div key={index}>\n                <Form.Group controlId={`formBeneficiaryName${index}`}>\n                  <Form.Label>Beneficiary Name {index + 1}</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter name\"\n                    value={beneficiary.name}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, 'name', e.target.value)\n                    }\n                    name={`beneficiaryName${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryAge${index}`}>\n                  <Form.Label>Age</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter age\"\n                    value={beneficiary.age}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, 'age', e.target.value)\n                    }\n                    name={`beneficiaryAge${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryGender${index}`}>\n                  <Form.Label>Gender</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={beneficiary.gender}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, 'gender', e.target.value)\n                    }\n                    name={`beneficiaryGender${index}`}\n                    className=\"form-control\"\n                  >\n                    <option value=\"\">Select Gender</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Other\">Other</option>\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            ))}\n            <Button variant=\"primary\" onClick={handleSubmitOrder} className=\"confirm-button\">\n              Book Now\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default EmbeddedCheckoutForm;\n","import { Fragment, useContext, useEffect, useState } from \"react\";\nimport Banner from \"../components/Banner/Banner\";\nimport { DataContainer } from \"../App\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport ShopList from \"../components/ShopList\";\nimport { products } from \"../utils/products\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport EmbeddedCheckoutForm from \"../components/EmbeddedCheckoutForm.js\";\nimport \"../Styles/productDetails.css\";\n\nconst ProductDetails = () => {\n  const [listSelected, setListSelected] = useState(\"desc\");\n  const [relatedProducts, setRelatedProducts] = useState([]);\n  const [includedTests, setIncludedTests] = useState([]);\n  const [expandedCategory, setExpandedCategory] = useState(null);\n  const { selectedProduct, setSelectedProduct, addToCart } =\n    useContext(DataContainer);\n  const { id } = useParams();\n  const [quantity, setQuantity] = useState(1);\n\n  useEffect(() => {\n    if (!selectedProduct) {\n      const storedProduct = localStorage.getItem(`selectedProduct-${id}`);\n      setSelectedProduct(JSON.parse(storedProduct));\n    }\n  }, [id, selectedProduct, setSelectedProduct]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (selectedProduct?.includedTests) {\n      const allTests = selectedProduct.includedTests.flatMap(\n        (category) => category.tests\n      );\n      setIncludedTests(\n        products.filter((product) => allTests.includes(product.id))\n      );\n    }\n    setRelatedProducts(\n      products.filter(\n        (item) =>\n          item.category === selectedProduct?.category &&\n          item.id !== selectedProduct?.id\n      )\n    );\n  }, [selectedProduct]);\n\n  useEffect(() => {\n    return () => {\n      setSelectedProduct(null);\n    };\n  }, [setSelectedProduct]);\n\n  const handleQuantityChange = (event) => {\n    setQuantity(parseInt(event.target.value));\n  };\n\n  const handleAdd = (selectedProduct, quantity) => {\n    addToCart(selectedProduct, quantity);\n    toast.success(\"Product has been added to cart!\");\n  };\n\n  return (\n    <Fragment>\n      <Banner title={selectedProduct?.productName} />\n      <Container className=\"product-page\">\n        <Row>\n          <Col md={8}>\n            <div className=\"product-box\">\n              <section>\n                <Row className=\"justify-content-center\">\n                  <Col md={6}>\n                    <img loading=\"lazy\" src={selectedProduct?.imgUrl} alt=\"\" />\n                  </Col>\n                  <h1>{selectedProduct?.products}</h1>\n                  <Col md={6}>\n                    <h2>{selectedProduct?.productName}</h2>\n                    <div className=\"info\">\n                      <span className=\"price\">&#8377;{selectedProduct?.price}</span>\n                      <span>category: {selectedProduct?.category}</span>\n                    </div>\n                    <p>{selectedProduct?.shortDesc}</p>\n                    <input\n                      className=\"qty-input\"\n                      type=\"number\"\n                      placeholder=\"Qty\"\n                      value={quantity}\n                      onChange={handleQuantityChange}\n                    />\n                    <button\n                      aria-label=\"Add\"\n                      type=\"submit\"\n                      className=\"add\"\n                      onClick={() => handleAdd(selectedProduct, quantity)}\n                    >\n                      Add To Cart\n                    </button>\n                  </Col>\n                </Row>\n              </section>\n              \n              {/* Included Tests section */}\n              {selectedProduct?.includedTests &&\n                selectedProduct.includedTests.length > 0 && (\n                  <section className=\"included-tests\">\n                    <h3>Included Tests</h3>\n                    {selectedProduct.includedTests.map((category) => (\n                      <div key={category.categoryName}>\n                        <h4\n                          onClick={() =>\n                            setExpandedCategory(\n                              expandedCategory === category.categoryName\n                                ? null\n                                : category.categoryName\n                            )\n                          }\n                          style={{\n                            cursor: \"pointer\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          {expandedCategory === category.categoryName ? (\n                            <i\n                              className=\"fa fa-chevron-down\"\n                              style={{ marginRight: \"10px\" }}\n                            ></i>\n                          ) : (\n                            <i\n                              className=\"fa fa-chevron-right\"\n                              style={{ marginRight: \"10px\" }}\n                            ></i>\n                          )}\n                          {category.categoryName}\n                        </h4>\n\n                        {expandedCategory === category.categoryName && (\n                          <Row>\n                            {category.tests.map((testId) => {\n                              const test = products.find((p) => p.id === testId);\n                              return (\n                                <Col md={4} key={testId}>\n                                  <div className=\"test-item\">\n                                    <h5>{test.productName}</h5>\n                                    <p>{test.shortDesc}</p>\n                                  </div>\n                                </Col>\n                              );\n                            })}\n                          </Row>\n                        )}\n                      </div>\n                    ))}\n                  </section>\n                )}\n\n              <section className=\"product-reviews\">\n                <ul>\n                  <li\n                    style={{\n                      color: listSelected === \"desc\" ? \"black\" : \"#9c9b9b\",\n                    }}\n                    onClick={() => setListSelected(\"desc\")}\n                  >\n                    Description\n                  </li>\n                </ul>\n                {listSelected === \"desc\" ? (\n                  <p>{selectedProduct?.description}</p>\n                ) : (\n                  <div className=\"rates\">\n                    {selectedProduct?.reviews.map((rate) => (\n                      <div className=\"rate-comment\" key={rate.rating}>\n                        <span>Jhon Doe</span>\n                        <span>{rate.rating} (rating)</span>\n                        <p>{rate.text}</p>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </section>\n\n              {/* <section className=\"related-products\">\n                <h3>You might also like</h3>\n                <ShopList productItems={relatedProducts} addToCart={addToCart} />\n              </section> */}\n            </div>\n          </Col>\n          <Col md={4}>\n            <div className=\"checkout-box form-container\">\n              <EmbeddedCheckoutForm\n                CartItem={selectedProduct ? [selectedProduct] : []}\n                setCartItem={setSelectedProduct}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default ProductDetails;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"names":["_ref","title","_jsxs","className","children","_jsx","src","productBg","alt","Container","Row","Col","_productItem$overlayD","productItem","_ref$showImage","addToCart","showImage","desc","enableHoverEffect","handleAddToCart","setSelectedProduct","useContext","DataContainer","router","useNavigate","_useState","useState","_useState2","_slicedToArray","count","setCount","handelClick","localStorage","setItem","concat","id","JSON","stringify","lg","md","sm","xs","discount","loading","onClick","imgUrl","productName","overlayTitle","overlayDetails","map","detail","index","name","price","type","PageItem","React","ref","_ref$active","active","_ref$disabled","disabled","style","_ref$activeLabel","activeLabel","props","_objectWithoutProperties","_excluded","Component","Anchor","classNames","_objectSpread","displayName","createButton","defaultValue","label","arguments","length","undefined","Button","_ref2","_excluded2","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","Object","assign","Item","productItems","currentPage","setCurrentPage","totalPages","Math","ceil","displayedProducts","slice","navigate","useEffect","product","toastId","toast","autoClose","setTimeout","render","_Fragment","color","background","border","textDecoration","cursor","closeButton","ToastContainer","Product","display","justifyContent","alignItems","old","max","_toConsumableArray","Array","_","idx","min","CartItem","setCartItem","pincode","email","address","phoneno","age","noOfPersons","appointmentDate","beneficiaries","orderData","setOrderData","_useState3","_useState4","pincodeMessage","setPincodeMessage","prevState","from","gender","handleBeneficiariesChange","field","value","newBeneficiaries","_defineProperty","handleSubmitOrder","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderDetails","wrap","_context","prev","next","availablePincodes","alert","abrupt","cartItems","console","log","axios","process","sent","data","success","t0","error","stop","apply","Form","controlId","InputGroup","placeholder","onChange","e","target","variant","as","newNoOfPersons","parseInt","i","keys","num","options","currentDate","Date","date","setDate","getDate","dateString","toLocaleDateString","year","month","day","push","generateDateOptions","beneficiary","listSelected","setListSelected","setRelatedProducts","_useState5","_useState6","setIncludedTests","_useState7","_useState8","expandedCategory","setExpandedCategory","_useContext","selectedProduct","useParams","_useState9","_useState10","quantity","setQuantity","storedProduct","getItem","parse","window","scrollTo","includedTests","allTests","flatMap","category","tests","products","includes","item","Fragment","Banner","shortDesc","event","handleAdd","categoryName","marginRight","testId","test","p","description","reviews","rate","rating","text","EmbeddedCheckoutForm","InputGroupText","createWithBsPrefix","hasValidation","_ref$as","contextValue","useMemo","InputGroupContext","Text","Radio","FormCheckInput","Checkbox"],"sourceRoot":""}