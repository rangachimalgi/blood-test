{"version":3,"file":"static/js/782.8f2301a5.chunk.js","mappings":"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","sources":["components/Banner/Banner.jsx","components/EmbeddedCheckoutForm.js","pages/HealthPackagesDetails.jsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { Col, Container, Row } from \"react-bootstrap\";\nimport productBg from \"../../Images/table.jpg\";\nimport \"./banner.css\";\nconst Banner = ({title}) => {\n    return ( \n        <div className=\"image-container\">\n            <img src={productBg} alt=\"Product-bg\" />\n            <div className=\"overlay\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h2>{title}</h2>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    );\n}\n\nexport default Banner;","import React, { useState, useEffect } from \"react\";\nimport { Button, InputGroup, Form, Container, Row, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { availablePincodes } from \"../components/availablePincodes.js\";\nimport \"../Styles/embeddedCheckoutForm.css\";\n\nconst EmbeddedCheckoutForm = ({ CartItem, setCartItem }) => {\n  const [orderData, setOrderData] = useState({\n    pincode: \"\",\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    phoneno: \"\",\n    age: \"\",\n    noOfPersons: 1,\n    appointmentDate: \"\",\n    beneficiaries: [\n      { name: \"\", age: \"\", gender: \"\" }, // Keeping the beneficiary details\n    ],\n    tests: [], // Separate tests array for the order\n  });\n  const [pincodeMessage, setPincodeMessage] = useState(\"\");\n\n  useEffect(() => {\n    setOrderData((prevState) => ({\n      ...prevState,\n      beneficiaries: Array.from({ length: prevState.noOfPersons }, () => ({\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n      })),\n    }));\n  }, [orderData.noOfPersons]);\n\n  useEffect(() => {\n    if (!orderData.appointmentDate) {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n\n      const defaultDate = tomorrow.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n\n      setOrderData((prev) => ({\n        ...prev,\n        appointmentDate: defaultDate,\n      }));\n    }\n  }, []);\n\n  const checkAvailability = () => {\n    if (availablePincodes.includes(orderData.pincode)) {\n      setPincodeMessage(\"Service is available in your pincode!\");\n    } else {\n      setPincodeMessage(\"Sorry, service is not available in your pincode.\");\n    }\n  };\n\n  const handleBeneficiariesChange = (index, field, value) => {\n    const newBeneficiaries = [...orderData.beneficiaries];\n    newBeneficiaries[index] = { ...newBeneficiaries[index], [field]: value };\n    setOrderData({ ...orderData, beneficiaries: newBeneficiaries });\n  };\n\n  const handleTestChange = (test, isChecked) => {\n    let updatedTests = [...orderData.tests];\n    if (isChecked) {\n      if (!updatedTests.includes(test)) {\n        updatedTests.push(test);\n      }\n    } else {\n      updatedTests = updatedTests.filter((t) => t !== test);\n    }\n    setOrderData({ ...orderData, tests: updatedTests });\n  };\n\n  const handleSubmitOrder = async () => {\n    console.log(\"Order Data before submission:\", orderData);\n\n    const orderDetails = {\n      pincode: orderData.pincode,\n      name: orderData.name,\n      email: orderData.email,\n      address: orderData.address,\n      phoneno: orderData.phoneno,\n      age: orderData.age,\n      noOfPersons: orderData.noOfPersons,\n      appointmentDate: orderData.appointmentDate,\n      beneficiaries: orderData.beneficiaries.map((beneficiary) => ({\n        name: beneficiary.name,\n        age: beneficiary.age,\n        gender: beneficiary.gender,\n      })),\n      tests: orderData.tests, // Include tests here\n      cartItems: CartItem,\n    };\n\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/orders`,\n        orderDetails\n      );\n      if (response.data.success) {\n        setCartItem([]);\n        alert(\"Order submitted successfully!\");\n      } else {\n        alert(\"Error submitting order. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting order:\", error);\n      alert(\"Error submitting order. Please try again.\");\n    }\n  };\n\n  const generateDateOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 1; i <= 7; i++) {\n      const date = new Date();\n      date.setDate(currentDate.getDate() + i); // Start from tomorrow\n      const dateString = date.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n      options.push(\n        <option key={i} value={dateString}>\n          {dateString}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <Container className=\"embedded-checkout-form\">\n      <Row>\n        <Col md={12}>\n          <h3 className=\"form-heading\">Booking Form</h3>\n          <Form>\n            <Form.Group controlId=\"formPincode\">\n              <InputGroup>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Pincode\"\n                  value={orderData.pincode}\n                  onChange={(e) =>\n                    setOrderData({ ...orderData, pincode: e.target.value })\n                  }\n                  name=\"pincode\"\n                  className=\"form-control\"\n                />\n                <Button variant=\"outline-secondary\" onClick={checkAvailability}>\n                  Check Availability\n                </Button>\n              </InputGroup>\n              <Form.Text className=\"text-muted\">{pincodeMessage}</Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Name :</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                value={orderData.name}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, name: e.target.value })\n                }\n                name=\"name\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={orderData.email}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, email: e.target.value })\n                }\n                name=\"email\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAddress\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your address\"\n                value={orderData.address}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, address: e.target.value })\n                }\n                name=\"address\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formPhoneNo\">\n              <Form.Label>Phone No</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your phone no\"\n                value={orderData.phoneno}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, phoneno: e.target.value })\n                }\n                name=\"phoneno\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAge\">\n              <Form.Label>Age</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your age\"\n                value={orderData.age}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, age: e.target.value })\n                }\n                name=\"age\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formNoOfPersons\">\n              <Form.Label>Number of Persons</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.noOfPersons}\n                onChange={(e) => {\n                  const newNoOfPersons = parseInt(e.target.value, 10);\n                  setOrderData({\n                    ...orderData,\n                    noOfPersons: newNoOfPersons,\n                    beneficiaries: Array.from(\n                      { length: newNoOfPersons },\n                      (_, i) =>\n                        orderData.beneficiaries[i] || {\n                          name: \"\",\n                          age: \"\",\n                          gender: \"\",\n                        }\n                    ),\n                  });\n                }}\n                name=\"noOfPersons\"\n                className=\"form-control large-select\" // Add custom class here\n              >\n                {[...Array(10).keys()].map((num) => (\n                  <option key={num + 1} value={num + 1}>\n                    {num + 1}\n                  </option>\n                ))}\n              </Form.Control>\n              <Form.Text className=\"text-warning\">\n                Note : The same set of tests/packages will be added for all\n                persons.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formAppointmentDate\">\n              <Form.Label>Appointment Date</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.appointmentDate}\n                onChange={(e) =>\n                  setOrderData({\n                    ...orderData,\n                    appointmentDate: e.target.value,\n                  })\n                }\n                name=\"appointmentDate\"\n                className=\"form-control large-select\" // Add custom class here\n              >\n                {generateDateOptions()}\n              </Form.Control>\n            </Form.Group>\n\n            <h5>Beneficiaries</h5>\n            {orderData.beneficiaries.map((beneficiary, index) => (\n              <div key={index}>\n                <Form.Group controlId={`formBeneficiaryName${index}`}>\n                  <Form.Label>Beneficiary Name {index + 1}</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter name\"\n                    value={beneficiary.name}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, \"name\", e.target.value)\n                    }\n                    name={`beneficiaryName${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryAge${index}`}>\n                  <Form.Label>Age</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter age\"\n                    value={beneficiary.age}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, \"age\", e.target.value)\n                    }\n                    name={`beneficiaryAge${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryGender${index}`}>\n                  <Form.Label>Gender</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={beneficiary.gender}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, \"gender\", e.target.value)\n                    }\n                    name={`beneficiaryGender${index}`}\n                    className=\"form-control large-select\" // Add custom class here\n                  >\n                    <option value=\"\">Select Gender</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Other\">Other</option>\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            ))}\n\n            <h5>Select Additional Tests (Optional)</h5>\n            <Form.Group controlId=\"formAdditionalTests\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Fasting Blood Sugar (FBS) @ Rs. 80 / Person\"\n                checked={orderData.tests.includes(\"Fasting Blood Sugar (FBS)\")}\n                onChange={(e) =>\n                  handleTestChange(\n                    \"Fasting Blood Sugar (FBS)\",\n                    e.target.checked\n                  )\n                }\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"CRP Test @ Rs. 480 / Person\"\n                checked={orderData.tests.includes(\"CRP Test\")}\n                onChange={(e) => handleTestChange(\"CRP Test\", e.target.checked)}\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"ESR Test @ Rs. 120 / Person\"\n                checked={orderData.tests.includes(\"ESR Test\")}\n                onChange={(e) => handleTestChange(\"ESR Test\", e.target.checked)}\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Covid Antibody IgG @ Rs. 400 / Person\"\n                checked={orderData.tests.includes(\"Covid Antibody IgG\")}\n                onChange={(e) =>\n                  handleTestChange(\"Covid Antibody IgG\", e.target.checked)\n                }\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Complete Urine Analysis @ Rs. 510 / Person\"\n                checked={orderData.tests.includes(\"Complete Urine Analysis\")}\n                onChange={(e) =>\n                  handleTestChange(\"Complete Urine Analysis\", e.target.checked)\n                }\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Troponin - Heart Attack Risk Test (ACTNI) @ Rs. 650 / Person\"\n                checked={orderData.tests.includes(\n                  \"Troponin - Heart Attack Risk Test (ACTNI)\"\n                )}\n                onChange={(e) =>\n                  handleTestChange(\n                    \"Troponin - Heart Attack Risk Test (ACTNI)\",\n                    e.target.checked\n                  )\n                }\n              />\n            </Form.Group>\n\n            <Button\n              variant=\"primary\"\n              onClick={handleSubmitOrder}\n              className=\"confirm-button\"\n            >\n              Book Now\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default EmbeddedCheckoutForm;\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Banner from \"../components/Banner/Banner\";\nimport { DataContainer } from \"../App\";\nimport { Col, Container, Row, Collapse } from \"react-bootstrap\";\nimport { healthPackagesArray } from \"./HealthPackages\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport EmbeddedCheckoutForm from \"../components/EmbeddedCheckoutForm.js\";\nimport \"../Styles/productDetails.css\";\n\nconst HealthPackageDetails = () => {\n  const [quantity, setQuantity] = useState(1);\n  const { selectedProduct, setSelectedProduct, addToCart } = useContext(DataContainer);\n  const [openCategoryId, setOpenCategoryId] = useState(null);\n  const { id } = useParams();\n  const [likeCount, setLikeCount] = useState(0);\n  const [liked, setLiked] = useState(false);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    \n    const fetchPackageById = async () => {\n      try {\n        const res = await axios.get(\n          `${process.env.REACT_APP_API_URL}/api/packages/${id}`\n        );\n        setSelectedProduct(res.data);\n      } catch (err) {\n        console.error(\"Failed to fetch package by ID:\", err);\n      }\n    };\n\n    fetchPackageById();\n  }, [id, setSelectedProduct]);\n\n  const handleQuantityChange = (event) => {\n    setQuantity(parseInt(event.target.value));\n  };\n\n  const handleAdd = (selectedProduct, quantity) => {\n    addToCart(selectedProduct, quantity);\n    toast.success(\"Package has been added to cart!\");\n  };\n\n  const scrollToCheckoutForm = () => {\n    document.getElementById(\"checkout-form\").scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const handleLike = () => {\n    setLikeCount(likeCount + (liked ? -1 : 1));\n    setLiked(!liked);\n  };\n\n  return (\n    <Fragment>\n      <Banner title={selectedProduct?.productName} />\n      <Container className=\"product-page\">\n        <Row>\n          <Col md={8}>\n            <div className=\"product-details-modern-card\">\n              <section>\n                <div className=\"product-details-info-full\">\n                  <h2 className=\"product-details-title\">{selectedProduct?.productName}</h2>\n                  <div className=\"product-details-meta\">\n                    <span className=\"product-details-mrp\">₹{selectedProduct?.mrp}</span>\n                    <span className=\"product-details-price\">₹{selectedProduct?.price}</span>\n                  </div>\n                  <button className=\"product-details-add-btn\" onClick={() => handleAdd(selectedProduct, quantity)} aria-label=\"Add to Cart\">\n                    <ion-icon name=\"cart-outline\"></ion-icon> Add to Cart\n                  </button>\n                </div>\n              </section>\n\n              {/* Included Tests section */}\n              {selectedProduct?.includedTests && selectedProduct.includedTests.length > 0 && (\n                <section className=\"included-tests-modern mt-4\">\n                  <h2>INCLUDED TESTS</h2>\n                  {selectedProduct.includedTests.map((category) => (\n                    <div key={category.categoryName} className=\"included-tests-category\">\n                      <div \n                        className=\"included-tests-category-header\"\n                        onClick={() =>\n                          setOpenCategoryId(\n                            openCategoryId !== category.categoryName\n                              ? category.categoryName\n                              : null\n                          )\n                        }\n                        tabIndex={0}\n                        role=\"button\"\n                        aria-label={`Toggle ${category.categoryName}`}\n                        onKeyDown={e => {\n                          if (e.key === 'Enter' || e.key === ' ') {\n                            setOpenCategoryId(\n                              openCategoryId !== category.categoryName\n                                ? category.categoryName\n                                : null\n                            );\n                          }\n                        }}\n                      >\n                        <h4 className=\"included-tests-category-title\">\n                          {category.categoryName.toUpperCase()}\n                        </h4>\n                        <ion-icon \n                          name={openCategoryId === category.categoryName ? 'chevron-down-outline' : 'chevron-forward-outline'}\n                          className=\"category-toggle-icon\"\n                        ></ion-icon>\n                      </div>\n                      <Collapse in={openCategoryId === category.categoryName}>\n                        <ul className=\"included-tests-list\">\n                          {category.tests.map((testName, index) => (\n                            <li key={index}>{testName.toUpperCase()}</li>\n                          ))}\n                        </ul>\n                      </Collapse>\n                    </div>\n                  ))}\n                </section>\n              )}\n\n              <section className=\"product-details-tabs mt-4\">\n                <ul className=\"product-details-tablist\">\n                  <li className=\"active\">Description</li>\n                </ul>\n                <p className=\"product-details-desc mt-2\">{selectedProduct?.description}</p>\n              </section>\n            </div>\n          </Col>\n          <Col md={4}>\n            <div className=\"checkout-box form-container\" id=\"checkout-form\">\n              <EmbeddedCheckoutForm\n                CartItem={selectedProduct ? [selectedProduct] : []}\n                setCartItem={setSelectedProduct}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      <button\n        className=\"fixed-book-appointment-button\"\n        onClick={scrollToCheckoutForm}\n      >\n        Book Appointment\n      </button>\n    </Fragment>\n  );\n};\n\nexport default HealthPackageDetails;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["_ref","title","_jsxs","className","children","_jsx","src","productBg","alt","Container","Row","Col","CartItem","setCartItem","_useState","useState","pincode","name","email","address","phoneno","age","noOfPersons","appointmentDate","beneficiaries","gender","tests","_useState2","_slicedToArray","orderData","setOrderData","_useState3","_useState4","pincodeMessage","setPincodeMessage","useEffect","prevState","_objectSpread","Array","from","length","tomorrow","Date","setDate","getDate","defaultDate","toLocaleDateString","year","month","day","prev","handleBeneficiariesChange","index","field","value","newBeneficiaries","_toConsumableArray","_defineProperty","handleTestChange","test","isChecked","updatedTests","includes","push","filter","t","handleSubmitOrder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderDetails","wrap","_context","next","console","log","map","beneficiary","cartItems","axios","concat","process","sent","data","success","alert","t0","error","stop","apply","arguments","md","Form","controlId","InputGroup","type","placeholder","onChange","e","target","Button","variant","onClick","availablePincodes","as","newNoOfPersons","parseInt","_","i","keys","num","options","currentDate","date","dateString","generateDateOptions","label","checked","quantity","_useContext","useContext","DataContainer","selectedProduct","setSelectedProduct","addToCart","openCategoryId","setOpenCategoryId","id","useParams","_useState5","_useState6","_useState7","_useState8","window","scrollTo","fetchPackageById","res","Fragment","Banner","productName","mrp","price","toast","handleAdd","includedTests","category","categoryName","tabIndex","role","onKeyDown","key","toUpperCase","Collapse","in","testName","description","EmbeddedCheckoutForm","document","getElementById","scrollIntoView","behavior","React","ref","bsPrefix","_ref$as","Component","props","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","classNames","displayName"],"sourceRoot":""}