{"version":3,"file":"static/js/970.84f1aaca.chunk.js","mappings":"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","sources":["components/Banner/Banner.jsx","components/EmbeddedCheckoutForm.js","components/Product/Product.jsx","components/ShopList.jsx","pages/ProductDetails.jsx"],"sourcesContent":["import { Col, Container, Row } from \"react-bootstrap\";\nimport productBg from \"../../Images/table.jpg\";\nimport \"./banner.css\";\nconst Banner = ({title}) => {\n    return ( \n        <div className=\"image-container\">\n            <img src={productBg} alt=\"Product-bg\" />\n            <div className=\"overlay\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h2>{title}</h2>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    );\n}\n\nexport default Banner;","import React, { useState, useEffect } from \"react\";\nimport { Button, InputGroup, Form, Container, Row, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { availablePincodes } from \"../components/availablePincodes.js\";\nimport \"../Styles/embeddedCheckoutForm.css\";\n\nconst EmbeddedCheckoutForm = ({ CartItem, setCartItem }) => {\n  const [orderData, setOrderData] = useState({\n    pincode: \"\",\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    phoneno: \"\",\n    age: \"\",\n    noOfPersons: 1,\n    appointmentDate: \"\",\n    beneficiaries: [\n      { name: \"\", age: \"\", gender: \"\" }, // Keeping the beneficiary details\n    ],\n    tests: [], // Separate tests array for the order\n  });\n  const [pincodeMessage, setPincodeMessage] = useState(\"\");\n\n  useEffect(() => {\n    setOrderData((prevState) => ({\n      ...prevState,\n      beneficiaries: Array.from({ length: prevState.noOfPersons }, () => ({\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n      })),\n    }));\n  }, [orderData.noOfPersons]);\n\n  const checkAvailability = () => {\n    if (availablePincodes.includes(orderData.pincode)) {\n      setPincodeMessage(\"Service is available in your pincode!\");\n    } else {\n      setPincodeMessage(\"Sorry, service is not available in your pincode.\");\n    }\n  };\n\n  const handleBeneficiariesChange = (index, field, value) => {\n    const newBeneficiaries = [...orderData.beneficiaries];\n    newBeneficiaries[index] = { ...newBeneficiaries[index], [field]: value };\n    setOrderData({ ...orderData, beneficiaries: newBeneficiaries });\n  };\n\n  const handleTestChange = (test, isChecked) => {\n    let updatedTests = [...orderData.tests];\n    if (isChecked) {\n      if (!updatedTests.includes(test)) {\n        updatedTests.push(test);\n      }\n    } else {\n      updatedTests = updatedTests.filter((t) => t !== test);\n    }\n    setOrderData({ ...orderData, tests: updatedTests });\n  };\n\n  const handleSubmitOrder = async () => {\n    console.log(\"Order Data before submission:\", orderData);\n\n    const orderDetails = {\n      pincode: orderData.pincode,\n      name: orderData.name,\n      email: orderData.email,\n      address: orderData.address,\n      phoneno: orderData.phoneno,\n      age: orderData.age,\n      noOfPersons: orderData.noOfPersons,\n      appointmentDate: orderData.appointmentDate,\n      beneficiaries: orderData.beneficiaries.map((beneficiary) => ({\n        name: beneficiary.name,\n        age: beneficiary.age,\n        gender: beneficiary.gender,\n      })),\n      tests: orderData.tests, // Include tests here\n      cartItems: CartItem,\n    };\n\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/orders`,\n        orderDetails\n      );\n      if (response.data.success) {\n        setCartItem([]);\n        alert(\"Order submitted successfully!\");\n      } else {\n        alert(\"Error submitting order. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting order:\", error);\n      alert(\"Error submitting order. Please try again.\");\n    }\n  };\n\n  const generateDateOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(currentDate.getDate() + i);\n      const dateString = date.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n      options.push(\n        <option key={i} value={dateString}>\n          {dateString}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <Container className=\"embedded-checkout-form\">\n      <Row>\n        <Col md={12}>\n          <h3 className=\"form-heading\">Booking Form</h3>\n          <Form>\n            <Form.Group controlId=\"formPincode\">\n              <InputGroup>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Pincode\"\n                  value={orderData.pincode}\n                  onChange={(e) =>\n                    setOrderData({ ...orderData, pincode: e.target.value })\n                  }\n                  name=\"pincode\"\n                  className=\"form-control\"\n                />\n                <Button variant=\"outline-secondary\" onClick={checkAvailability}>\n                  Check Availability\n                </Button>\n              </InputGroup>\n              <Form.Text className=\"text-muted\">{pincodeMessage}</Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Name :</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                value={orderData.name}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, name: e.target.value })\n                }\n                name=\"name\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={orderData.email}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, email: e.target.value })\n                }\n                name=\"email\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAddress\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your address\"\n                value={orderData.address}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, address: e.target.value })\n                }\n                name=\"address\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formPhoneNo\">\n              <Form.Label>Phone No</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your phone no\"\n                value={orderData.phoneno}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, phoneno: e.target.value })\n                }\n                name=\"phoneno\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAge\">\n              <Form.Label>Age</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your age\"\n                value={orderData.age}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, age: e.target.value })\n                }\n                name=\"age\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formNoOfPersons\">\n              <Form.Label>Number of Persons</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.noOfPersons}\n                onChange={(e) => {\n                  const newNoOfPersons = parseInt(e.target.value, 10);\n                  setOrderData({\n                    ...orderData,\n                    noOfPersons: newNoOfPersons,\n                    beneficiaries: Array.from(\n                      { length: newNoOfPersons },\n                      (_, i) =>\n                        orderData.beneficiaries[i] || {\n                          name: \"\",\n                          age: \"\",\n                          gender: \"\",\n                        }\n                    ),\n                  });\n                }}\n                name=\"noOfPersons\"\n                className=\"form-control large-select\" // Add custom class here\n              >\n                {[...Array(10).keys()].map((num) => (\n                  <option key={num + 1} value={num + 1}>\n                    {num + 1}\n                  </option>\n                ))}\n              </Form.Control>\n              <Form.Text className=\"text-warning\">\n                Note : The same set of tests/packages will be added for all\n                persons.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formAppointmentDate\">\n              <Form.Label>Appointment Date</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.appointmentDate}\n                onChange={(e) =>\n                  setOrderData({\n                    ...orderData,\n                    appointmentDate: e.target.value,\n                  })\n                }\n                name=\"appointmentDate\"\n                className=\"form-control large-select\" // Add custom class here\n              >\n                {generateDateOptions()}\n              </Form.Control>\n            </Form.Group>\n\n            <h5>Beneficiaries</h5>\n            {orderData.beneficiaries.map((beneficiary, index) => (\n              <div key={index}>\n                <Form.Group controlId={`formBeneficiaryName${index}`}>\n                  <Form.Label>Beneficiary Name {index + 1}</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter name\"\n                    value={beneficiary.name}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, \"name\", e.target.value)\n                    }\n                    name={`beneficiaryName${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryAge${index}`}>\n                  <Form.Label>Age</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter age\"\n                    value={beneficiary.age}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, \"age\", e.target.value)\n                    }\n                    name={`beneficiaryAge${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryGender${index}`}>\n                  <Form.Label>Gender</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={beneficiary.gender}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, \"gender\", e.target.value)\n                    }\n                    name={`beneficiaryGender${index}`}\n                    className=\"form-control large-select\" // Add custom class here\n                  >\n                    <option value=\"\">Select Gender</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Other\">Other</option>\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            ))}\n\n            <h5>Select Additional Tests (Optional)</h5>\n            <Form.Group controlId=\"formAdditionalTests\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Fasting Blood Sugar (FBS) @ Rs. 80 / Person\"\n                checked={orderData.tests.includes(\"Fasting Blood Sugar (FBS)\")}\n                onChange={(e) =>\n                  handleTestChange(\n                    \"Fasting Blood Sugar (FBS)\",\n                    e.target.checked\n                  )\n                }\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"CRP Test @ Rs. 480 / Person\"\n                checked={orderData.tests.includes(\"CRP Test\")}\n                onChange={(e) => handleTestChange(\"CRP Test\", e.target.checked)}\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"ESR Test @ Rs. 120 / Person\"\n                checked={orderData.tests.includes(\"ESR Test\")}\n                onChange={(e) => handleTestChange(\"ESR Test\", e.target.checked)}\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Covid Antibody IgG @ Rs. 400 / Person\"\n                checked={orderData.tests.includes(\"Covid Antibody IgG\")}\n                onChange={(e) =>\n                  handleTestChange(\"Covid Antibody IgG\", e.target.checked)\n                }\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Complete Urine Analysis @ Rs. 510 / Person\"\n                checked={orderData.tests.includes(\"Complete Urine Analysis\")}\n                onChange={(e) =>\n                  handleTestChange(\"Complete Urine Analysis\", e.target.checked)\n                }\n              />\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Troponin - Heart Attack Risk Test (ACTNI) @ Rs. 650 / Person\"\n                checked={orderData.tests.includes(\n                  \"Troponin - Heart Attack Risk Test (ACTNI)\"\n                )}\n                onChange={(e) =>\n                  handleTestChange(\n                    \"Troponin - Heart Attack Risk Test (ACTNI)\",\n                    e.target.checked\n                  )\n                }\n              />\n            </Form.Group>\n\n            <Button\n              variant=\"primary\"\n              onClick={handleSubmitOrder}\n              className=\"confirm-button\"\n            >\n              Book Now\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default EmbeddedCheckoutForm;\n","import { useContext, useState, useEffect } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"./product.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DataContainer } from \"../../App\";\nimport { toast } from \"react-toastify\";\nimport CheckoutForm from \"../CheckoutForm\";\nimport Highlight from \"../../components/Highlight\"; // Import Highlight component\n\nconst Product = ({ title, productItem, addToCart, showImage = true, desc, enableHoverEffect, isShopList }) => {\n  const { setSelectedProduct } = useContext(DataContainer);\n  const router = useNavigate();\n  const [count, setCount] = useState(0);\n  const [showCheckout, setShowCheckout] = useState(false);\n  const [selectedPackage, setSelectedPackage] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const handleClick = () => {\n    setSelectedProduct(productItem);\n    localStorage.setItem(\n      `selectedProduct-${productItem.id}`,\n      JSON.stringify(productItem)\n    );\n    router(`/shop/${productItem.id}`);\n  };\n  const handleAddToCart = () => {\n    addToCart(productItem); // Only call the addToCart function passed from the parent\n    if (isMobile && title === \"Popular Tests\") {\n      setTimeout(() => {\n        router('/cart');\n      }, 1000); // Delay to allow the toast message to be seen\n    }\n  };\n  \n\n  const handleBookNow = (pkg) => {\n    setSelectedProduct(pkg);  // Assuming you still want to set the selected product in context or state\n    router(`/shop/${pkg.id}`);  // Navigate to the product-specific page\n};\n\n  const handleCloseCheckout = () => {\n    setShowCheckout(false);\n    setSelectedPackage(null);\n  };\n\n  const extractNumberOfTests = (productName) => {\n    const match = productName.match(/\\((\\d+)\\s*Tests\\)/i);\n    return match ? match[1] : '';\n  };\n\n  const isPopularPackage = title === \"Popular Packages\";\n  const isPopularTest = title === \"Popular Tests\";\n\n  if (isShopList) {\n    return (\n      <Col\n        lg={12}\n        md={12}\n        sm={12}\n        xs={12}\n        className=\"product-list-item\"\n      >\n        <div className=\"product-info\">\n          <h3 onClick={handleClick}>{productItem.productName}</h3>\n          <p>{productItem.labName || '\\u00A0'}</p>\n          </div>\n        <div className=\"product-price\">\n          <h4>&#8377;{productItem.price}</h4>\n          <div className=\"product-buttons\">\n            <button\n              className=\"product-button book-now\"\n              onClick={handleClick}\n            >\n              Book Now\n            </button>\n            <button\n              className=\"product-button add-to-cart\"\n              onClick={handleAddToCart}\n            >\n              Add To Cart\n            </button>\n          </div>\n        </div>\n      </Col>\n    );\n  } else {\n    return (\n      <Col\n        lg={3}\n        md={4}\n        sm={6}\n        xs={12}\n        className={`product mtop ${enableHoverEffect ? 'hover-enabled' : ''} ${isPopularPackage ? 'popular-packages' : ''}`}\n      >\n        {title === \"Big Discount\" && (\n          <span className=\"discount\">{productItem.discount}% Off</span>\n        )}\n        <div className=\"product-image-container\">\n          {showImage && (\n            <img\n              loading=\"lazy\"\n              onClick={handleClick}\n              src={productItem.imgUrl}\n              alt={productItem.productName}\n              className=\"product-image\"\n            />\n          )}\n          {enableHoverEffect && (\n            <div className=\"hover-overlay\">\n              <h2>{productItem.overlayTitle}</h2>\n              <ul>\n                {productItem.overlayDetails?.map((detail, index) => (\n                  <li key={index}>{detail}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n        {desc && <p className=\"product-description\">{desc}</p>}\n        {isPopularPackage && (\n          <Highlight number={extractNumberOfTests(productItem.productName)} />\n        )}\n        <div className=\"product-like\">\n          <label>{count}</label> <br />\n          <ion-icon name=\"heart-outline\" onClick={increment}></ion-icon>\n        </div>\n        <div className=\"product-details\">\n          <h3 onClick={handleClick}>{productItem.productName}</h3>\n          <div className=\"price\">\n            <h4>&#8377;{productItem.price}</h4>\n            {!isPopularPackage && (\n              <button\n                aria-label=\"Add\"\n                type=\"submit\"\n                className={`add ${isPopularTest ? 'add-to-cart-full' : ''}`}\n                onClick={handleAddToCart}\n              >\n                {isPopularTest ? 'Add to Cart' : <ion-icon name=\"add\"></ion-icon>}\n              </button>\n            )}\n          </div>\n          {isPopularPackage && (\n            <>\n              <div className=\"product-buttons\">\n                <button\n                  className=\"product-button book-now\"\n                  onClick={() => handleBookNow(productItem)}\n                >\n                  Book Now\n                </button>\n              </div>\n              <div className=\"extra-details\">\n                <ul>\n                  <li><i className=\"fa fa-check-circle\"></i> NABL, CAP, ISO 9001</li>\n                  <li><i className=\"fa fa-check-circle\"></i> Free Home Sample Pickup</li>\n                  <li><i className=\"fa fa-check-circle\"></i> Online Report Delivery</li>\n                </ul>\n              </div>\n            </>\n          )}\n        </div>\n        {showCheckout && (\n          <CheckoutForm\n            show={showCheckout}\n            handleClose={handleCloseCheckout}\n            CartItem={selectedPackage ? [selectedPackage] : []}\n            setCartItem={() => {}}\n          />\n        )}\n      </Col>\n    );\n  }\n};\n\nexport default Product;\n","import { Row } from \"react-bootstrap\";\nimport { useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport Product from \"./Product/Product\";\nimport { DataContainer } from \"../App\";\nimport \"../Styles/Shop.css\";\n\nconst ShopList = ({ productItems }) => {\n  const { addToCart } = useContext(DataContainer);\n  const navigate = useNavigate();\n\n  useEffect(() => {}, [productItems]);\n\n  const handleAddToCart = (product) => {\n    addToCart(product);\n    const toastId = toast.success(\"Product has been added to cart!\", { autoClose: 1000 });\n\n    setTimeout(() => {\n      toast.update(toastId, {\n        render: (\n          <>\n            <div>Product has been added to cart!</div>\n            <button\n              onClick={() => {\n                navigate(\"/cart\");\n                toast.dismiss(toastId);\n              }}\n              style={{\n                color: \"#007bff\",\n                background: \"none\",\n                border: \"none\",\n                textDecoration: \"underline\",\n                cursor: \"pointer\",\n              }}\n            >\n              Go to Cart\n            </button>\n          </>\n        ),\n        autoClose: false,\n        closeButton: true,\n      });\n    }, 1000);\n  };\n\n  if (productItems.length === 0) {\n    return <h1 className=\"not-found\">Product Not Found !!</h1>;\n  } else {\n    return (\n      <div>\n        <ToastContainer />\n        <Row className=\"justify-content-center\">\n          {productItems.map((productItem) => {\n            return (\n              <Product\n                key={productItem.id}\n                title={null}\n                productItem={productItem}\n                addToCart={addToCart}\n                handleAddToCart={handleAddToCart}\n                showImage={false}\n                isShopList={true} // Pass the prop to indicate this is a ShopList\n              />\n            );\n          })}\n        </Row>\n      </div>\n    );\n  }\n};\n\nexport default ShopList;\n","import { Fragment, useContext, useEffect, useState } from \"react\";\nimport Banner from \"../components/Banner/Banner\";\nimport { DataContainer } from \"../App\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport ShopList from \"../components/ShopList\";\nimport { products } from \"../utils/products\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport EmbeddedCheckoutForm from \"../components/EmbeddedCheckoutForm.js\";\nimport \"../Styles/productDetails.css\";\n\nconst ProductDetails = () => {\n  const [listSelected, setListSelected] = useState(\"desc\");\n  const [relatedProducts, setRelatedProducts] = useState([]);\n  const [includedTests, setIncludedTests] = useState([]);\n  const [expandedCategory, setExpandedCategory] = useState(null);\n  const { selectedProduct, setSelectedProduct, addToCart } =\n    useContext(DataContainer);\n  const { id } = useParams();\n  const [quantity, setQuantity] = useState(1);\n\n  useEffect(() => {\n    if (!selectedProduct) {\n      const storedProduct = localStorage.getItem(`selectedProduct-${id}`);\n      setSelectedProduct(JSON.parse(storedProduct));\n    }\n  }, [id, selectedProduct, setSelectedProduct]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (selectedProduct?.includedTests) {\n      const allTests = selectedProduct.includedTests.flatMap(\n        (category) => category.tests\n      );\n      setIncludedTests(\n        products.filter((product) => allTests.includes(product.id))\n      );\n    }\n    setRelatedProducts(\n      products.filter(\n        (item) =>\n          item.category === selectedProduct?.category &&\n          item.id !== selectedProduct?.id\n      )\n    );\n  }, [selectedProduct]);\n\n  useEffect(() => {\n    return () => {\n      setSelectedProduct(null);\n    };\n  }, [setSelectedProduct]);\n\n  const handleQuantityChange = (event) => {\n    setQuantity(parseInt(event.target.value));\n  };\n\n  const handleAdd = (selectedProduct, quantity) => {\n    addToCart(selectedProduct, quantity);\n    toast.success(\"Product has been added to cart!\");\n  };\n\n  return (\n    <Fragment>\n      <Banner title={selectedProduct?.productName} />\n      <Container className=\"product-page\">\n        <Row>\n          <Col md={8}>\n            <div className=\"product-box\">\n              <section>\n                <Row className=\"justify-content-center\">\n                  <Col md={6}>\n                    <img loading=\"lazy\" src={selectedProduct?.imgUrl} alt=\"\" />\n                  </Col>\n                  <h1>{selectedProduct?.products}</h1>\n                  <Col md={6}>\n                    <h2>{selectedProduct?.productName}</h2>\n                    <div className=\"info\">\n                      <span className=\"price\">&#8377;{selectedProduct?.price}</span>\n                      <span>category: {selectedProduct?.category}</span>\n                    </div>\n                    <p>{selectedProduct?.shortDesc}</p>\n                    {/* <input\n                      className=\"qty-input\"\n                      type=\"number\"\n                      placeholder=\"Qty\"\n                      value={quantity}\n                      onChange={handleQuantityChange}\n                    />\n                    <button\n                      aria-label=\"Add\"\n                      type=\"submit\"\n                      className=\"add\"\n                      onClick={() => handleAdd(selectedProduct, quantity)}\n                    >\n                      Add To Cart\n                    </button> */}\n                  </Col>\n                </Row>\n              </section>\n              \n              {/* Included Tests section */}\n              {selectedProduct?.includedTests &&\n                selectedProduct.includedTests.length > 0 && (\n                  <section className=\"included-tests\">\n                    <h3>Included Tests</h3>\n                    {selectedProduct.includedTests.map((category) => (\n                      <div key={category.categoryName}>\n                        <h4\n                          onClick={() =>\n                            setExpandedCategory(\n                              expandedCategory === category.categoryName\n                                ? null\n                                : category.categoryName\n                            )\n                          }\n                          style={{\n                            cursor: \"pointer\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          {expandedCategory === category.categoryName ? (\n                            <i\n                              className=\"fa fa-chevron-down\"\n                              style={{ marginRight: \"10px\" }}\n                            ></i>\n                          ) : (\n                            <i\n                              className=\"fa fa-chevron-right\"\n                              style={{ marginRight: \"10px\" }}\n                            ></i>\n                          )}\n                          {category.categoryName}\n                        </h4>\n\n                        {expandedCategory === category.categoryName && (\n                          <Row>\n                            {category.tests.map((testId) => {\n                              const test = products.find((p) => p.id === testId);\n                              return (\n                                <Col md={4} key={testId}>\n                                  <div className=\"test-item\">\n                                    <h5>{test.productName}</h5>\n                                    <p>{test.shortDesc}</p>\n                                  </div>\n                                </Col>\n                              );\n                            })}\n                          </Row>\n                        )}\n                      </div>\n                    ))}\n                  </section>\n                )}\n\n              <section className=\"product-reviews\">\n                <ul>\n                  <li\n                    style={{\n                      color: listSelected === \"desc\" ? \"black\" : \"#9c9b9b\",\n                    }}\n                    onClick={() => setListSelected(\"desc\")}\n                  >\n                    Description\n                  </li>\n                </ul>\n                {listSelected === \"desc\" ? (\n                  <p>{selectedProduct?.description}</p>\n                ) : (\n                  <div className=\"rates\">\n                    {selectedProduct?.reviews.map((rate) => (\n                      <div className=\"rate-comment\" key={rate.rating}>\n                        <span>Jhon Doe</span>\n                        <span>{rate.rating} (rating)</span>\n                        <p>{rate.text}</p>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </section>\n\n              {/* <section className=\"related-products\">\n                <h3>You might also like</h3>\n                <ShopList productItems={relatedProducts} addToCart={addToCart} />\n              </section> */}\n            </div>\n          </Col>\n          <Col md={4}>\n            <div className=\"checkout-box form-container\">\n              <EmbeddedCheckoutForm\n                CartItem={selectedProduct ? [selectedProduct] : []}\n                setCartItem={setSelectedProduct}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default ProductDetails;\n"],"names":["_ref","title","_jsxs","className","children","_jsx","src","productBg","alt","Container","Row","Col","CartItem","setCartItem","_useState","useState","pincode","name","email","address","phoneno","age","noOfPersons","appointmentDate","beneficiaries","gender","tests","_useState2","_slicedToArray","orderData","setOrderData","_useState3","_useState4","pincodeMessage","setPincodeMessage","useEffect","prevState","_objectSpread","Array","from","length","handleBeneficiariesChange","index","field","value","newBeneficiaries","_toConsumableArray","_defineProperty","handleTestChange","test","isChecked","updatedTests","includes","push","filter","t","handleSubmitOrder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderDetails","wrap","_context","prev","next","console","log","map","beneficiary","cartItems","axios","concat","process","sent","data","success","alert","t0","error","stop","apply","arguments","md","Form","controlId","InputGroup","type","placeholder","onChange","e","target","Button","variant","onClick","availablePincodes","as","newNoOfPersons","parseInt","_","i","keys","num","options","currentDate","Date","date","setDate","getDate","dateString","toLocaleDateString","year","month","day","generateDateOptions","label","checked","productItem","addToCart","_ref$showImage","showImage","desc","enableHoverEffect","isShopList","setSelectedProduct","useContext","DataContainer","router","useNavigate","count","setCount","showCheckout","setShowCheckout","_useState5","_useState6","selectedPackage","setSelectedPackage","_useState7","_useState8","isMobile","setIsMobile","handleResize","window","innerWidth","addEventListener","removeEventListener","_productItem$overlayD","handleClick","localStorage","setItem","id","JSON","stringify","handleAddToCart","setTimeout","isPopularPackage","isPopularTest","lg","sm","xs","productName","labName","price","discount","loading","imgUrl","overlayTitle","overlayDetails","detail","Highlight","number","match","extractNumberOfTests","_Fragment","pkg","CheckoutForm","show","handleClose","productItems","navigate","product","toastId","toast","autoClose","render","style","color","background","border","textDecoration","cursor","closeButton","ToastContainer","Product","listSelected","setListSelected","setRelatedProducts","setIncludedTests","expandedCategory","setExpandedCategory","_useContext","selectedProduct","useParams","_useState9","_useState10","storedProduct","getItem","parse","scrollTo","includedTests","allTests","flatMap","category","products","item","Fragment","Banner","shortDesc","categoryName","display","alignItems","marginRight","testId","p","description","reviews","rate","rating","text","EmbeddedCheckoutForm"],"sourceRoot":""}