{"version":3,"file":"static/js/334.2010d639.chunk.js","mappings":"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","sources":["components/Banner/Banner.jsx","components/CheckoutForm.js","components/Highlight.js","components/Product/Product.jsx","components/ShopList.jsx","../node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["import { Col, Container, Row } from \"react-bootstrap\";\nimport productBg from \"../../Images/table.jpg\";\nimport \"./banner.css\";\nconst Banner = ({title}) => {\n    return ( \n        <div className=\"image-container\">\n            <img src={productBg} alt=\"Product-bg\" />\n            <div className=\"overlay\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h2>{title}</h2>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    );\n}\n\nexport default Banner;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Modal, Button, InputGroup, Form } from \"react-bootstrap\";\nimport { availablePincodes } from \"../components/availablePincodes.js\";\n\nconst CheckoutForm = ({ show, handleClose, CartItem, setCartItem }) => {\n  const [orderData, setOrderData] = useState({\n    pincode: \"\",\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    phoneno: \"\",\n    age: \"\",\n    noOfPersons: 1,\n    appointmentDate: \"\",\n    beneficiaries: [],\n    tests: [], // Separate tests array for the order\n  });\n  const [pincodeMessage, setPincodeMessage] = useState(\"\");\n\n  useEffect(() => {\n    setOrderData((prevState) => ({\n      ...prevState,\n      beneficiaries: Array.from({ length: prevState.noOfPersons }, () => ({\n        name: \"\",\n        age: \"\",\n        gender: \"\",\n      })),\n    }));\n  }, [orderData.noOfPersons]);\n\n  const checkAvailability = () => {\n    if (availablePincodes.includes(orderData.pincode)) {\n      setPincodeMessage(\"Service is available in your pincode!\");\n    } else {\n      setPincodeMessage(\"Sorry, service is not available in your pincode.\");\n    }\n  };\n\n  const handleBeneficiariesChange = (index, field, value) => {\n    const newBeneficiaries = [...orderData.beneficiaries];\n    newBeneficiaries[index] = { ...newBeneficiaries[index], [field]: value };\n    setOrderData({ ...orderData, beneficiaries: newBeneficiaries });\n  };\n\n  const handleTestChange = (test, isChecked) => {\n    let updatedTests = [...orderData.tests];\n    if (isChecked) {\n      if (!updatedTests.includes(test)) {\n        updatedTests.push(test);\n      }\n    } else {\n      updatedTests = updatedTests.filter((t) => t !== test);\n    }\n    setOrderData({ ...orderData, tests: updatedTests });\n  };\n\n  const handleSubmitOrder = async () => {\n    if (!availablePincodes.includes(orderData.pincode)) {\n      alert(\"Service is not available in your pincode.\");\n      return;\n    }\n\n    const orderDetails = {\n      pincode: orderData.pincode,\n      name: orderData.name,\n      email: orderData.email,\n      address: orderData.address,\n      phoneno: orderData.phoneno,\n      age: orderData.age,\n      noOfPersons: orderData.noOfPersons,\n      appointmentDate: orderData.appointmentDate,\n      beneficiaries: orderData.beneficiaries,\n      tests: orderData.tests, // Include tests here\n      cartItems: CartItem,\n    };\n\n    console.log(\"Order Details: \", orderDetails); // Add this line to log order details\n\n    // Log the size of the payload\n    const payloadSize = JSON.stringify(orderDetails).length;\n    console.log(`Payload size: ${payloadSize} bytes`);\n\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/orders`,\n        orderDetails\n      );\n      if (response.data.success) {\n        setCartItem([]);\n        handleClose();\n        alert(\"Order submitted successfully!\");\n      } else {\n        alert(\"Error submitting order. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting order:\", error);\n      alert(\"Error submitting order. Please try again.\");\n    }\n  };\n\n  const generateDateOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(currentDate.getDate() + i);\n      const dateString = date.toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n      options.push(\n        <option key={i} value={dateString}>\n          {dateString}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Checkout Form</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"formPincode\">\n            <InputGroup>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Pincode\"\n                value={orderData.pincode}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, pincode: e.target.value })\n                }\n                name=\"pincode\"\n              />\n              <Button variant=\"outline-secondary\" onClick={checkAvailability}>\n                Check Availability\n              </Button>\n            </InputGroup>\n            <Form.Text className=\"text-muted\">{pincodeMessage}</Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formName\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              value={orderData.name}\n              onChange={(e) =>\n                setOrderData({ ...orderData, name: e.target.value })\n              }\n              name=\"name\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              value={orderData.email}\n              onChange={(e) =>\n                setOrderData({ ...orderData, email: e.target.value })\n              }\n              name=\"email\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formAddress\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your address\"\n              value={orderData.address}\n              onChange={(e) =>\n                setOrderData({ ...orderData, address: e.target.value })\n              }\n              name=\"address\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formPhoneNo\">\n            <Form.Label>Phone No</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your phone no\"\n              value={orderData.phoneno}\n              onChange={(e) =>\n                setOrderData({ ...orderData, phoneno: e.target.value })\n              }\n              name=\"phoneno\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formAge\">\n            <Form.Label>Age</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your age\"\n              value={orderData.age}\n              onChange={(e) =>\n                setOrderData({ ...orderData, age: e.target.value })\n              }\n              name=\"age\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formNoOfPersons\">\n            <Form.Label>Number of Persons</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={orderData.noOfPersons}\n              onChange={(e) => {\n                const newNoOfPersons = parseInt(e.target.value, 10);\n                setOrderData({\n                  ...orderData,\n                  noOfPersons: newNoOfPersons,\n                  beneficiaries: Array.from(\n                    { length: newNoOfPersons },\n                    (_, i) =>\n                      orderData.beneficiaries[i] || {\n                        name: \"\",\n                        age: \"\",\n                        gender: \"\",\n                      }\n                  ),\n                });\n              }}\n              name=\"noOfPersons\"\n            >\n              {[...Array(10).keys()].map((num) => (\n                <option key={num + 1} value={num + 1}>\n                  {num + 1}\n                </option>\n              ))}\n            </Form.Control>\n            <Form.Text className=\"text-warning\">\n              Note : The same set of tests/packages will be added for all\n              persons.\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formAppointmentDate\">\n            <Form.Label>Appointment Date</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={orderData.appointmentDate}\n              onChange={(e) =>\n                setOrderData({\n                  ...orderData,\n                  appointmentDate: e.target.value,\n                })\n              }\n              name=\"appointmentDate\"\n            >\n              {generateDateOptions()}\n            </Form.Control>\n          </Form.Group>\n          <h5>Beneficiaries</h5>\n          {orderData.beneficiaries.map((beneficiary, index) => (\n            <div key={index}>\n              <Form.Group controlId={`formBeneficiaryName${index}`}>\n                <Form.Label>Beneficiary Name {index + 1}</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter name\"\n                  value={beneficiary.name}\n                  onChange={(e) =>\n                    handleBeneficiariesChange(index, \"name\", e.target.value)\n                  }\n                  name={`beneficiaryName${index}`}\n                />\n              </Form.Group>\n              <Form.Group controlId={`formBeneficiaryAge${index}`}>\n                <Form.Label>Age</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter age\"\n                  value={beneficiary.age}\n                  onChange={(e) =>\n                    handleBeneficiariesChange(index, \"age\", e.target.value)\n                  }\n                  name={`beneficiaryAge${index}`}\n                />\n              </Form.Group>\n              <Form.Group controlId={`formBeneficiaryGender${index}`}>\n                <Form.Label>Gender</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={beneficiary.gender}\n                  onChange={(e) =>\n                    handleBeneficiariesChange(index, \"gender\", e.target.value)\n                  }\n                  name={`beneficiaryGender${index}`}\n                >\n                  <option value=\"\">Select Gender</option>\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                  <option value=\"Other\">Other</option>\n                </Form.Control>\n              </Form.Group>\n            </div>\n          ))}\n          <h5>Select Additional Tests (Optional)</h5>\n          <Form.Group controlId=\"formAdditionalTests\">\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Fasting Blood Sugar (FBS) @ Rs. 80 / Person\"\n              checked={orderData.tests.includes(\"Fasting Blood Sugar (FBS)\")}\n              onChange={(e) =>\n                handleTestChange(\n                  \"Fasting Blood Sugar (FBS)\",\n                  e.target.checked\n                )\n              }\n            />\n            <Form.Check\n              type=\"checkbox\"\n              label=\"CRP Test @ Rs. 480 / Person\"\n              checked={orderData.tests.includes(\"CRP Test\")}\n              onChange={(e) =>\n                handleTestChange(\"CRP Test\", e.target.checked)\n              }\n            />\n            <Form.Check\n              type=\"checkbox\"\n              label=\"ESR Test @ Rs. 120 / Person\"\n              checked={orderData.tests.includes(\"ESR Test\")}\n              onChange={(e) =>\n                handleTestChange(\"ESR Test\", e.target.checked)\n              }\n            />\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Covid Antibody IgG @ Rs. 400 / Person\"\n              checked={orderData.tests.includes(\"Covid Antibody IgG\")}\n              onChange={(e) =>\n                handleTestChange(\"Covid Antibody IgG\", e.target.checked)\n              }\n            />\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Complete Urine Analysis @ Rs. 510 / Person\"\n              checked={orderData.tests.includes(\"Complete Urine Analysis\")}\n              onChange={(e) =>\n                handleTestChange(\n                  \"Complete Urine Analysis\",\n                  e.target.checked\n                )\n              }\n            />\n            <Form.Check\n              type=\"checkbox\"\n              label=\"Troponin - Heart Attack Risk Test (ACTNI) @ Rs. 650 / Person\"\n              checked={orderData.tests.includes(\n                \"Troponin - Heart Attack Risk Test (ACTNI)\"\n              )}\n              onChange={(e) =>\n                handleTestChange(\n                  \"Troponin - Heart Attack Risk Test (ACTNI)\",\n                  e.target.checked\n                )\n              }\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleSubmitOrder}>\n          Confirm Purchase\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CheckoutForm;\n","import React from \"react\";\nimport \"../Styles/Highlight.css\";\n\nconst Highlight = ({ number }) => {\n  return (\n    <div className=\"highlight\">\n      <div className=\"highlight-number\">{number}</div>\n      <div className=\"highlight-text\">Tests</div>\n    </div>\n  );\n};\n\nexport default Highlight;\n","import { useContext, useState, useEffect } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"./product.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DataContainer } from \"../../App\";\nimport { toast } from \"react-toastify\";\nimport CheckoutForm from \"../CheckoutForm\";\nimport Highlight from \"../../components/Highlight\"; // Import Highlight component\n\nconst Product = ({ title, productItem, addToCart, showImage = true, desc, enableHoverEffect, isShopList }) => {\n  const { setSelectedProduct } = useContext(DataContainer);\n  const router = useNavigate();\n  const [count, setCount] = useState(0);\n  const [showCheckout, setShowCheckout] = useState(false);\n  const [selectedPackage, setSelectedPackage] = useState(null);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const handleClick = () => {\n    setSelectedProduct(productItem);\n    localStorage.setItem(\n      `selectedProduct-${productItem.id}`,\n      JSON.stringify(productItem)\n    );\n    router(`/shop/${productItem.id}`);\n  };\n  const handleAddToCart = () => {\n    addToCart(productItem); // Only call the addToCart function passed from the parent\n    if (isMobile && title === \"Popular Tests\") {\n      setTimeout(() => {\n        router('/cart');\n      }, 1000); // Delay to allow the toast message to be seen\n    }\n  };\n  \n\n  const handleBookNow = (pkg) => {\n    setSelectedPackage(pkg);\n    setShowCheckout(true);\n  };\n\n  const handleCloseCheckout = () => {\n    setShowCheckout(false);\n    setSelectedPackage(null);\n  };\n\n  const extractNumberOfTests = (productName) => {\n    const match = productName.match(/\\((\\d+)\\s*Tests\\)/i);\n    return match ? match[1] : '';\n  };\n\n  const isPopularPackage = title === \"Popular Packages\";\n  const isPopularTest = title === \"Popular Tests\";\n\n  if (isShopList) {\n    return (\n      <Col\n        lg={12}\n        md={12}\n        sm={12}\n        xs={12}\n        className=\"product-list-item\"\n      >\n        <div className=\"product-info\">\n          <h3 onClick={handleClick}>{productItem.productName}</h3>\n          <p>Lab: {productItem.labName}</p>\n        </div>\n        <div className=\"product-price\">\n          <h4>&#8377;{productItem.price}</h4>\n          <div className=\"product-buttons\">\n            <button\n              className=\"product-button book-now\"\n              onClick={handleClick}\n            >\n              Book Now\n            </button>\n            <button\n              className=\"product-button add-to-cart\"\n              onClick={handleAddToCart}\n            >\n              Add To Cart\n            </button>\n          </div>\n        </div>\n      </Col>\n    );\n  } else {\n    return (\n      <Col\n        lg={3}\n        md={4}\n        sm={6}\n        xs={12}\n        className={`product mtop ${enableHoverEffect ? 'hover-enabled' : ''} ${isPopularPackage ? 'popular-packages' : ''}`}\n      >\n        {title === \"Big Discount\" && (\n          <span className=\"discount\">{productItem.discount}% Off</span>\n        )}\n        <div className=\"product-image-container\">\n          {showImage && (\n            <img\n              loading=\"lazy\"\n              onClick={handleClick}\n              src={productItem.imgUrl}\n              alt={productItem.productName}\n              className=\"product-image\"\n            />\n          )}\n          {enableHoverEffect && (\n            <div className=\"hover-overlay\">\n              <h2>{productItem.overlayTitle}</h2>\n              <ul>\n                {productItem.overlayDetails?.map((detail, index) => (\n                  <li key={index}>{detail}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n        {desc && <p className=\"product-description\">{desc}</p>}\n        {isPopularPackage && (\n          <Highlight number={extractNumberOfTests(productItem.productName)} />\n        )}\n        <div className=\"product-like\">\n          <label>{count}</label> <br />\n          <ion-icon name=\"heart-outline\" onClick={increment}></ion-icon>\n        </div>\n        <div className=\"product-details\">\n          <h3 onClick={handleClick}>{productItem.productName}</h3>\n          <div className=\"price\">\n            <h4>&#8377;{productItem.price}</h4>\n            {!isPopularPackage && (\n              <button\n                aria-label=\"Add\"\n                type=\"submit\"\n                className={`add ${isPopularTest ? 'add-to-cart-full' : ''}`}\n                onClick={handleAddToCart}\n              >\n                {isPopularTest ? 'Add to Cart' : <ion-icon name=\"add\"></ion-icon>}\n              </button>\n            )}\n          </div>\n          {isPopularPackage && (\n            <>\n              <div className=\"product-buttons\">\n                <button\n                  className=\"product-button book-now\"\n                  onClick={() => handleBookNow(productItem)}\n                >\n                  Book Now\n                </button>\n              </div>\n              <div className=\"extra-details\">\n                <ul>\n                  <li><i className=\"fa fa-check-circle\"></i> NABL, CAP, ISO 9001</li>\n                  <li><i className=\"fa fa-check-circle\"></i> Free Home Sample Pickup</li>\n                  <li><i className=\"fa fa-check-circle\"></i> Online Report Delivery</li>\n                </ul>\n              </div>\n            </>\n          )}\n        </div>\n        {showCheckout && (\n          <CheckoutForm\n            show={showCheckout}\n            handleClose={handleCloseCheckout}\n            CartItem={selectedPackage ? [selectedPackage] : []}\n            setCartItem={() => {}}\n          />\n        )}\n      </Col>\n    );\n  }\n};\n\nexport default Product;\n","import { Row } from \"react-bootstrap\";\nimport { useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport Product from \"./Product/Product\";\nimport { DataContainer } from \"../App\";\nimport \"../Styles/Shop.css\";\n\nconst ShopList = ({ productItems }) => {\n  const { addToCart } = useContext(DataContainer);\n  const navigate = useNavigate();\n\n  useEffect(() => {}, [productItems]);\n\n  const handleAddToCart = (product) => {\n    addToCart(product);\n    const toastId = toast.success(\"Product has been added to cart!\", { autoClose: 1000 });\n\n    setTimeout(() => {\n      toast.update(toastId, {\n        render: (\n          <>\n            <div>Product has been added to cart!</div>\n            <button\n              onClick={() => {\n                navigate(\"/cart\");\n                toast.dismiss(toastId);\n              }}\n              style={{\n                color: \"#007bff\",\n                background: \"none\",\n                border: \"none\",\n                textDecoration: \"underline\",\n                cursor: \"pointer\",\n              }}\n            >\n              Go to Cart\n            </button>\n          </>\n        ),\n        autoClose: false,\n        closeButton: true,\n      });\n    }, 1000);\n  };\n\n  if (productItems.length === 0) {\n    return <h1 className=\"not-found\">Product Not Found !!</h1>;\n  } else {\n    return (\n      <div>\n        <ToastContainer />\n        <Row className=\"justify-content-center\">\n          {productItems.map((productItem) => {\n            return (\n              <Product\n                key={productItem.id}\n                title={null}\n                productItem={productItem}\n                addToCart={addToCart}\n                handleAddToCart={handleAddToCart}\n                showImage={false}\n                isShopList={true} // Pass the prop to indicate this is a ShopList\n              />\n            );\n          })}\n        </Row>\n      </div>\n    );\n  }\n};\n\nexport default ShopList;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"names":["_ref","title","_jsxs","className","children","_jsx","src","productBg","alt","Container","Row","Col","show","handleClose","CartItem","setCartItem","_useState","useState","pincode","name","email","address","phoneno","age","noOfPersons","appointmentDate","beneficiaries","tests","_useState2","_slicedToArray","orderData","setOrderData","_useState3","_useState4","pincodeMessage","setPincodeMessage","useEffect","prevState","_objectSpread","Array","from","length","gender","handleBeneficiariesChange","index","field","value","newBeneficiaries","_toConsumableArray","_defineProperty","handleTestChange","test","isChecked","updatedTests","includes","push","filter","t","handleSubmitOrder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderDetails","payloadSize","wrap","_context","prev","next","availablePincodes","alert","abrupt","cartItems","console","log","JSON","stringify","concat","axios","process","sent","data","success","t0","error","stop","apply","arguments","Modal","onHide","closeButton","Form","controlId","InputGroup","type","placeholder","onChange","e","target","Button","variant","onClick","as","newNoOfPersons","parseInt","_","i","keys","map","num","options","currentDate","Date","date","setDate","getDate","dateString","toLocaleDateString","year","month","day","generateDateOptions","beneficiary","label","checked","number","productItem","addToCart","_ref$showImage","showImage","desc","enableHoverEffect","isShopList","setSelectedProduct","useContext","DataContainer","router","useNavigate","count","setCount","showCheckout","setShowCheckout","_useState5","_useState6","selectedPackage","setSelectedPackage","_useState7","_useState8","isMobile","setIsMobile","handleResize","window","innerWidth","addEventListener","removeEventListener","_productItem$overlayD","handleClick","localStorage","setItem","id","handleAddToCart","setTimeout","isPopularPackage","isPopularTest","lg","md","sm","xs","productName","labName","price","discount","loading","imgUrl","overlayTitle","overlayDetails","detail","Highlight","match","extractNumberOfTests","_Fragment","CheckoutForm","productItems","navigate","product","toastId","toast","autoClose","render","style","color","background","border","textDecoration","cursor","ToastContainer","Product","InputGroupText","createWithBsPrefix","Component","React","ref","bsPrefix","size","hasValidation","_ref$as","props","_objectWithoutProperties","_excluded","useBootstrapPrefix","contextValue","useMemo","InputGroupContext","classNames","displayName","Object","assign","Text","Radio","FormCheckInput","Checkbox"],"sourceRoot":""}