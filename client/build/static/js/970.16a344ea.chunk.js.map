{"version":3,"file":"static/js/970.16a344ea.chunk.js","mappings":"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","sources":["components/Banner/Banner.jsx","components/EmbeddedCheckoutForm.js","components/Product/Product.jsx","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","components/ShopList.jsx","pages/ProductDetails.jsx"],"sourcesContent":["import { Col, Container, Row } from \"react-bootstrap\";\nimport productBg from \"../../Images/table.jpg\";\nimport \"./banner.css\";\nconst Banner = ({title}) => {\n    return ( \n        <div className=\"image-container\">\n            <img src={productBg} alt=\"Product-bg\" />\n            <div className=\"overlay\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h2>{title}</h2>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    );\n}\n\nexport default Banner;","import React, { useState, useEffect } from 'react';\nimport { Button, InputGroup, Form, Container, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { availablePincodes } from '../components/availablePincodes.js';\n\nconst EmbeddedCheckoutForm = ({ CartItem, setCartItem }) => {\n  const [orderData, setOrderData] = useState({\n    pincode: '',\n    name: '',\n    email: '',\n    address: '',\n    phoneno: '',\n    age: '',\n    noOfPersons: 1,\n    appointmentDate: '',\n    beneficiaries: [],\n  });\n  const [pincodeMessage, setPincodeMessage] = useState('');\n\n  useEffect(() => {\n    setOrderData((prevState) => ({\n      ...prevState,\n      beneficiaries: Array.from({ length: prevState.noOfPersons }, () => ({\n        name: '',\n        age: '',\n        gender: '',\n      })),\n    }));\n  }, [orderData.noOfPersons]);\n\n  const checkAvailability = () => {\n    if (availablePincodes.includes(orderData.pincode)) {\n      setPincodeMessage('Service is available in your pincode!');\n    } else {\n      setPincodeMessage('Sorry, service is not available in your pincode.');\n    }\n  };\n\n  const handleBeneficiariesChange = (index, field, value) => {\n    const newBeneficiaries = [...orderData.beneficiaries];\n    newBeneficiaries[index] = { ...newBeneficiaries[index], [field]: value };\n    setOrderData({ ...orderData, beneficiaries: newBeneficiaries });\n  };\n\n  const handleSubmitOrder = async () => {\n    if (!availablePincodes.includes(orderData.pincode)) {\n      alert('Service is not available in your pincode.');\n      return;\n    }\n\n    const orderDetails = {\n      pincode: orderData.pincode,\n      name: orderData.name,\n      email: orderData.email,\n      address: orderData.address,\n      phoneno: orderData.phoneno,\n      age: orderData.age,\n      noOfPersons: orderData.noOfPersons,\n      appointmentDate: orderData.appointmentDate,\n      beneficiaries: orderData.beneficiaries,\n      cartItems: CartItem,\n    };\n\n    console.log(\"Order Details: \", orderDetails); // Log the order details\n\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_API_URL}/api/orders`,\n        orderDetails\n      );\n      if (response.data.success) {\n        setCartItem([]);\n        alert('Order submitted successfully!');\n      } else {\n        alert('Error submitting order. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting order:', error);\n      alert('Error submitting order. Please try again.');\n    }\n  };\n\n  const generateDateOptions = () => {\n    const options = [];\n    const currentDate = new Date();\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(currentDate.getDate() + i);\n      const dateString = date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n      });\n      options.push(\n        <option key={i} value={dateString}>\n          {dateString}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  return (\n    <Container className=\"embedded-checkout-form\">\n      <Row>\n        <Col md={12}>\n        <h3 className=\"form-heading\">Booking Form</h3>\n          <Form>\n            <Form.Group controlId=\"formPincode\">\n              <InputGroup>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Pincode\"\n                  value={orderData.pincode}\n                  onChange={(e) =>\n                    setOrderData({ ...orderData, pincode: e.target.value })\n                  }\n                  name=\"pincode\"\n                  className=\"form-control\"\n                />\n                <Button variant=\"outline-secondary\" onClick={checkAvailability}>\n                  Check Availability\n                </Button>\n              </InputGroup>\n              <Form.Text className=\"text-muted\">{pincodeMessage}</Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Name :</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                value={orderData.name}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, name: e.target.value })\n                }\n                name=\"name\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={orderData.email}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, email: e.target.value })\n                }\n                name=\"email\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAddress\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your address\"\n                value={orderData.address}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, address: e.target.value })\n                }\n                name=\"address\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formPhoneNo\">\n              <Form.Label>Phone No</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your phone no\"\n                value={orderData.phoneno}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, phoneno: e.target.value })\n                }\n                name=\"phoneno\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formAge\">\n              <Form.Label>Age</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your age\"\n                value={orderData.age}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, age: e.target.value })\n                }\n                name=\"age\"\n                className=\"form-control\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formNoOfPersons\">\n              <Form.Label>Number of Persons</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.noOfPersons}\n                onChange={(e) => {\n                  const newNoOfPersons = parseInt(e.target.value, 10);\n                  setOrderData({\n                    ...orderData,\n                    noOfPersons: newNoOfPersons,\n                    beneficiaries: Array.from(\n                      { length: newNoOfPersons },\n                      (_, i) => orderData.beneficiaries[i] || { name: '', age: '', gender: '' }\n                    ),\n                  });\n                }}\n                name=\"noOfPersons\"\n                className=\"form-control\"\n              >\n                {[...Array(10).keys()].map((num) => (\n                  <option key={num + 1} value={num + 1}>\n                    {num + 1}\n                  </option>\n                ))}\n              </Form.Control>\n              <Form.Text className=\"text-warning\">\n                 Note : The same set of tests/packages will be added for all persons.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formAppointmentDate\">\n              <Form.Label>Appointment Date</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={orderData.appointmentDate}\n                onChange={(e) =>\n                  setOrderData({ ...orderData, appointmentDate: e.target.value })\n                }\n                name=\"appointmentDate\"\n                className=\"form-control\"\n              >\n                {generateDateOptions()}\n              </Form.Control>\n            </Form.Group>\n            <h5>Beneficiaries</h5>\n            {orderData.beneficiaries.map((beneficiary, index) => (\n              <div key={index}>\n                <Form.Group controlId={`formBeneficiaryName${index}`}>\n                  <Form.Label>Beneficiary Name {index + 1}</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter name\"\n                    value={beneficiary.name}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, 'name', e.target.value)\n                    }\n                    name={`beneficiaryName${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryAge${index}`}>\n                  <Form.Label>Age</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter age\"\n                    value={beneficiary.age}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, 'age', e.target.value)\n                    }\n                    name={`beneficiaryAge${index}`}\n                    className=\"form-control\"\n                  />\n                </Form.Group>\n                <Form.Group controlId={`formBeneficiaryGender${index}`}>\n                  <Form.Label>Gender</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={beneficiary.gender}\n                    onChange={(e) =>\n                      handleBeneficiariesChange(index, 'gender', e.target.value)\n                    }\n                    name={`beneficiaryGender${index}`}\n                    className=\"form-control\"\n                  >\n                    <option value=\"\">Select Gender</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                    <option value=\"Other\">Other</option>\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            ))}\n            <Button variant=\"primary\" onClick={handleSubmitOrder} className=\"confirm-button\">\n              Book Now\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default EmbeddedCheckoutForm;\n","import { useContext, useState } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"./product.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DataContainer } from \"../../App\";\nimport { toast } from \"react-toastify\";\n\nconst Product = ({ title, productItem, addToCart, showImage = true, desc, enableHoverEffect, isShopList }) => {\n  const { setSelectedProduct } = useContext(DataContainer);\n  const router = useNavigate();\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const handleClick = () => {\n    setSelectedProduct(productItem);\n    localStorage.setItem(\n      `selectedProduct-${productItem.id}`,\n      JSON.stringify(productItem)\n    );\n    router(`/shop/${productItem.id}`);\n  };\n\n  const handleAddToCart = () => {\n    addToCart(productItem);\n    toast.success(\"Product has been added to cart!\");\n  };\n\n  if (isShopList) {\n    return (\n      <Col\n        lg={12}\n        md={12}\n        sm={12}\n        xs={12}\n        className=\"product-list-item\"\n      >\n        <div className=\"product-info\">\n          <h3 onClick={handleClick}>{productItem.productName}</h3>\n          <p>Lab: {productItem.labName}</p>\n        </div>\n        <div className=\"product-price\">\n          <h4>&#8377;{productItem.price}</h4>\n          <div className=\"product-buttons\">\n            <button\n              className=\"product-button book-now\"\n              onClick={handleClick}\n            >\n              Book Now\n            </button>\n            <button\n              className=\"product-button add-to-cart\"\n              onClick={handleAddToCart}\n            >\n              Add To Cart\n            </button>\n          </div>\n        </div>\n      </Col>\n    );\n  } else {\n    return (\n      <Col\n        lg={3}\n        md={4}\n        sm={6}\n        xs={12}\n        className={`product mtop ${enableHoverEffect ? 'hover-enabled' : ''}`}\n      >\n        {title === \"Big Discount\" && (\n          <span className=\"discount\">{productItem.discount}% Off</span>\n        )}\n        <div className=\"product-image-container\">\n          {showImage && (\n            <img\n              loading=\"lazy\"\n              onClick={handleClick}\n              src={productItem.imgUrl}\n              alt={productItem.productName}\n              className=\"product-image\"\n            />\n          )}\n          {enableHoverEffect && (\n            <div className=\"hover-overlay\">\n              <h2>{productItem.overlayTitle}</h2>\n              <ul>\n                {productItem.overlayDetails?.map((detail, index) => (\n                  <li key={index}>{detail}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n        {desc && <p className=\"product-description\">{desc}</p>}\n        <div className=\"product-like\">\n          <label>{count}</label> <br />\n          <ion-icon name=\"heart-outline\" onClick={increment}></ion-icon>\n        </div>\n        <div className=\"product-details\">\n          <h3 onClick={handleClick}>{productItem.productName}</h3>\n          <div className=\"price\">\n            <h4>&#8377;{productItem.price}</h4>\n            <button\n              aria-label=\"Add\"\n              type=\"submit\"\n              className={`add ${isShopList ? 'shop-list-add-button' : ''}`}\n              onClick={handleAddToCart}\n            >\n              <ion-icon name=\"add\"></ion-icon>\n            </button>\n          </div>\n        </div>\n      </Col>\n    );\n  }\n};\n\nexport default Product;\n","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: \"page-link\",\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","import { Row, Pagination } from \"react-bootstrap\";\nimport { useEffect, useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport Product from \"./Product/Product\";\nimport { DataContainer } from \"../App\";\nimport \"../Styles/Shop.css\";\n\nconst ShopList = ({ productItems }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 50; // Change as needed\n  const totalPages = Math.ceil(productItems.length / itemsPerPage);\n  const displayedProducts = productItems.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n  const { addToCart } = useContext(DataContainer);\n  const navigate = useNavigate();\n\n  useEffect(() => {}, [productItems]);\n\n  const handleAddToCart = (product) => {\n    addToCart(product);\n    const toastId = toast.success(\"Product has been added to cart!\", { autoClose: 1000 });\n\n    setTimeout(() => {\n      toast.update(toastId, {\n        render: (\n          <>\n            <div>Product has been added to cart!</div>\n            <button\n              onClick={() => {\n                navigate(\"/cart\");\n                toast.dismiss(toastId);\n              }}\n              style={{\n                color: \"#007bff\",\n                background: \"none\",\n                border: \"none\",\n                textDecoration: \"underline\",\n                cursor: \"pointer\",\n              }}\n            >\n              Go to Cart\n            </button>\n          </>\n        ),\n        autoClose: false,\n        closeButton: true,\n      });\n    }, 1000);\n  };\n\n  if (productItems.length === 0) {\n    return <h1 className=\"not-found\">Product Not Found !!</h1>;\n  } else {\n    return (\n      <div>\n        <ToastContainer />\n        <Row className=\"justify-content-center\">\n          {displayedProducts.map((productItem) => {\n            return (\n              <Product\n                key={productItem.id}\n                title={null}\n                productItem={productItem}\n                addToCart={addToCart}\n                handleAddToCart={handleAddToCart}\n                showImage={false}\n                isShopList={true} // Pass the prop to indicate this is a ShopList\n              />\n            );\n          })}\n        </Row>\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n          <Pagination>\n            <Pagination.Prev\n              onClick={() => setCurrentPage((old) => Math.max(old - 1, 1))}\n              disabled={currentPage === 1}\n            />\n            {[...Array(totalPages)].map((_, idx) => (\n              <Pagination.Item\n                key={idx}\n                active={idx + 1 === currentPage}\n                onClick={() => setCurrentPage(idx + 1)}\n              >\n                {idx + 1}\n              </Pagination.Item>\n            ))}\n            <Pagination.Next\n              onClick={() =>\n                setCurrentPage((old) => Math.min(old + 1, totalPages))\n              }\n              disabled={currentPage === totalPages}\n            />\n          </Pagination>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default ShopList;\n","import { Fragment, useContext, useEffect, useState } from \"react\";\nimport Banner from \"../components/Banner/Banner\";\nimport { DataContainer } from \"../App\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport ShopList from \"../components/ShopList\";\nimport { products } from \"../utils/products\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport EmbeddedCheckoutForm from \"../components/EmbeddedCheckoutForm.js\";\nimport \"../Styles/productDetails.css\";\n\nconst ProductDetails = () => {\n  const [listSelected, setListSelected] = useState(\"desc\");\n  const [relatedProducts, setRelatedProducts] = useState([]);\n  const [includedTests, setIncludedTests] = useState([]);\n  const [expandedCategory, setExpandedCategory] = useState(null);\n  const { selectedProduct, setSelectedProduct, addToCart } =\n    useContext(DataContainer);\n  const { id } = useParams();\n  const [quantity, setQuantity] = useState(1);\n\n  useEffect(() => {\n    if (!selectedProduct) {\n      const storedProduct = localStorage.getItem(`selectedProduct-${id}`);\n      setSelectedProduct(JSON.parse(storedProduct));\n    }\n  }, [id, selectedProduct, setSelectedProduct]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (selectedProduct?.includedTests) {\n      const allTests = selectedProduct.includedTests.flatMap(\n        (category) => category.tests\n      );\n      setIncludedTests(\n        products.filter((product) => allTests.includes(product.id))\n      );\n    }\n    setRelatedProducts(\n      products.filter(\n        (item) =>\n          item.category === selectedProduct?.category &&\n          item.id !== selectedProduct?.id\n      )\n    );\n  }, [selectedProduct]);\n\n  useEffect(() => {\n    return () => {\n      setSelectedProduct(null);\n    };\n  }, [setSelectedProduct]);\n\n  const handleQuantityChange = (event) => {\n    setQuantity(parseInt(event.target.value));\n  };\n\n  const handleAdd = (selectedProduct, quantity) => {\n    addToCart(selectedProduct, quantity);\n    toast.success(\"Product has been added to cart!\");\n  };\n\n  return (\n    <Fragment>\n      <Banner title={selectedProduct?.productName} />\n      <Container className=\"product-page\">\n        <Row>\n          <Col md={8}>\n            <div className=\"product-box\">\n              <section>\n                <Row className=\"justify-content-center\">\n                  <Col md={6}>\n                    <img loading=\"lazy\" src={selectedProduct?.imgUrl} alt=\"\" />\n                  </Col>\n                  <h1>{selectedProduct?.products}</h1>\n                  <Col md={6}>\n                    <h2>{selectedProduct?.productName}</h2>\n                    <div className=\"info\">\n                      <span className=\"price\">&#8377;{selectedProduct?.price}</span>\n                      <span>category: {selectedProduct?.category}</span>\n                    </div>\n                    <p>{selectedProduct?.shortDesc}</p>\n                    <input\n                      className=\"qty-input\"\n                      type=\"number\"\n                      placeholder=\"Qty\"\n                      value={quantity}\n                      onChange={handleQuantityChange}\n                    />\n                    <button\n                      aria-label=\"Add\"\n                      type=\"submit\"\n                      className=\"add\"\n                      onClick={() => handleAdd(selectedProduct, quantity)}\n                    >\n                      Add To Cart\n                    </button>\n                  </Col>\n                </Row>\n              </section>\n              \n              {/* Included Tests section */}\n              {selectedProduct?.includedTests &&\n                selectedProduct.includedTests.length > 0 && (\n                  <section className=\"included-tests\">\n                    <h3>Included Tests</h3>\n                    {selectedProduct.includedTests.map((category) => (\n                      <div key={category.categoryName}>\n                        <h4\n                          onClick={() =>\n                            setExpandedCategory(\n                              expandedCategory === category.categoryName\n                                ? null\n                                : category.categoryName\n                            )\n                          }\n                          style={{\n                            cursor: \"pointer\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          {expandedCategory === category.categoryName ? (\n                            <i\n                              className=\"fa fa-chevron-down\"\n                              style={{ marginRight: \"10px\" }}\n                            ></i>\n                          ) : (\n                            <i\n                              className=\"fa fa-chevron-right\"\n                              style={{ marginRight: \"10px\" }}\n                            ></i>\n                          )}\n                          {category.categoryName}\n                        </h4>\n\n                        {expandedCategory === category.categoryName && (\n                          <Row>\n                            {category.tests.map((testId) => {\n                              const test = products.find((p) => p.id === testId);\n                              return (\n                                <Col md={4} key={testId}>\n                                  <div className=\"test-item\">\n                                    <h5>{test.productName}</h5>\n                                    <p>{test.shortDesc}</p>\n                                  </div>\n                                </Col>\n                              );\n                            })}\n                          </Row>\n                        )}\n                      </div>\n                    ))}\n                  </section>\n                )}\n\n              <section className=\"product-reviews\">\n                <ul>\n                  <li\n                    style={{\n                      color: listSelected === \"desc\" ? \"black\" : \"#9c9b9b\",\n                    }}\n                    onClick={() => setListSelected(\"desc\")}\n                  >\n                    Description\n                  </li>\n                </ul>\n                {listSelected === \"desc\" ? (\n                  <p>{selectedProduct?.description}</p>\n                ) : (\n                  <div className=\"rates\">\n                    {selectedProduct?.reviews.map((rate) => (\n                      <div className=\"rate-comment\" key={rate.rating}>\n                        <span>Jhon Doe</span>\n                        <span>{rate.rating} (rating)</span>\n                        <p>{rate.text}</p>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </section>\n\n              {/* <section className=\"related-products\">\n                <h3>You might also like</h3>\n                <ShopList productItems={relatedProducts} addToCart={addToCart} />\n              </section> */}\n            </div>\n          </Col>\n          <Col md={4}>\n            <div className=\"checkout-box form-container\">\n              <EmbeddedCheckoutForm\n                CartItem={selectedProduct ? [selectedProduct] : []}\n                setCartItem={setSelectedProduct}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default ProductDetails;\n"],"names":["_ref","title","_jsxs","className","children","_jsx","src","productBg","alt","Container","Row","Col","CartItem","setCartItem","_useState","useState","pincode","name","email","address","phoneno","age","noOfPersons","appointmentDate","beneficiaries","_useState2","_slicedToArray","orderData","setOrderData","_useState3","_useState4","pincodeMessage","setPincodeMessage","useEffect","prevState","_objectSpread","Array","from","length","gender","handleBeneficiariesChange","index","field","value","newBeneficiaries","_toConsumableArray","_defineProperty","handleSubmitOrder","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderDetails","wrap","_context","prev","next","availablePincodes","alert","abrupt","cartItems","console","log","axios","concat","process","sent","data","success","t0","error","stop","apply","arguments","md","Form","controlId","InputGroup","type","placeholder","onChange","e","target","Button","variant","onClick","as","newNoOfPersons","parseInt","_","i","keys","map","num","options","currentDate","Date","date","setDate","getDate","dateString","toLocaleDateString","year","month","day","push","generateDateOptions","beneficiary","_productItem$overlayD","productItem","addToCart","_ref$showImage","showImage","desc","enableHoverEffect","isShopList","setSelectedProduct","useContext","DataContainer","router","useNavigate","count","setCount","handleClick","localStorage","setItem","id","JSON","stringify","handleAddToCart","toast","lg","sm","xs","productName","labName","price","discount","loading","imgUrl","overlayTitle","overlayDetails","detail","PageItem","React","ref","_ref$active","active","_ref$disabled","disabled","style","_ref$activeLabel","activeLabel","props","_objectWithoutProperties","_excluded","Component","Anchor","classNames","displayName","createButton","defaultValue","label","undefined","_excluded2","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","Object","assign","Item","productItems","currentPage","setCurrentPage","totalPages","Math","ceil","displayedProducts","slice","navigate","product","toastId","autoClose","setTimeout","render","_Fragment","color","background","border","textDecoration","cursor","closeButton","ToastContainer","Product","display","justifyContent","alignItems","old","max","idx","min","listSelected","setListSelected","setRelatedProducts","_useState5","_useState6","setIncludedTests","_useState7","_useState8","expandedCategory","setExpandedCategory","_useContext","selectedProduct","useParams","_useState9","_useState10","quantity","setQuantity","storedProduct","getItem","parse","window","scrollTo","includedTests","allTests","flatMap","category","tests","products","includes","item","Fragment","Banner","shortDesc","event","handleAdd","categoryName","marginRight","testId","test","p","description","reviews","rate","rating","text","EmbeddedCheckoutForm"],"sourceRoot":""}